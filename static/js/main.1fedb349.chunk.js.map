{"version":3,"sources":["graphics/replay-logo.svg","graphics/streamlab-logo.svg","components/Header.tsx","store/model/streamDetails.ts","store/model/sharing.ts","store/actions/streamDetails.ts","components/HeaderRows.tsx","panels/StreamDetails.tsx","components/JsonEditor.tsx","store/actions/history.ts","panels/PlayerOptions.tsx","store/actions/playerOptions.ts","store/actions/player.ts","panels/Advanced.tsx","store/actions/ui.ts","panels/Information.tsx","store/model/messageResolver.ts","panels/FormHistory.tsx","panels/Sharing.tsx","panels/Sidebar.tsx","panels/Basic.tsx","panels/VideoStreamerResolver.tsx","panels/Player.tsx","panels/HeaderBar.tsx","App.tsx","serviceWorker.ts","store/reducers/ui.ts","store/reducers/streamDetails.ts","store/reducers/player.ts","store/reducers/playerOptions.ts","store/model/history.ts","store/reducers/history.ts","store/reducers/information.ts","store/model/messages.ts","store/reducers/index.ts","store/migrations.ts","store/persistentStore.ts","index.tsx"],"names":["module","exports","Level","BaseTech","StreamTechnology","DrmTechnology","SubtitlesFormat","PlayerLogLevel","Header","level","children","headingProps","as","H1","size","my","mx","px","H2","m","p","textAlign","H3","H4","H6","fontWeight","justifySelf","getStyles","playerLibraries","AUTO","SHAKA_PLAYER","HLS_JS","RX_PLAYER","HTML","DEFAULT_PLAYER_LOG_LEVEL","WARNING","contentTypes","DASH","HLS","PROGRESSIVE","MSS","reverseContentTypes","Object","entries","map","kv","reverse","reduce","obj","key","val","Number","drmSchemes","WIDEVINE","PLAYREADY","FAIRPLAY","subtitlesContentTypes","WEBVTT","TTML","SRT","streamTechLabels","label","drmTechLabels","subtitlesFormatLabels","detectStreamType","streamUrl","streamTypes","find","type","urlMatch","urlNotMatch","test","detectStreamTechnology","streamType","detectSubtitlesFormat","subtitlesUrl","getLabel","tech","options","createPlayerSource","streamResource","drmLicenseResource","drmCertificateResource","subtitlesResource","startOffset","url","startPosition","undefined","contentType","technology","getContentType","source","licenseUrl","drmType","licenseAcquisitionDetails","headers","length","forEach","h","name","value","licenseRequestHeaders","certificateUrl","widevineServiceCertificateUrl","fairPlayCertificateUrl","src","subtitlesFormat","match","hostname","textTracks","getLogLevelLabel","logLevel","found","getRemainingQueryString","queryString","paramName","delimiter","remaining","substr","split","filter","indexOf","join","parseSetupFromQueryString","setupParameter","startsWith","getQueryParameter","encodedValue","JSON","parse","decodeURIComponent","e","console","error","buildUrlFromState","state","str","origin","pathname","search","stringify","encodeURIComponent","replace","updateAddressBar","window","history","pushState","document","title","removeSetupFromUrl","location","updateStreamDetailsField","resourceUpdate","applyBrowserEnvironment","userAgent","supportedDrmTechnologies","isLegacyMicrosoft","isChromiumEdgeOnWindows","isSafari","detectSupportedDrmTechnologies","urlSetup","HeaderRows","props","onHeadersChange","boxProps","useState","isOpen","setIsOpen","headersRef","useRef","useEffect","prev","current","Array","fill","mb","onChange","onAnimationEnd","onDelete","index","arr","id","in","onAnimationComplete","direction","py","flex","placeholder","mr","evt","target","aria-label","icon","Delete","onClick","renderRow","header","headersCopy","slice","splice","filterDrmTechLabels","drmTechnologies","StreamDetailRow","useProxy","techOptions","isHeadersEnabled","gridColumn","concat","Date","now","Button","rightIcon","ChevronDown","i","isDisabled","StreamDetails","useSelector","streamDetails","isDrmCertificateApplicable","dispatch","useDispatch","handleResourceFieldChange","resource","display","gridTemplateColumns","gridAutoRows","gridGap","alignItems","mt","htmlFor","step","width","min","jsonlint","HistoryEntryFilter","JsonEditor","mode","theme","lineNumbers","tabSize","gutters","lint","trim","onBeforeChange","editor","data","newValue","PlayerOptions","playerOptions","showPlaybackMonitor","customConfiguration","playerLibrary","templateColumns","gap","style","setPlayerLibrary","handlePlayerLibraryClick","isChecked","checked","isNaN","setLogLevel","handleLogLevelClick","href","isExternal","textDecoration","setPlayerConfiguration","createBasicHistoryEntry","timestamp","toISOString","formData","omitSupportedDrmTechnologies","createAdvancedHistoryEntry","playBasic","getState","historyEntry","playAdvanced","trimmed","videoStreamer","playbackMonitor","visibleAtStart","createPlayerOptions","playerLibraryOverride","stop","SectionHeader","isRequired","backgroundColor","lineHeight","fontStyle","color","ml","Advanced","expandedIndices","ui","expandedAdvancedAccordionIndices","isPlaying","player","isPlayable","isPlayerOptionsModified","isModified","React","handleCloseClick","cancelRef","defaultIndex","allowMultiple","indices","justify","colorScheme","currentTarget","blur","variant","leastDestructiveRef","onClose","fontSize","ref","renderMessage","text","link","status","overflowX","alignSelf","ExternalLink","Information","messages","information","position","styleType","bottom","left","right","align","MessageLevel","formatDate","isoDate","formatLabel","entry","techLabel","getStreamTechLabel","stream","HistoryListItem","isSelected","handleClick","cursor","_hover","whiteSpace","overflow","textOverflow","message","isResourcePopulated","inputStyle","userSelect","padding","border","height","marginBottom","renderHeaderRow","Fragment","isReadOnly","StreamResourceFields","techLabels","some","FormHistory","selectedEntry","isFullClearOpen","setIsFullClearOpen","isClearUnnamedOpen","setIsClearUnnamedOpen","handleDeleteHistory","handleDeleteUnnamed","cancelFullDeleteRef","cancelUnnamedDeleteRef","overflowY","minHeight","maxHeight","borderWidth","rounded","borderColor","handleEntryClick","code","rowGap","columnGap","pt","Sharing","shareState","advancedMode","hasContent","extractPersistibleFormData","useClipboard","onCopy","hasCopied","borderRadius","wordBreak","aria-readonly","role","leftIcon","Check","Copy","Sidebar","activeTabIndex","rightPaneActiveTabIndex","errorMessageCount","ERROR","flexDirection","alignContent","isFitted","outline","Basic","onSubmit","preventDefault","VideoStreamerResolver","muxjs","getMatchingVideoStreamer","navigator","stickyPlayerControls","interactionDetector","inactivityDelay","onStreamStateChange","streamState","onPlaybackActionsReady","actions","log","process","info","dir","Player","onError","err","Error","sourceError","loader","frag","rest","context","onExit","top","opacity","ReplayLogo","alt","margin","HeaderBar","isRightPaneExpanded","StreamlabLogo","justifyContent","minWidth","textContent","extendTheme","components","Menu","baseStyle","list","zIndex","gutterStyle","App","rightPaneWidth","onDragEnd","sizes","gutterAlign","gutterSize","collapsed","minSize","Boolean","action","initResource","initState","drmSupportsCertificate","initialState","newStateFromLicenseField","newStateFromCertificateField","isInitialState","keys","hasValue","isArray","sortByKey","a","b","localeCompare","isObject","constructor","isDeepEqual","entriesA","sort","entriesB","addOrUpdateEntry","newEntry","foundIndex","findIndex","clonedEntries","historyListFilter","BOTH","replaceIndex","prevHistory","latestItem","push","createRootReducerWithInformation","rules","messageResolver","prevState","nextState","REHYDRATE","payload","playerLibraryDescriptions","shaka","version","hlsjs","RxPlayer","HLS_SAFARI","streamTechnologyToLibMappings","compatibleStreamTechnologies","SAFARI","getStreamTechnology","getTechProperties","displayCondition","INFO","SUCCESS","opened","isPlayerLibraryOverridden","getPlayerLibraryMessage","includes","isIncompatibleStream","streamLabel","l","libLabel","getLibrary","subtitlesType","t","rootReducer","combineReducers","getRootState","messageRules","rule","migratePlayerOptionsV1","migrations","1","migrateConfiguration","migrate","createMigrate","debug","persistConfig","storage","blacklist","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","createPersistentStore","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,8HCG/BC,E,iOAAAA,K,QAAAA,E,QAAAA,E,QAAAA,E,QAAAA,E,QAAAA,E,SAAAA,M,KASZ,I,MCFYC,EAOAC,EAOAC,EAMAC,EA4BAC,EDIGC,EANiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAaC,EAAvB,2CAC9B,kBAAC,IAAD,eAASC,GAAIH,GA7CG,SAACA,GACjB,OAAQA,GACN,KAAKP,EAAMW,GACT,MAAO,CACLC,KAAM,KACNC,GAAI,EACJC,GAAI,EACJC,GAAI,GAER,KAAKf,EAAMgB,GACT,MAAO,CACLJ,KAAM,KACNK,EAAG,EACHC,EAAG,EACHC,UAAW,QAEf,KAAKnB,EAAMoB,GACT,MAAO,CACLR,KAAM,KACNC,GAAI,GAER,KAAKb,EAAMqB,GACT,MAAO,CACLT,KAAM,KACNC,GAAI,GAER,KAAKb,EAAMsB,GACT,MAAO,CACLV,KAAM,KACNW,WAAY,SACZC,YAAa,UAEjB,QACE,MAAO,CACLZ,KAAM,OAWYa,CAAUlB,GAAYE,GAC3CD,I,0BChDOP,O,gBAAAA,M,cAOAC,O,eAAAA,I,aAAAA,I,6BAAAA,I,cAAAA,M,cAOAC,O,uBAAAA,I,yBAAAA,I,wBAAAA,M,cAMAC,O,mBAAAA,I,eAAAA,I,cAAAA,M,cA4BAC,O,eAAAA,I,iBAAAA,I,qBAAAA,I,eAAAA,I,iBAAAA,I,sBAAAA,M,KASL,IAAMqB,EAAkB,CAC7BC,KAAM,sBACNC,aAAc,eACdC,OAAQ,SACRC,UAAW,WACXC,KAAM,wDAMKC,EAA2B3B,EAAe4B,QAQ1CC,GAAY,mBACtBhC,EAAiBiC,KAAO,wBADF,cAEtBjC,EAAiBkC,IAAM,yBAFD,cAGtBlC,EAAiBmC,YAAc,aAHT,cAItBnC,EAAiBoC,IAAM,+BAJD,GAOnBC,EAA2DC,OAAOC,QAAQP,GAC7EQ,KAAI,SAACC,GAAD,OAAQA,EAAGC,aACfC,QAAO,SAACC,EAAD,GAAsB,IAAD,mBAAdC,EAAc,KAATC,EAAS,KAE3B,OADAF,EAAIC,GAAOE,OAAOD,GACXF,IACN,IAECI,GAAU,mBACb/C,EAAcgD,SAAW,sBADZ,cAEbhD,EAAciD,UAAY,2BAFb,cAGbjD,EAAckD,SAAW,qBAHZ,GAMVC,GAAqB,mBACxBlD,EAAgBmD,OAAS,YADD,cAExBnD,EAAgBoD,KAAO,wBAFC,cAGxBpD,EAAgBqD,IAAM,YAHE,GAMdC,EAAmB,CAC9B,CACEX,IAAK9C,EAAS0B,KACdgC,MAAO,QAET,CACEZ,IAAK7C,EAAiBiC,KACtBwB,MAAO,aAET,CACEZ,IAAK7C,EAAiBkC,IACtBuB,MAAO,OAET,CACEZ,IAAK7C,EAAiBoC,IACtBqB,MAAO,iBAET,CACEZ,IAAK7C,EAAiBmC,YACtBsB,MAAO,sBAIEC,EAAgB,CAC3B,CACEb,IAAK5C,EAAcgD,SACnBQ,MAAO,YAET,CACEZ,IAAK5C,EAAciD,UACnBO,MAAO,aAET,CACEZ,IAAK5C,EAAckD,SACnBM,MAAO,aAIEE,EAAwB,CACnC,CACEd,IAAK9C,EAAS0B,KACdgC,MAAO,QAET,CACEZ,IAAK3C,EAAgBmD,OACrBI,MAAO,UAET,CACEZ,IAAK3C,EAAgBoD,KACrBG,MAAO,gBAoBEG,EAAmB,SAACC,GAAD,OAE9BC,cAAYC,MAAK,SAACC,GAAU,IAClBC,EAA0BD,EAA1BC,SAAUC,EAAgBF,EAAhBE,YAClB,OAAIA,EACKD,EAASE,KAAKN,KAAeK,EAAYC,KAAKN,GAE9CI,EAASE,KAAKN,OAIdO,EAAyB,SAACP,GACrC,IAAMQ,EAAaT,EAAiBC,GACpC,GAAIQ,EACF,OAAOhC,EAAoBgC,EAAWrC,aAAa,KAiB1CsC,EAAwB,SAACC,GACpC,MAAI,QAAQJ,KAAKI,GACRrE,EAAgBmD,OACd,wBAAwBc,KAAKI,GAC/BrE,EAAgBoD,KACd,QAAQa,KAAKI,GACfrE,EAAgBqD,SADlB,GAKIiB,EAAW,SAAoBC,EAAyBC,GAA7C,OACrBA,EAAQX,MAAK,qBAAGlB,MAAkB4B,MAASC,EAAQ,IAAM,CAAEjB,MAAO,KAAMA,OAE9DkB,EAAqB,SAAC,GAMe,IALhDC,EAK+C,EAL/CA,eACAC,EAI+C,EAJ/CA,mBACAC,EAG+C,EAH/CA,uBACAC,EAE+C,EAF/CA,kBACAC,EAC+C,EAD/CA,YAEMnB,EAAYe,EAAeK,IAC3BC,EAAgC,KAAhBF,OAAqBG,EAAYH,EACvD,GAAInB,EAAW,CACb,IAAMuB,EACJR,EAAeS,aAAetF,EAAS0B,KAnEtB,SAAC4C,GACtB,GAAIA,EACF,OAAOA,EAAWrC,aAAa,GAkEzBsD,CAAe1B,EAAiBC,IAChC7B,EAAa4C,EAAeS,YAClC,GAAID,EAAa,CACf,IAAMG,EAAyB,CAC7B1B,YACAuB,cACAF,iBAGF,GAAIL,EAAoB,CACtB,IAAMW,EAAaX,EAAmBI,IACtC,GAAIO,EAAY,CAMd,GALAD,EAAOC,WAAaA,EACpBD,EAAOE,QACLZ,EAAmBQ,aAAetF,EAAS0B,KAAOuB,EAAW6B,EAAmBQ,iBAAcF,EAChGI,EAAOG,0BAA4B,GAE/Bb,GAAsBA,EAAmBc,QAAQC,OAAQ,CAC3D,IAAMD,EAAmC,GACzCd,EAAmBc,QAAQE,SAAQ,SAACC,GAAD,OAAQH,EAAQG,EAAEC,MAAQD,EAAEE,SAC/DT,EAAOG,0BAA0BO,sBAAwBN,EAG3D,IAAMO,EAAiBpB,GAA0BA,EAAuBG,IACpEiB,IACErB,EAAmBQ,aAAepF,EAAcgD,SAClDsC,EAAOG,0BAA0BS,8BAAgCD,EACxDrB,EAAmBQ,aAAepF,EAAckD,WACzDoC,EAAOG,0BAA0BU,uBAAyBF,KAMlE,GAAInB,EAAmB,CACrB,IAAMsB,EAAMtB,EAAkBE,IAC9B,GAAIoB,EAAK,CACP,IAAMC,EACJvB,EAAkBM,aAAetF,EAAS0B,KAAO6C,EAAsB+B,GAAOtB,EAAkBM,WAClG,GAAIiB,EAAiB,CACnB,IAAMlB,EAAchC,EAAsBkD,GACpCC,EAAQF,EAAIE,MAAM,iCAClBC,EAAWD,GAASA,EAAM,GAC1B9C,EAAK,8BAA0B+C,GACrCjB,EAAOkB,WAAa,CAAC,CAAErB,cAAaiB,MAAK5C,YAI/C,OAAO8B,KAKAmB,EAAmB,SAACC,GAC/B,IAAMC,EAAQtE,OAAOC,QAAQpC,GAAgB4D,MAAK,mCAAOiC,GAAP,kBAAkBW,IAAaX,KACjF,OAAOY,GAASA,EAAM,ICjRlBC,GAA0B,SAACC,EAAqBC,GAAwC,IAArBC,EAAoB,uDAAR,IACnF,GAAIF,EAAYlB,OAAS,EAAG,CAC1B,IAAMqB,EAAYH,EACfI,OAAO,GACPC,MAAM,KACNC,QAAO,SAACpG,GAAD,OAAgC,IAAzBA,EAAEqG,QAAQN,MACxBO,KAAK,KACR,GAAIL,EAAUrB,OAAS,EACrB,OAAOoB,EAAYC,EAGvB,MAAO,IAoBIM,GAA4B,SAACT,GACxC,IACE,IAAMU,EAxCgB,SAACV,EAAqBjE,GAAtB,OACxBiE,EAAYlB,QACZkB,EACGI,OAAO,GACPC,MAAM,KACNpD,MAAK,SAAC/C,GAAD,OAAOA,EAAEyG,WAAW5E,MAmCH6E,CAAkBZ,EAlDtB,MAmDnB,GAAIU,EAAgB,CAClB,IAAMG,EAAeH,EAAeN,OApDnB,KAoDyCtB,QAC1D,GAAI+B,EAAa/B,OACf,OAAOgC,KAAKC,MAAMC,mBAAmBH,KAGzC,MAAOI,GACPC,QAAQC,MAAR,mDA1DmB,KA0DnB,UAISC,GAAoB,SAACC,EAAD,OA/BPC,EA+BsCC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,SAAUC,EAAjD,EAAiDA,OAAjD,gBAC5BF,GAD4B,OACnBC,EADmB,YA9DV,MA8DU,QA/BPF,EAgCkCR,KAAKY,UAAUL,GA/BzEM,mBAAmBL,GAChBM,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,OAwBY,OACoD7B,GACjF0B,EAhEmB,QAwEVI,GAAmB,kBAC9BC,OAAOC,QAAQC,UAAU,GAAIC,SAASC,MALN,SAAC,GAAiD,IAA/CV,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,OAC7C,OAAOD,EAAWzB,GAAwB0B,EArErB,KAqE6C,KAIrBU,CAAmBF,SAASG,YCX9DC,GAA2B,SAACC,GAAD,MACtC,mBAAoBA,EAChB,CACEpF,KAzDoC,+BA0DpCgC,MAAOoD,EAAexE,gBAExB,uBAAwBwE,EACxB,CACEpF,KA7DyC,oCA8DzCgC,MAAOoD,EAAevE,oBAExB,2BAA4BuE,EAC5B,CACEpF,KAjE6C,wCAkE7CgC,MAAOoD,EAAetE,wBAExB,sBAAuBsE,EACvB,CACEpF,KArEuC,kCAsEvCgC,MAAOoD,EAAerE,mBAExB,CACEf,KAxEiC,4BAyEjCgC,MAAOoD,EAAepE,cAGjBqE,GAA0B,SAACC,EAAmBxC,GAEzD,MAAO,CACL9C,KA9EqC,4BA+ErCgC,MAAO,CACLuD,yBFwGwC,SAACD,GAC7C,OAAIE,4BAAkBF,GACb,CAACrJ,EAAciD,WACbuG,kCAAwBH,GAC1B,CAACrJ,EAAciD,UAAWjD,EAAcgD,UACtCyG,mBAASJ,GACX,CAACrJ,EAAckD,UAGf,CAAClD,EAAcgD,UErHS0G,CAA+BL,GAK5DM,SAAUrC,GAA0BT,M,+CCN3B+C,GA9CqB,SAACC,GAAW,IAAD,EACUA,EAA/CnE,eADqC,MAC3B,GAD2B,EACvBoE,EAAiCD,EAAjCC,gBAAoBC,EADG,YACUF,EADV,iCAGjBG,mBAAoB,IAHH,mBAGtCC,EAHsC,KAG9BC,EAH8B,KAIvCC,EAAaC,mBAEnBC,qBAAU,WACR,IAAMC,EAAOH,EAAWI,QACpBD,EACEA,EAAK3E,OAASD,EAAQC,OACxBuE,EAAU,GAAD,oBAAKD,GAAL,EAAa,KACbK,EAAK3E,OAASD,EAAQC,QAC/BuE,EAAU,IAAIM,MAAM9E,EAAQC,QAAQ8E,MAAK,IAG3CP,EAAU,IAAIM,MAAM9E,EAAQC,QAAQ8E,MAAK,IAE3CN,EAAWI,QAAU7E,IACpB,CAACA,EAASuE,IAqBb,OACE,kBAAC,IAAD,eAAKS,GAAIhF,EAAQC,OAAS,EAAI,GAAOoE,GAClCrE,EAAQnD,KAAOmD,EAAQnD,IA1EZ,SAChB0H,EACAU,EACAC,EACAC,GAJgB,OAKb,WAA8BC,EAAeC,GAAmB,IAA7DjF,EAA4D,EAA5DA,KAAMC,EAAsD,EAAtDA,MAAOiF,EAA+C,EAA/CA,GACnB,OACE,kBAAC,KAAD,CAAUpI,IAAKoI,EAAIC,GAAIhB,EAAOa,GAAQI,oBAAqB,kBAAMN,EAAeE,KAC9E,kBAAC,IAAD,CAAMK,UAAU,MAAMC,GAAI,GACxB,kBAAC,IAAD,CACEC,KAAK,WACLC,YAAY,cACZC,GAAI,EACJxF,MAAOD,EACP6E,SAAU,SAACa,GAAD,OACRb,EAAS,CAAE7E,KAAM0F,EAAIC,OAAO1F,MAAOA,QAAOiF,MAAMF,MAGpD,kBAAC,IAAD,CACEO,KAAK,WACLC,YAAY,eACZC,GAAI,EACJxF,MAAOA,EACP4E,SAAU,SAACa,GAAD,OACRb,EAAS,CAAE7E,OAAMC,MAAOyF,EAAIC,OAAO1F,MAAOiF,MAAMF,MAGpD,kBAAC,KAAD,CAAYO,KAAK,IAAIK,aAAW,gBAAgBC,KAAM,kBAACC,GAAA,EAAD,MAAgBC,QAAS,kBAAMhB,EAASC,IAAQS,GAAI,OA+ChFO,CAAU7B,GArBrB,SAAC8B,EAAgBjB,GACpC,IAAMkB,EAActG,EAAQuG,MAAM,GAClCD,EAAYlB,GAASiB,EACrBjC,EAAgBkC,MAQS,SAAClB,GAC1B,IAAKb,EAAOa,GAAQ,CAClB,IAAMkB,EAActG,EAAQuG,MAAM,GAClCD,EAAYE,OAAOpB,EAAO,GAC1BhB,EAAgBkC,OATC,SAAClB,GACpBb,EAAOa,IAAS,EAChBZ,EAAU,aAAID,UCxBZkC,GAAsB,SAACC,GAAD,OAC1B3I,EAAc0D,QAAO,gBAAGvE,EAAH,EAAGA,IAAH,OAAawJ,EAAgBhF,QAAQxE,IAAQ,MAE9DyJ,GAAsC,SAAC,GAAD,EAC1CrB,GAD0C,IAE1ChG,EAF0C,EAE1CA,IACAxB,EAH0C,EAG1CA,MAEAkC,GAL0C,EAI1C4G,SAJ0C,EAK1C5G,SACAN,EAN0C,EAM1CA,WACAmH,EAP0C,EAO1CA,YACA5B,EAR0C,EAQ1CA,SACA6B,EAT0C,EAS1CA,iBAT0C,OAW1C,oCACE,kBAAC,IAAD,CAAaC,WAAYD,EAAmB,EAAI,YAC9C,kBAAC,IAAD,CACE7B,SAAU,SAACa,GAAD,OAA8Cb,EAAS,CAAE3F,IAAKwG,EAAIC,OAAO1F,SACnFuF,YAAa9H,EAAQ,OACrBO,KAAK,MACLgC,MAAOf,KAGVwH,GACC,kBAAC,IAAD,CAAQX,QAAS,kBAAMlB,EAAS,CAAEjF,QAASA,EAAQgH,OAAO,CAAE5G,KAAM,GAAIC,MAAO,GAAIiF,GAAI2B,KAAKC,YAA1F,cAIDL,EAAY5G,OAAS,EACpB,kBAAC,IAAD,CAAM+F,aAAYlI,EAAQ,oBACxB,kBAAC,IAAD,CAAYjD,GAAIsM,IAAQC,UAAW,kBAACC,EAAA,EAAD,OAChCxI,EAASa,EAAYmH,IAExB,kBAAC,IAAD,KACGA,EAAYhK,KAAI,WAAoCyK,GAApC,IAAGpK,EAAH,EAAGA,IAAKY,EAAR,EAAQA,MAAR,OACf,kBAAC,IAAD,CAAUZ,IAAKoK,EAAGnB,QAAS,kBAAMlB,EAAS,CAAEvF,WAAYxC,MACrDY,QAMT,kBAAC,IAAD,CAAQyJ,YAAY,GAAO1I,EAASa,EAAYmH,KA5C/B,EAyDnB,kBAAC,IAAD,CAAKE,WAAW,YACd,kBAAC,GAAD,CACE3C,gBAAiB,SAACpE,GAAD,OAA4DiF,EAAS,CAAEjF,aACxFA,QAASA,OAsGFwH,GAhGiB,WAAO,IAAD,EAShCC,cAAY,SAACjF,GAAD,sBAA2BA,EAAMkF,kBAP/CzI,EAFkC,EAElCA,eACAC,EAHkC,EAGlCA,mBACAC,EAJkC,EAIlCA,uBACAC,EALkC,EAKlCA,kBACAC,EANkC,EAMlCA,YANkC,IAOlCuE,gCAPkC,MAOP,CAACtJ,EAAcgD,UAPR,EAQlCqK,EARkC,EAQlCA,2BAGIC,EAAWC,eACXC,EAA4B,SAACC,GAEjC,OADA/E,KACO4E,EAASpE,GAAyBuE,KAG3C,OACE,0BAAM/B,aAAW,uBACf,kBAAC,IAAD,CACEgC,QAAQ,OACRC,oBAAmC,gBACnCC,aAAa,OACbC,QAAS,EACTC,WAAW,UAEX,kBAAC,EAAD,CAAQ1N,MAAOP,EAAMsB,GAAIE,YAAY,OAAOoL,WAAW,YAAvD,QAGA,kBAAC,EAAD,CAAQrM,MAAOP,EAAMsB,IAArB,eA/Fe,EAiGf,kBAAC,GAAD,eACE6J,GAAG,SACHxH,MAAM,SACN+I,YAAahJ,EACbiJ,kBAAkB,EAClB7B,SAAU,SAAChG,GAAD,OACR6I,EAA0B,CAAE7I,qBAE1BA,IAEN,kBAAC,GAAD,eACEnB,MAAM,cACNwH,GAAG,UACHuB,YAAaJ,GAAoB7C,GACjCkD,kBAAgB,EAChB7B,SAAU,SAAC/F,GAAD,OACR4I,EAA0B,CAAE5I,yBAE1BA,IAELyI,GACC,kBAAC,GAAD,eACErC,GAAG,cACHxH,MAAM,kBACN+I,YAAaJ,GAAoB,CAACvH,EAAmBQ,aACrDoH,kBAAkB,EAClB7B,SAAU,SAAC9F,GAAD,OACR2I,EAA0B,CAAE3I,6BAE1BA,IAGR,kBAAC,GAAD,eACEmG,GAAG,YACHxH,MAAM,YACN+I,YAAa7I,EACb8I,kBAAkB,EAClB7B,SAAU,SAAC7F,GAAD,OACR0I,EAA0B,CAAE1I,wBAE1BA,KAGR,kBAAC,IAAD,CAAa4I,QAAQ,OAAOI,WAAW,SAASC,GAAI,GAClD,kBAAC,IAAD,CAAWC,QAAQ,oBAAnB,iBACA,kBAAC,IAAD,CACEhD,GAAG,mBACHjH,KAAK,SACLkK,KAAM,KACNlI,MAAOhB,EACPmJ,MAAO,GACPlN,UAAU,QACVmN,IAAK,EACLxD,SAAU,SAAC7C,GAAD,OACR0F,EAA0B,CAAEzI,YAAgC,KAAnB+C,EAAE2D,OAAO1F,MAAe,GAAKjD,OAAOgF,EAAE2D,OAAO1F,YAG1F,kBAAC,IAAD,CAAgBpF,GAAI,EAAG+J,GAAI,GAA3B,c,wFC3LR/B,OAAOyF,SAAWA,KAOX,ICVKC,GDUCC,GAA8B,SAAC,GAAD,IAAGvI,EAAH,EAAGA,MAAO4E,EAAV,EAAUA,SAAV,OACzC,kBAAC,cAAD,CACE5E,MAAOA,EACPtB,QAAS,CACP8J,KAAM,mBACNC,MAAO,UACPC,aAAa,EACbC,QAAS,EACTC,QAAS,CAAC,2BACVC,KAAM7I,GAASA,EAAM8I,QAEvBC,eAAgB,SAACC,EAAQC,EAAMC,GAAf,OAA4BtE,EAASsE,OEoE1CC,GAlFiB,WAAO,IAAD,EAC0C/B,cAAY,SAACjF,GAAD,sBACrFA,EAAMiH,kBADHzI,EAD4B,EAC5BA,SAAU0I,EADkB,EAClBA,oBAAqBC,EADH,EACGA,oBAAqBC,EADxB,EACwBA,cAGtDhC,EAAWC,eAmBjB,OACE,0BAAM7B,aAAW,uBACf,kBAAC,KAAD,CAAM6D,gBAAgB,WAAWC,IAAK,EAAG9O,GAAI,EAAGoN,WAAW,UACzD,kBAAC,IAAD,CAAMpC,aAAW,uBACf,kBAAC,IAAD,CAAYnL,GAAIsM,IAAQC,UAAW,kBAACC,EAAA,EAAD,MAAqB0C,MAAO,CAAEpO,YAAa,QAC3EE,EAAgB+N,IAEnB,kBAAC,IAAD,KACGjN,OAAOC,QAAQf,GAEbgB,KAAI,mCAAEK,EAAF,KAAOmD,EAAP,YAEH,kBAAC,IAAD,CAAUnD,IAAKA,EAAKiJ,QAAS,kBA7BV,SAAC9F,GAChC2C,KACA4E,ECuB4B,SAACvH,GAAD,MAAmD,CACjFhC,KA5CgC,qBA6ChCgC,SDzBW2J,CAAiB3J,IA2BqB4J,CAAyB/M,KACzDmD,QAKX,kBAAC,IAAD,2CACA,kBAAC,IAAD,CACEiF,GAAG,0BACHyE,MAAO,CAAEpO,YAAa,OACtBuO,UAAWR,EACXzE,SA5B4B,SAACa,GAEnC,OADA9C,KACO4E,ECC4E,CACrFvJ,KApCqC,0BAqCrCgC,MDHwCyF,EAAIC,OAAOoE,aA4B7C,kBAAC,IAAD,CAAW7B,QAAQ,2BAAnB,+CACA,kBAAC,IAAD,CAAMtC,aAAW,kBACf,kBAAC,IAAD,CAAYnL,GAAIsM,IAAQC,UAAW,kBAACC,EAAA,EAAD,MAAqB0C,MAAO,CAAEpO,YAAa,QAC3EoF,EAAiBC,IAEpB,kBAAC,IAAD,KACGrE,OAAOC,QAAQpC,GAEbiH,QAAO,gBAAEvE,EAAF,2BAAYkN,MAAMhN,OAAO5C,EAAe0C,QAC/CL,KAAI,mCAAEK,EAAF,KAAOmD,EAAP,YACH,kBAAC,IAAD,CAAUnD,IAAKmD,EAAO8F,QAAS,kBAhDjB,SAAC9F,GAC3B2C,KACA4E,ECIuB,SAACvH,GAAD,MAA+C,CACxEhC,KAhC2B,gBAiC3BgC,SDNWgK,CAAYhK,IA8C4BiK,CAAoBlN,OAAOiD,MAC7DnD,QAKX,kBAAC,IAAD,2DAEF,kBAAC,IAAD,CAAMmL,GAAI,EAAGrD,GAAI,GAAjB,8CAC8C,IAC5C,kBAAC,KAAD,CACEuF,KAAK,gEACLC,YAAU,EACVT,MAAO,CAAEU,eAAgB,cAH3B,wBAFF,KAWA,kBAAC,GAAD,CAAYpK,MAAOsJ,EAAqB1E,SA/DJ,SAAC5E,GAEvC,OADA2C,KACO4E,ECU2B,SAACvH,GAAD,MAAkD,CACtFhC,KAxCsC,2BAyCtCgC,SDZkBqK,CAAuBrK,SEArCsK,GAA0B,SAACjD,GAAD,MAA2D,CACzFkD,WAAW,IAAI3D,MAAO4D,cACtBzK,KAAM,GACN0K,SAAU,CACRpD,cAAe,CACbzI,eAAgB,CACdK,IAAKoI,EAAczI,eAAeK,IAClCI,WAAYgI,EAAczI,eAAeS,gBAM3CqL,GAA+B,SACnCrD,GAE8CA,EAAtC9D,yBACR,OAFyD,YACX8D,EADW,+BAKrDsD,GAA6B,SACjCtD,EACA+B,GAFiC,MAGP,CAC1BmB,WAAW,IAAI3D,MAAO4D,cACtBzK,KAAM,GACN0K,SAAU,CACRpD,cAAeqD,GAA6BrD,GAC5C+B,mBAISwB,GAAY,SAACrD,EAA4BsD,GAA8B,IAC1ExD,EAAkBwD,IAAlBxD,cACAzI,EAAmByI,EAAnBzI,eACFW,EAASZ,EAAmB,CAAEC,mBAChCW,GACFgI,EAAS,CACPvJ,KA7Dc,OA8DdgC,MAAO,CACLT,SACAuL,aAAcR,GAAwBjD,OAMjC0D,GAAe,SAACxD,EAA4BsD,GAA8B,IAAD,EAC3CA,IAAjCxD,EAD4E,EAC5EA,cAAe+B,EAD6D,EAC7DA,cACjB7J,EAASZ,EAAmB0I,GAC5B3I,EToN2B,SAAC,GAA2E,IAAzEiC,EAAwE,EAAxEA,SAAU0I,EAA8D,EAA9DA,oBACxC2B,EADsG,EAAzC1B,oBAC/BR,OAChCpK,EAA+B,GACnC,GAAIsM,EACF,IACEtM,EAAUkD,KAAKC,MAAMmJ,GACrB,MAAOjJ,IAWX,OARArD,EAAQuM,cAAgBvM,EAAQuM,eAAiB,GAEjDvM,EAAQuM,cAActK,SAAWD,EAAiBC,GAElDjC,EAAQwM,gBAAkBxM,EAAQwM,iBAAmB,GAErDxM,EAAQwM,gBAAgBC,eAAiB9B,EAElC3K,ESrOS0M,CAAoBhC,GAC9BiC,EAAwBjC,EAAcG,cACxChK,GACFgI,EAAS,CACPvJ,KA7Ec,OA8EdgC,MAAO,CACLT,SACAb,UACA2M,wBACAP,aAAcH,GAA2B,2BAAKtD,GAAN,IAAqBrI,YAAa,KAAMoK,OAM3EkC,GAAO,SAAC/D,GAAD,OAA8CA,EAAS,CAAEvJ,KAvFzD,UCgBduN,GAAoE,SAAC,GAAD,IAAGvF,EAAH,EAAGA,OAAQwF,EAAX,EAAWA,WAAX,OACxE,kBAAC,IAAD,CAAiBC,gBAAgB,YAC/B,kBAAC,EAAD,CAAQpR,MAAOP,EAAMgB,GAAIwK,KAAK,IAAIoG,WAAY,GAC3C1F,GACCwF,GACA,kBAAC,IAAD,CAAMhR,GAAG,KAAKmR,UAAU,SAASC,MAAM,WAAWvQ,WAAW,SAASwQ,GAAG,KACtE,IADH,aAMJ,kBAAC,IAAD,QA+EWC,GA3EY,WACzB,IAAMC,EAAkB3E,cAAY,SAACjF,GAAD,OAAqBA,EAAM6J,GAAGC,oCAC5DC,EAAY9E,cAAY,SAACjF,GAAD,QAAuBA,EAAMgK,OAAO5M,UAC5D6M,EAAahF,cAAY,SAACjF,GAAD,QAAuBA,EAAMkF,cAAczI,eAAeK,OACnFoN,EAA0BjF,cAAY,SAACjF,GAAD,OAAqBA,EAAMiH,cAAckD,cAJtD,EAMHC,IAAMtI,UAAkB,GANrB,mBAMxBC,EANwB,KAMhBC,EANgB,KAQzBoD,EAAWC,eACXgF,EAAmB,kBAAMrI,GAAU,IAanCsI,EAAYF,IAAMlI,OAA0B,MAClD,OACE,kBAAC,IAAD,CAAOsB,aAAW,kBAGhB,kBAAC,IAAD,CAAW+G,aAAcX,EAAiBY,eAAa,EAAC/H,SAP9B,SAACgI,GAAD,OAAuBrF,ECXkD,CACvGvJ,KAjDuC,4BAkDvCgC,MDSgG4M,MAQ1F,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAe5G,OAAO,iBAAiBwF,YAAU,IACjD,kBAAC,IAAD,CAAgBK,GAAI,EAAG7D,GAAI,EAAGyD,gBAAgB,SAC5C,kBAAC,GAAD,QAGJ,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAezF,OAAM,wBAAmBqG,EAA0B,KAAO,MACzE,kBAAC,IAAD,CAAgBR,GAAI,EAAG7D,GAAI,EAAGyD,gBAAgB,SAC5C,kBAAC,GAAD,SAIN,kBAAC,IAAD,CAAMoB,QAAQ,SAASxH,GAAI,GACzB,kBAAC,IAAD,CAAQyH,YAAY,QAAQhH,QA3Bf,SAACL,GAClBA,EAAIsH,cAAcC,OAClBzF,EAASwD,KAyB4CnQ,GAAI,EAAGsM,YAAakF,GAArE,QAGA,kBAAC,IAAD,CAAQU,YAAY,MAAMhH,QA1Bb,kBAAMyB,EAAS+D,KA0BmBpE,YAAagF,GAA5D,QAGA,kBAAC,IAAD,CAAQY,YAAY,MAAMG,QAAQ,UAAUnH,QAAS,kBAAM3B,GAAU,IAAOvJ,GAAI,GAAhF,mBAGA,kBAAC,IAAD,CAAasS,oBAAqBT,EAAWvI,OAAQA,EAAQiJ,QAASX,GACpE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAmBY,SAAS,KAAK/R,WAAW,QAA5C,eAGA,kBAAC,IAAD,gGAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQgS,IAAKZ,EAAW3G,QAAS0G,GAAjC,UAGA,kBAAC,IAAD,CAAQM,YAAY,MAAMhH,QAtDb,WACvB3B,GAAU,GACVxB,KACA4E,ECM+C,CACjDvJ,KAzDyB,iBDqGwC6N,GAAI,GAAzD,qB,kDEnGRyB,GAAgB,SAAC,EAAgCrG,GAAjC,IAAGsG,EAAH,EAAGA,KAAMlT,EAAT,EAASA,MAAOmT,EAAhB,EAAgBA,KAAhB,OACpB,kBAAC,KAAD,CAAU3Q,IAAKoK,GACb,kBAAC,KAAD,CAAOwG,OAAQpT,EAAO0N,WAAW,aAAa2B,MAAO,CAAEgE,UAAW,SAChE,kBAAC,KAAD,CAAWpI,KAAK,aACfkI,EACC,oCACE,kBAAC,KAAD,CAAMtD,KAAMsD,EAAMrD,YAAU,GACzBoD,GAEH,kBAAC,KAAD,CAAMI,UAAU,SAAS/S,GAAI,EAAGsP,KAAMsD,EAAMrD,YAAU,GACpD,kBAACyD,GAAA,EAAD,QAIJL,KA0BOM,GApBe,WAC5B,IAAMC,EAAW1G,cAAY,SAACjF,GAAD,OAAqBA,EAAM4L,YAAYD,YACpE,OACE,kBAAC,IAAD,CAAKnG,QAAQ,OAAOrC,KAAK,IAAI0I,SAAS,YACpC,kBAAC,KAAD,CAAMC,UAAU,QAAQH,EAAStR,IAAI8Q,KACrC,kBAAC,IAAD,CAAMU,SAAS,WAAWE,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,MAAM,UAA9D,KACK,IACH,kBAAC,KAAD,CAAMnE,KAAK,uCAAuCC,YAAU,EAACC,eAAe,aAA5E,uBAEQ,IAJV,OAKO,IACL,kBAAC,KAAD,CAAMF,KAAK,sCAAsCC,YAAU,EAACC,eAAe,aAA3E,qBANF,O,oBNtBM9B,O,eAAAA,I,iBAAAA,I,sBAAAA,Q,KA6BL,IOpCKgG,GCiDNC,GAAa,SAACC,GAAD,OAAqBA,EAAQ9L,QAAQ,IAAK,KAAKxB,OAAO,EAAG,KAMtEuN,GAAc,SAACC,GACnB,GAAIA,EAAM3O,KACR,OAAO2O,EAAM3O,KACP,IACEnB,EAAmB8P,EAAMjE,SAASpD,cAAlCzI,eACF2B,EAAQ3B,EAAeK,IAAIsB,MAAM,iCACjCC,EAAWD,GAASA,EAAM,GAC1BoO,EAXiB,SAAC,GAA4E,IAA1E1P,EAAyE,EAAzEA,IAAKI,EAAoE,EAApEA,WACjC,OAAOb,EAASa,IAAetF,EAAS0B,KAAO2C,EAAuBa,GAAOI,EAAY7B,GAUrEoR,CAAmBhQ,GAC/BiQ,EAASF,EAAUtN,QAAQ,UAAY,EAAI,UAAY,GAC7D,MAAM,GAAN,OAAUsN,GAAV,OAAsBE,EAAtB,eAAmCrO,GAAY,mBAI7CsO,GAAmG,SAAC,GAAD,IACvGJ,EADuG,EACvGA,MACAK,EAFuG,EAEvGA,WACAC,EAHuG,EAGvGA,YAHuG,OAKvG,kBAAC,IAAD,CACExU,GAAG,KACHQ,EAAG,EACHiU,OAAO,UACPxD,gBAAiBsD,EAAa,gBAAa5P,EAC3C+P,OAAQ,CAAEzD,gBAAiB,YAC3B/B,MAAO,CAAEvB,MAAO,OAAQgH,WAAY,SAAUC,SAAU,SAAUC,aAAc,YAChFzD,MAAO8C,EAAM3O,UAAOZ,EAAY,WAChC2G,QAASkJ,EACThM,MAAOuL,GAAWG,EAAMnE,WAAa,IAAMkE,GAAYC,IAEtDA,EAAMzM,OACL,kBAAC,KAAD,CAAO6K,YAAY,MAAM9E,GAAG,SAAShF,MAAK,sDAAiD0L,EAAMzM,MAAMqN,UAAvG,OAGC,IACFb,GAAYC,IAAUA,EAAM3O,KAAO,GAAK,KAAOwO,GAAWG,EAAMnE,cAI/DgF,GAAsB,SAAC7H,GAAD,SAAoCA,EAASzI,MAAOyI,EAAS/H,QAAQC,SAI3F4P,GAAa,CACjBC,WAH0C,OAI1ChE,gBAAiB,UACjBiE,QAAS,SACTC,OAAQ,OACRC,OAAQ,OACRC,aAAc,UAGVC,GAAkB,SAAC,GAAD,IAAG7K,EAAH,EAAGA,GAAIlF,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACtB,kBAAC,IAAM+P,SAAP,CAAgBlT,IAAKoI,GACnB,kBAAC,IAAD,CAAOjH,KAAK,OAAOgC,MAAOD,EAAMiQ,YAAU,EAACtG,MAAO8F,KAClD,kBAAC,IAAD,CAAOxR,KAAK,OAAOgC,MAAOA,EAAOgQ,YAAU,EAACtG,MAAO8F,OAIjDS,GAID,SAAC,GAAD,IAAGxS,EAAH,EAAGA,MAAOiK,EAAV,EAAUA,SAAUwI,EAApB,EAAoBA,WAApB,OACH,oCACE,kBAAC,IAAD,CAAW5U,YAAY,SAASmC,EAAhC,QACA,kBAAC,IAAD,CAAOO,KAAK,MAAMgC,MAAO0H,EAASzI,IAAK+Q,YAAU,EAACtG,MAAO8F,KACxD,aAAc9H,GAAYA,EAASnB,UAClC,oCACE,kBAAC,IAAD,CAAWjL,YAAY,SAAvB,aACA,kBAAC,KAAD,CAAUuO,WAAS,EAACmG,YAAU,KAGjCtI,EAASrI,aAAetF,EAAS0B,MAChC,oCACE,kBAAC,IAAD,CAAWH,YAAY,SAASmC,EAAhC,eACA,kBAAC,IAAD,CAAOO,KAAK,OAAOgC,MAAOxB,EAASkJ,EAASrI,WAAY6Q,GAAaF,YAAU,EAACtG,MAAO8F,MAG1F,YAAa9H,GAAYA,EAAS/H,QAAQwQ,MAAK,gBAAGpQ,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OAAqBD,GAAQC,KAC3E,oCACE,kBAAC,IAAD,CAAW2N,UAAU,QAAQrS,YAAY,SACtCmC,EADH,YAGA,kBAAC,KAAD,CAAM+L,gBAAgB,UAAUC,IAAK,EAAG1B,WAAW,UAChDL,EAAS/H,QAAQnD,IAAIsT,MAI1B,KAsQSM,GAjQe,WAC5B,IAAM7I,EAAWC,eACX3E,EAAUuE,cAAY,SAACjF,GAAD,OAAqBA,EAAMU,QAAQA,WACzDwN,EAAgBjJ,cAAY,SAACjF,GAAD,OAAqBA,EAAMU,QAAQwN,iBAHnC,EAKY9D,IAAMtI,UAAkB,GALpC,mBAK3BqM,EAL2B,KAKVC,EALU,OAMkBhE,IAAMtI,UAAkB,GAN1C,mBAM3BuM,EAN2B,KAMPC,EANO,KAQ5BjE,EAAmB,WACvB+D,GAAmB,GACnBE,GAAsB,IAWlBC,EAAsB,kBAAMnJ,ERjHqB,CACvDvJ,KAtD4B,oBQuKtB2S,EAAsB,kBAAMpJ,ERzGiD,CACnFvJ,KA9D4C,oCQgLtC4S,EAAsBrE,IAAMlI,OAA0B,MACtDwM,EAAyBtE,IAAMlI,OAA0B,MAC/D,OACE,kBAAC,IAAD,CAAKzJ,GAAI,GACP,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQP,MAAOP,EAAMqB,IAArB,gBACA,kBAAC,IAAD,4MAIG0H,EAAQjD,QACT,kBAAC,KAAD,CACEkR,UAAU,SACVrF,gBAAgB,QAChBsF,UAAW,GACXC,UAAW,GACXrW,GAAI,EACJsW,YAAY,MACZC,QAAQ,KACRC,YAAY,YAEXtO,EACEqD,MAAM,GACNxJ,UACAF,KAAI,SAACkS,GAAD,OACH,kBAAC,GAAD,CACE7R,IAAK6R,EAAMnE,UACXmE,MAAOA,EACPM,YAAa,kBApCJ,SAACN,GAAD,OAAyBnH,ERxI4B,CAC9EvJ,KAtCkC,uBAuClCgC,MQsI8E0O,IAoC3C0C,CAAiB1C,IACpCK,cAAesB,GAAiB3B,EAAMnE,YAAc8F,EAAc9F,kBAM7E8F,GACC,kBAAC,IAAD,CAAKrI,GAAI,EAAGhN,EAAG,EAAGyQ,gBAAgB,WAAWyF,QAAQ,KAAKvL,aAAW,sBACnE,kBAAC,KAAD,CACE6D,gBAAiB6G,EAAcpO,MAAQ,gBAAkB,WACzDwH,IAAK,EACL1B,WAAW,SACX/E,MACEqN,EAAcpO,MAAd,yCAEMoO,EAAcpO,MAAMqN,SAAWe,EAAcpO,MAAMoP,MAAQhB,EAAcpO,YAE3E9C,GAGLkR,EAAcpO,OACb,kBAAC,KAAD,CACE6K,YAAY,MACZ9E,GAAG,SACHhF,MAAK,sDAAiDqN,EAAcpO,MAAMqN,UAH5E,OAQF,kBAAC,EAAD,CAAQjV,MAAOP,EAAMqB,IAAKoT,GAAW8B,EAAc9F,YACnD,kBAAC,IAAD,CACEvM,KAAK,OACLuH,YAAY,8BACZvF,MAAOqQ,EAActQ,KACrB6E,SAtEmB,SAACa,GAAD,OAC7B8B,ERrIoG,CACtGvJ,KAzCuC,4BA0CvCgC,MQmI0CyF,EAAIC,OAAO1F,SAsEzCyL,gBAAgB,WAGpB,kBAAC,IAAD,qJAIA,kBAAC,KAAD,CAAMzD,GAAI,EAAGwB,gBAAgB,WAAW8H,OAAQ,EAAGC,UAAW,EAAGxJ,WAAW,UAC1E,kBAAC,GAAD,CACEtK,MAAM,SACNiK,SAAU2I,EAAc5F,SAASpD,cAAczI,eAC/CsR,WAAY1S,IAEb,uBAAwB6S,EAAc5F,SAASpD,eAC9CkI,GAAoBc,EAAc5F,SAASpD,cAAcxI,qBACvD,kBAAC,GAAD,CACEpB,MAAM,cACNiK,SAAQ,2BAAO2I,EAAc5F,SAASpD,cAAcxI,oBAA5C,IAAgEQ,WAAYtF,EAAS0B,OAC7FyU,WAAYxS,IAGjB,2BAA4B2S,EAAc5F,SAASpD,eAClDkI,GAAoBc,EAAc5F,SAASpD,cAAcvI,yBACvD,kBAAC,GAAD,CACErB,MAAM,kBACNiK,SAAQ,2BACH2I,EAAc5F,SAASpD,cAAcvI,wBADlC,IAENO,WAAYtF,EAAS0B,OAEvByU,WAAYxS,IAGjB,sBAAuB2S,EAAc5F,SAASpD,eAC7CkI,GAAoBc,EAAc5F,SAASpD,cAActI,oBACvD,kBAAC,GAAD,CACEtB,MAAM,YACNiK,SAAU2I,EAAc5F,SAASpD,cAActI,kBAC/CmR,WAAYvS,IAGjB,kBAAmB0S,EAAc5F,UAChC4F,EAAc5F,SAASrB,eACvBiH,EAAc5F,SAASrB,cAAcC,qBACnC,oCACE,kBAAC,IAAD,CAAW/N,YAAY,SAAvB,yBACA,kBAAC,KAAD,CAAUuO,WAAS,EAACmG,YAAU,KAGnC,kBAAmBK,EAAc5F,UAChC4F,EAAc5F,SAASrB,eACgC,SAAvDiH,EAAc5F,SAASrB,cAAcG,eACnC,oCACE,kBAAC,IAAD,CAAWjO,YAAY,SAAvB,kBACA,kBAAC,IAAD,CACE0C,KAAK,OACLgC,MAAOxE,EAAgB6U,EAAc5F,SAASrB,cAAcG,eAC5DyG,YAAU,EACVtG,MAAO8F,MAId,kBAAmBa,EAAc5F,UAChC4F,EAAc5F,SAASrB,eACvBiH,EAAc5F,SAASrB,cAAczI,WAAa7E,GAChD,oCACE,kBAAC,IAAD,CAAWR,YAAY,SAAvB,oBACA,kBAAC,IAAD,CACE0C,KAAK,OACLgC,MAAOU,EAAiB2P,EAAc5F,SAASrB,cAAczI,UAC7DqP,YAAU,EACVtG,MAAO8F,MAId,kBAAmBa,EAAc5F,UAChC4F,EAAc5F,SAASrB,eACvBiH,EAAc5F,SAASrB,cAAcE,qBACrC+G,EAAc5F,SAASrB,cAAcE,oBAAoBR,QACvD,oCACE,kBAAC,IAAD,CAAWxN,YAAY,SAAvB,wBACA,kBAAC,IAAD,CACE0C,KAAK,OACLgC,MAAOqQ,EAAc5F,SAASrB,cAAcE,oBAAoBR,OAChEkH,YAAU,EACVtG,MAAO8F,OAKjB,kBAAC,IAAD,CAAM3C,QAAQ,SAAS2E,GAAI,GACzB,kBAAC,IAAD,CAAQzW,EAAG,EAAG+R,YAAY,OAAOhH,QAAS,kBA/JnB4I,EA+JiD2B,EA9JhF1N,KACO4E,ERnIsE,CAC/EvJ,KA/CmC,wBAgDnCgC,MQiIsC0O,IAFN,IAACA,IA+JvB,sBAGA,kBAAC,IAAD,CAAQ3T,EAAG,EAAG+R,YAAY,MAAMhH,QAAS,kBAzKKyB,ERrHsB,CAC9EvJ,KAlDkC,uBAmDlCgC,MQ4RgFqQ,MAAtE,2BAMHxN,EAAQjD,QACT,kBAAC,IAAD,CAAMiN,QAAQ,SAASxH,GAAI,GACzB,kBAAC,IAAD,CAAQtK,EAAG,EAAG+R,YAAY,MAAMG,QAAQ,UAAUnH,QAAS,kBAAM2K,GAAsB,KAAvF,yBAGA,kBAAC,IAAD,CAAQ1V,EAAG,EAAG+R,YAAY,MAAMG,QAAQ,UAAUnH,QAAS,kBAAMyK,GAAmB,KAApF,iBAGA,kBAAC,IAAD,CACErM,OAAQsM,EACRtD,oBAAqB2D,EACrB1D,QAASX,GAET,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAmBY,SAAS,KAAK/R,WAAW,QAA5C,yBAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,4HAEqB,KAErB,kBAAC,IAAD,CAAM2M,GAAI,GAAV,8FAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQqF,IAAKwD,EAAwB/K,QAAS0G,GAA9C,UAGA,kBAAC,IAAD,CAAQM,YAAY,MAAMhH,QAlNP,WAC/B6K,IACAnE,KAgNyEX,GAAI,GAAjE,yCAMN,kBAAC,IAAD,CAAa3H,OAAQoM,EAAiBpD,oBAAqB0D,EAAqBzD,QAASX,GACvF,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAmBY,SAAS,KAAK/R,WAAW,QAA5C,eAGA,kBAAC,IAAD,oGAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQgS,IAAKuD,EAAqB9K,QAAS0G,GAA3C,UAGA,kBAAC,IAAD,CAAQM,YAAY,MAAMhH,QAzOP,WAC/B4K,IACAlE,KAuOyEX,GAAI,GAAjE,kC,8BCvSD4F,GAtDW,WACxB,IAAMC,EAAatK,cAAY,SAACjF,GAAD,OArBE,SAACA,GAClC,GAjBiB,SAAC,GAAoD,IAAlDkF,EAAiD,EAAjDA,cAAe+B,EAAkC,EAAlCA,cACnC,OADqE,EAAnB4C,GAC3C2F,aAEHvI,EAAckD,YACd,CACEjF,EAAczI,eACdyI,EAAcxI,mBACdwI,EAAcvI,uBACduI,EAActI,mBACdoR,MAAK,SAACzI,GAAD,OAAcA,EAASzI,KAAOyI,EAAS/H,QAAQwQ,MAAK,SAACrQ,GAAD,OAAOA,EAAEC,MAAQD,EAAEE,UAAU0H,EAASnB,cAG1Fc,EAAczI,eAAeK,IAKpC2S,CAAWzP,GAAQ,CACrB,GAAIA,EAAM6J,GAAG2F,aAAc,CAAC,IAAD,EAC8BxP,EAAMkF,cAAxBA,GADZ,EACjB9D,yBADiB,+CAEgBpB,EAAMiH,cAFtB,EAEjBkD,WACR,MAAO,CACLjF,gBACA+B,cALuB,+BAOnB,IAAD,EAC4CjH,EAAMkF,cAAczI,eADhE,EACGe,QADH,EACY4G,SACjB,MAAO,CACLc,cAAe,CACbzI,eAJC,yCAY2CiT,CAA2B1P,MACzEqL,EAAOkE,EAAaxP,GAAkBwP,EAAY3O,SAASG,UAAY,GAF/C,EAGA4O,aAAatE,GAAnCuE,EAHsB,EAGtBA,OAAQC,EAHc,EAGdA,UAChB,OAAIN,EAEA,kBAAC,IAAD,CAAK9W,GAAI,GACP,kBAAC,EAAD,CAAQP,MAAOP,EAAMqB,IAArB,2BACA,kBAAC,IAAD,CAAMsU,WAAW,OAAO9K,GAAI,GAA5B,gCACgC,IAC7B,kBAAmB+M,EAAa,oCAAsC,mBAFzE,6FAKA,kBAAC,IAAD,CACEjG,gBAAgB,QAChBwG,aAAa,KACbhD,OAAO,OACPjU,EAAG,EACHkX,UAAU,YACVvM,aAAW,qBACXwM,iBAAA,EACAC,KAAK,WAEJ5E,GAEH,kBAAC,IAAD,CACEV,YAAY,OACZnS,GAAI,EACJC,GAAG,OACH+M,QAAQ,QACR0K,SAAUL,EAAY,kBAACM,GAAA,EAAD,MAAgB,kBAACC,GAAA,EAAD,MACtCzM,QAASiM,GANX,qBAUA,kBAAC,IAAD,CAAMtC,WAAW,OAAOzH,GAAI,GAA5B,+MAQF,kBAAC,IAAD,CAAKpN,GAAI,GACP,kBAAC,EAAD,CAAQP,MAAOP,EAAMqB,IAArB,2BACA,kBAAC,IAAD,CAAMsU,WAAW,OAAO9K,GAAI,GAA5B,mJ,SFzFI2J,K,YAAAA,E,kBAAAA,E,kBAAAA,E,eAAAA,Q,KAkCL,IGoBQkE,GA/CW,WACxB,IAAMjL,EAAWC,eACXiL,EAAiBrL,cAAY,SAACjF,GAAD,OAAqBA,EAAM6J,GAAG0G,2BAC3DC,EAAoBvL,cACxB,SAACjF,GAAD,OAAqBA,EAAM4L,YAAYD,SAAS1M,QAAO,SAACrG,GAAD,OAAOA,EAAEV,QAAUiU,GAAasE,SAAOhT,UAIhG,OACE,kBAAC,KAAD,CACE0F,KAAK,WACLqC,QAAQ,OACRkL,cAAc,SACdC,aAAa,UACbC,UAAQ,EACRtH,gBAAgB,WAChBmE,OAAO,QACP7K,MAAO0N,EACP7N,SAZ0B,SAACG,GAAD,OAAmBwC,ELwCmC,CACpFvJ,KArDmC,wBAsDnCgC,MK1CmF+E,MAc/E,kBAAC,KAAD,CAASO,KAAK,WAAWmG,gBAAgB,SACvC,kBAAC,KAAD,YACO,IACJgH,EAAiB,GAAKE,EAAoB,GACzC,kBAAC,KAAD,CAAO9G,GAAI,EAAGiB,YAAY,MAAMG,QAAQ,SACrC0F,IAIP,kBAAC,KAAD,gBACA,kBAAC,KAAD,iBAEF,kBAAC,KAAD,CAAWrN,KAAK,WAAWqC,QAAQ,OAAOmJ,UAAU,OAAOkC,QAAQ,QACjE,kBAAC,KAAD,CAAUhY,EAAG,EAAG2K,aAAW,oBAAoBgC,QAAQ,OAAOrC,KAAK,KACjE,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAUtK,EAAG,EAAG2K,aAAW,qBAAqBwC,MAAM,QACpD,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAUnN,EAAG,EAAG2K,aAAW,iBACzB,kBAAC,GAAD,UCrCJa,GAAc,CAClB,CACE3J,IAAK9C,EAAS0B,KACdgC,MAAO,gCAET,CACEZ,IAAK7C,EAAiBiC,KACtBwB,MAAO,aAET,CACEZ,IAAK7C,EAAiBkC,IACtBuB,MAAO,OAET,CACEZ,IAAK7C,EAAiBmC,YACtBsB,MAAO,sBAwEIwV,GAlES,WACtB,IAHgBxU,EAGVG,EAAiBwI,cAAY,SAACjF,GAAD,OAAqBA,EAAMkF,cAAczI,kBACtE2I,EAAWC,eA2BjB,OACE,kBAAC,IAAD,CAAKhN,GAAG,OAAOG,GAAI,EAAGuY,SANC,SAACzN,GACxBA,EAAI0N,iBACJ5L,EAASqD,KAIyCjF,aAAW,cAC3D,kBAAC,EAAD,CAAQtL,MAAOP,EAAMoB,GAAIkS,SAAS,KAAKnS,UAAU,UAAjD,wDAGA,kBAAC,IAAD,CAAauQ,YAAU,EAACzQ,EAAG,EAAGoN,MAAM,QAClC,kBAAC,IAAD,CACE5C,YAAY,aACZvH,KAAK,MACL/C,UAAU,SACV+E,MAAOpB,EAAeK,IACtB2F,SApCsB,SAACa,GAC7B9C,KACA4E,EACEpE,GAAyB,CACvBvE,eAAgB,CAAEK,IAAKwG,EAAIC,OAAO1F,cAmCpC,kBAAC,IAAD,CAAM6M,QAAQ,SAASjS,GAAI,GACzB,kBAAC,IAAD,CAAM+K,aAAW,0BAGf,kBAAC,IAAD,CAAYnL,GAAIsM,IAAQC,UAAW,kBAACC,EAAA,EAAD,MAAqB1B,KAAK,WAAWuG,GAAI,IAjDpEpN,EAkDIG,EAAeS,YAlDGmH,GAAYzI,MAAK,qBAAGlB,MAAkB4B,MAAS+H,GAAY,IAAI/I,QAoD7F,kBAAC,IAAD,KACG+I,GAAYhK,KAAI,gBAAGK,EAAH,EAAGA,IAAKY,EAAR,EAAQA,MAAR,OACf,kBAAC,IAAD,CAAUZ,IAAKA,EAAKiJ,QAAS,kBAxCHzG,EAwCsCxC,EAvC1E8F,UACA4E,EACEpE,GAAyB,CACvBvE,eAAgB,CAAES,iBAJa,IAACA,IAyCvB5B,QAKT,kBAAC,IAAD,CAAQqP,YAAY,QAAQlS,GAAI,EAAGkL,QAtCtB,SAACL,GAElB,OADAA,EAAIsH,cAAcC,OACXzF,EAASqD,KAoC4C1D,YAAatI,EAAeK,KAApF,W,iLClCOmU,GAHgC,SAACtP,GAAD,OAzCd,SAC/BvE,EACA+D,EACAiG,EACAzF,GAEA,OAAQyF,GACN,IAAK,OACH,OAAO,kBAAC,KAAsBzF,GAChC,IAAK,eAGH,OADAlB,OAAOyQ,MAAQA,KACR,kBAAC,KAA4BvP,GACtC,IAAK,SACH,OAAO,kBAAC,KAAuBA,GACjC,IAAK,YACH,OAAO,kBAAC,KAAoBA,GAC9B,QAEE,OADoBvE,GAA4B,kBAAXA,GAAuB,gBAAiBA,EAASA,EAAOH,YAAc,IAEzG,KAAKpD,EAAahC,EAAiBiC,MACjC,OAAO,kBAAC,KAA4B6H,GACtC,KAAK9H,EAAahC,EAAiBoC,KACjC,OAAO,kBAAC,KAAoB0H,GAC9B,KAAK9H,EAAahC,EAAiBkC,KACjC,OA5Bc,SAACoH,GAAD,OACtBA,EAAUjC,QAAQ,UAAY,GAAKiC,EAAUjC,QAAQ,UAAY,GAAKiC,EAAUjC,QAAQ,WAAa,EA2BzFqC,CAASJ,GACJ,kBAAC,KAAsBQ,GAEvB,kBAAC,KAAuBA,GAEnC,QACE,OAAO,kBAAC,KAAuBA,KAWvCwP,CAAyBxP,EAAMvE,OAAQgU,UAAUjQ,UAAWQ,EAAMuH,sBAAuBvH,IC7CrF0P,GAAuB,CAC3BC,oBAAqB,CACnBC,iBAAkB,IAIhBC,GAAsB,SAACC,GAEtBhR,OAAOuJ,SAEVvJ,OAAOuJ,OAAS,IAGbvJ,OAAOuJ,OAAOhK,QAEjBS,OAAOuJ,OAAOhK,MAAQ,IAExB,cAA2B7F,OAAOC,QAAQqX,GAA1C,eAAwD,CAAC,IAAD,sBAA5C/W,EAA4C,KAAvCmD,EAAuC,KAEtD4C,OAAOuJ,OAAOhK,MAAMtF,GAAOmD,IAOzB6T,GAAyB,SAACC,GAE9BlR,OAAOuJ,OAAS2H,EAEhBlR,OAAOuJ,OAAOhK,MAAQ,GACtBH,QAAQ+R,IAAR,qBAA0BC,UAC1BhS,QAAQiS,KACN,oGAV0B,oCACH,uCAczBjS,QAAQkS,IAAItR,OAAOuJ,QACnBnK,QAAQiS,KACN,2JAjB0B,oCACH,sCADG,oCACH,wCA2EZE,GAnDU,WAAO,IAAD,EACsB/M,cAAY,SAACjF,GAAD,sBAA2BA,EAAMgK,WAAxF5M,EADqB,EACrBA,OAAQb,EADa,EACbA,QAAS2M,EADI,EACJA,sBACnB9D,EAAWC,eAIjB,OACE,kBAAC,IAAD,CAAK7M,GAAI,EAAGK,EAAG,EAAGgT,SAAS,YACzB,kBAAC,UAAD,CACEzO,OAAQA,EACRb,QAASa,EAASb,EAAH,2BAAkBA,GAAY8U,IAC7CY,QAPU,SAACC,GAAD,OAAc9M,GVqCEtF,EUrCyBoS,EVqCV,SAAC9M,GAEhD,GAAItF,aAAiBqS,MAAO,CAG1B,GAAIrS,EAAMsS,cAAgBtS,EAAMsS,YAAYC,QAAWvS,EAAMsS,YAAYE,MAAQxS,EAAMsS,YAAYE,KAAKD,QAAU,OAErEvS,EAAMsS,YAAfG,GAF8E,EAExGF,OAFwG,EAEhGG,QAFgG,EAEvFF,KAFuF,4CAIhHxS,EAAMsS,YAAcG,EACpBnN,EAAS,CACPvJ,KAnGoB,eAoGpBiE,eAGFsF,EAAS,CACPvJ,KAxGoB,eAyGpBiE,UAGJD,QAAQC,MAAM,qBAAsBA,EAAMqN,cAE1C/H,EAAS,CACPvJ,KA/GsB,eAgHtBiE,MAAO,IAAIqS,MAAMrS,KAEnBD,QAAQC,MAAM,kBAAmBA,GAEnCD,QAAQkS,IAAIjS,MA5BmB,IAACA,GU7B1B2S,OAAQrV,EATC,kBAAMgI,EAAS+D,UASEnM,EAC1BwU,oBAAqBA,GACrBE,uBAAwBA,IAExB,kBAAC,GAAD,CAAuBxI,sBAAuBA,MAE9C9L,GACA,kBAAC,IAAD,CACEyO,SAAS,WACTG,KAAM,EACNC,MAAO,EACPyG,IAAK,EACLzP,UAAU,SACVoM,GAAI,GACJzJ,WAAW,SACX+M,QAAS,IAET,kBAAC,IAAD,CAAM3M,MAAM,MAAMH,GAAI,GACpB,kBAAC,KAAD,CAAMkC,KAAK,mCAAmCC,YAAU,GACtD,kBAAC,KAAD,CAAO9J,IAAK0U,KAAYC,IAAI,SAAS7M,MAAM,OAAO8M,OAAO,aAG7D,kBAAC,IAAD,CAAMrJ,MAAM,QAAQ5D,GAAI,GAAxB,MACM,IACJ,kBAAC,KAAD,CAAMkC,KAAK,mCAAmCC,YAAU,EAACT,MAAO,CAAEU,eAAgB,cAAlF,eAEQ,IAJV,0BAK0B,IACxB,kBAAC,KAAD,CAAMF,KAAK,qBAAqBC,YAAU,EAACT,MAAO,CAAEU,eAAgB,cAApE,UANF,Q,qBC3CK8K,GAzCa,WAC1B,IAAMvD,EAAevK,cAAY,SAACjF,GAAD,OAAqBA,EAAM6J,GAAG2F,gBACzDwD,EAAsB/N,cAAY,SAACjF,GAAD,OAAqBA,EAAM6J,GAAGmJ,uBAEhE5N,EAAWC,eAQjB,OACE,kBAAC,IAAD,CAAMpC,UAAU,MAAMiJ,MAAM,SAAS5C,gBAAgB,WAAWnG,KAAK,YACnE,kBAAC,EAAD,CAAQjL,MAAOP,EAAMW,GAAI6K,KAAK,WAAWqC,QAAQ,OAAOkL,cAAc,MAAM9K,WAAW,UACrF,kBAAC,KAAD,CAAMmC,KAAK,sCAAsCC,YAAU,GACzD,kBAAC,KAAD,CAAO9J,IAAK+U,KAAeJ,IAAI,YAAY7M,MAAM,QAAQ2M,QAAS,OAGtE,kBAAC,IAAD,CAAaxP,KAAK,IAAItK,EAAG,EAAGgN,GAAI,EAAGL,QAAQ,OAAOkL,cAAc,MAAMwC,eAAe,SAAStN,WAAW,UACvG,kBAAC,IAAD,CAAQ9C,GAAG,kBAAkB4E,UAAW8H,EAAc/M,SAf3B,SAACa,GAChC9C,KACA4E,EToB6E,CAC/EvJ,KArCkC,uBAsClCgC,MStB8ByF,EAAIC,OAAOoE,aAcnC,kBAAC,IAAD,CAAW+B,GAAI,EAAG7D,GAAI,EAAGoF,SAAS,KAAKnF,QAAQ,mBAA/C,aAIF,kBAAC,IAAD,CACEE,MAAM,OACNmN,SAAS,OACT1F,OAAO,OACPtK,KAAK,IACLuG,GAAI,EACJ7Q,EAAG,EACHgI,MAAK,UAAKmS,EAAsB,WAAa,SAAxC,YACLrP,QAxBuB,SAACL,GAAD,OAC3B8B,ET2BuE,CACzEvJ,KA7C+B,oBA8C/BgC,MS7B6D,WAAlCyF,EAAIsH,cAAcwI,gBAyBtCJ,EAAsB,SAAM,YC3B/B1M,I,cAAQ+M,YAAY,CACxBC,WAAY,CACVC,KAAM,CACJC,UAAW,CACTC,KAAM,CACJC,OAAQ,SAOZC,GAAc,iBAAO,CAAErK,gBAAiB,UAAWtD,MAAO,QAwCjD4N,GAtCO,WACpB,IAAMpE,EAAevK,cAAY,SAACjF,GAAD,OAAqBA,EAAM6J,GAAG2F,gBACzDqE,EAAiB5O,cAAY,SAACjF,GAAD,OAAqBA,EAAM6J,GAAGgK,gBAAkB,MAC7Eb,EAAsB/N,cAAY,SAACjF,GAAD,OAAqBA,EAAM6J,GAAGmJ,uBAChE5N,EAAWC,eAOjB,OAJAlD,qBAAU,WACRiD,EAASlE,GAAwBkQ,UAAUjQ,UAAWP,SAASG,SAASX,WACvE,CAACgF,IAGF,kBAAC,IAAD,CAAgBkB,MAAOA,IACrB,kBAAC,KAAD,CACEwN,UATmB,SAACC,GAAD,OAAqB3O,EVKoB,CAClEvJ,KAzCyB,cA0CzBgC,MUPsEkW,EAAM,MAUtEA,MAAO,CAAC,IAAMF,EAAgBA,GAC9B5Q,UAAU,aACV6J,OAAO,aACPkH,YAAY,MACZC,WAAY,EACZN,YAAaA,GACbO,UAAWlB,OAAsBhW,EAAY,EAC7CmX,QAASnB,EAAsB,IAAM,EACrCzL,MAAO,CAAE/B,QAAS,SAElB,kBAAC,IAAD,CAAMiI,OAAO,QAAQxK,UAAU,UAC7B,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAKE,KAAK,WAAWwL,UAAU,QAC5Ba,EAAe,kBAAC,GAAD,MAAe,kBAAC,GAAD,MAC/B,kBAAC,GAAD,QAGJ,kBAAC,GAAD,SCnDY4E,QACW,cAA7B3T,OAAOM,SAAS1C,UAEe,UAA7BoC,OAAOM,SAAS1C,UAEhBoC,OAAOM,SAAS1C,SAASD,MAAM,2D,4EC8EpByL,GAxEJ,WAeL,IAdJ7J,EAcG,uDAdc,CACfwP,cAAc,EACd1F,iCAAkC,CAAC,GACnCyG,wBAAyB,EACzByC,qBAAqB,GAEvBqB,EAQG,uCACH,OAAQA,EAAOxY,MACb,IrBzBqC,4BqB0BnC,GAAIwY,EAAOxW,MAAM4D,SAAU,CACzB,IAAM+N,EAAe,kBAAmB6E,EAAOxW,MAAM4D,SAC/CqI,EAAmC0F,EAAe,CAAC,EAAG,GAAKxP,EAAM8J,iCACjEyG,EAA0B,EAC1ByC,GAAsB,EAC5B,OAAO,2BACFhT,GADL,IAEEwP,eACA1F,mCACAyG,0BACAyC,wBAGF,OAAOhT,EAEX,IZxDgC,uBYyD9B,OAAO,2BACFA,GADL,IAEEwP,aAAc6E,EAAOxW,QAEzB,IjB1DiC,wBiB2D/B,MAAI,uBAAwBwW,EAAOxW,MAAMyK,SAASpD,cACzC,2BACFlF,GADL,IAEEwP,cAAc,IAGTxP,EAEX,IZrEuB,cYsErB,OAAO,2BACFA,GADL,IAEE6T,eAAgBQ,EAAOxW,QAE3B,IZzE6B,oBY0E3B,OAAO,2BACFmC,GADL,IAEEgT,oBAAqBqB,EAAOxW,QAEhC,IZ7EqC,4BY8EnC,OAAO,2BACFmC,GADL,IAEE8J,iCAAkCuK,EAAOxW,QAE7C,IZjFiC,wBYkF/B,OAAO,2BACFmC,GADL,IAEEuQ,wBAAyB8D,EAAOxW,QAEpC,QACE,OAAOmC,ICnEPsU,GAAe,iBAAO,CAAExX,IAAK,GAAIU,QAAS,GAAI4G,UAAU,EAAOlH,WAAYtF,EAAS0B,OAEpFib,GAAY,iBAA2B,CAC3C9X,eAAgB6X,KAChB5X,mBAAoB4X,KACpB3X,uBAAwB2X,KACxB1X,kBAAmB0X,KACnBlT,yBAA0B,GAC1B+D,4BAA4B,EAC5BtI,YAAa,KAGT2X,GAAyB,SAAClX,GAAD,OAAmDA,IAAYxF,EAAciD,WA0I7FmK,GAxIO,WAOI,IANxBlF,EAMuB,uDANKuU,KAC5BF,EAKuB,uCACvB,OAAQA,EAAOxY,MACb,ItBhCqC,4BsBgCrC,MACiDwY,EAAOxW,MAA9CuD,EADV,EACUA,yBAA0BK,EADpC,EACoCA,SAC5BvE,EAAakE,EAAyB,GACtC+D,EAA6BqP,GAAuBtX,GAC1D,GAAIuE,EAAU,CACZ,IAAMgT,EAAeF,KACrB,OAAO,uCACFE,GADL,IAEEtP,8BACG1D,EAASyD,eAHd,IAIEzI,eAAe,2BACVgY,EAAahY,gBACbgF,EAASyD,cAAczI,gBAE5B2E,6BAGF,OAAO,2BACFpB,GADL,IAEEoB,2BACA+D,6BACAzI,mBAAmB,2BACdsD,EAAMtD,oBADO,IAEhBQ,eAEFP,uBAAuB,2BAClBqD,EAAMrD,wBADW,IAEpBO,iBAIR,ItBpEwC,+BsBqEtC,OAAO,2BACF8C,GADL,IAEEvD,eAAe,2BACVuD,EAAMvD,gBACN4X,EAAOxW,SAGhB,ItB3E6C,oCsB6E3C,IAAM6W,EAAwB,2BACzB1U,GADyB,IAE5BmF,2BAA4BqP,GAAuBH,EAAOxW,MAAMX,YAChER,mBAAmB,2BACdsD,EAAMtD,oBACN2X,EAAOxW,SAGd,MAAI,eAAgBwW,EAAOxW,OAASwW,EAAOxW,MAAMX,WACxC,2BACFwX,GADL,IAEE/X,uBAAuB,2BAClBqD,EAAMrD,wBADW,IAEpBO,WAAYmX,EAAOxW,MAAMX,eAItBwX,EAEX,ItB/FiD,wCsBgG/C,IAAMC,EAA4B,2BAC7B3U,GAD6B,IAEhCmF,2BAA4BqP,GAAuBH,EAAOxW,MAAMX,YAChEP,uBAAuB,2BAClBqD,EAAMrD,wBACN0X,EAAOxW,SAGd,MAAI,eAAgBwW,EAAOxW,OAAoC,MAA3BwW,EAAOxW,MAAMX,WACxC,2BACFyX,GADL,IAEEjY,mBAAmB,2BACdsD,EAAMtD,oBADO,IAEhBQ,WAAYmX,EAAOxW,MAAMX,eAItByX,EAEX,ItBlH2C,kCsBmHzC,OAAO,2BACF3U,GADL,IAEEpD,kBAAkB,2BACboD,EAAMpD,mBACNyX,EAAOxW,SAGhB,ItBzHqC,4BsB0HnC,OAAO,2BACFmC,GADL,IAEEnD,YAAawX,EAAOxW,QAExB,IlBzIiC,wBkB0I/B,IAAM4W,EAAeF,KACbnT,EAA6BpB,EAA7BoB,yBACR,OAAO,uCACFqT,GACAJ,EAAOxW,MAAMyK,SAASpD,eAF3B,IAGEzI,eAAe,2BACVgY,EAAahY,gBACb4X,EAAOxW,MAAMyK,SAASpD,cAAczI,gBAEzC2E,6BAGJ,IbpJuB,caqJrB,MAAO,CACL+D,2BAA4BnF,EAAMmF,2BAClC/D,yBAA0BpB,EAAMoB,yBAChC3E,eAAgB6X,KAChB5X,mBAAmB,2BACd4X,MADa,IAEhBpX,WAAY8C,EAAMtD,mBAAmBQ,aAEvCP,uBAAuB,2BAClB2X,MADiB,IAEpBpX,WAAY8C,EAAMrD,uBAAuBO,aAE3CN,kBAAmB0X,KACnBzX,YAAa,IAEjB,QACE,OAAOmD,IC1JPyU,GAAe,CACnBrX,YAAQJ,EACRT,QAAS,CACP+U,oBAAqB,CACnBC,iBAAkB,IAGtBrI,2BAAuBlM,GAwBVgN,GArBA,WAAqG,IAApGhK,EAAmG,uDAA9EyU,GAAcJ,EAAgE,uCACjH,OAAQA,EAAOxY,MACb,IhBlBgB,OgBkBhB,MACqDwY,EAAOxW,MAAlDT,EADV,EACUA,OAAQb,EADlB,EACkBA,QAAS2M,EAD3B,EAC2BA,sBACzB,MAAO,CACL9L,SACAb,UACA2M,yBAEJ,IhBxBgB,OgByBhB,Id/BuB,ccgCrB,OAAOuL,GACT,IhB1BwB,egB2BtB,OAAO,2BACFA,IADL,IAEE3U,MAAOuU,EAAOvU,QAGpB,OAAOE,GCxBHyU,GAAe,CACnBjW,SAAU7E,EACVuN,qBAAqB,EACrBC,oBAAqB,GACrBC,cAAe,OACf+C,YAAY,GAGRyK,GAAiB,SAAC,GAAD,IAAGpW,EAAH,EAAGA,SAAU0I,EAAb,EAAaA,oBAAqBC,EAAlC,EAAkCA,oBAAqBC,EAAvD,EAAuDA,cAAvD,OACrB5I,IAAaiW,GAAajW,UAC1B0I,IAAwBuN,GAAavN,qBACrCC,IAAwBsN,GAAatN,qBACrCC,IAAkBqN,GAAarN,eAmElBH,GAjEO,WAGI,IAFxBjH,EAEuB,uDAFKyU,GAC5BJ,EACuB,uCACvB,OAAQA,EAAOxY,MACb,IxBxBqC,4BwByBnC,OACEwY,EAAOxW,MAAM4D,UACb,kBAAmB4S,EAAOxW,MAAM4D,UAChC4S,EAAOxW,MAAM4D,SAASwF,eACtB9M,OAAO0a,KAAKR,EAAOxW,MAAM4D,SAASwF,eAAexJ,QAAU,EAEpD,uCACFuC,GACAqU,EAAOxW,MAAM4D,SAASwF,eAF3B,IAGEkD,YAAayK,GAAe,2BACvB5U,GACAqU,EAAOxW,MAAM4D,SAASwF,kBAItBjH,EAEX,IlBvDyB,gBkBwDvB,OAAO,2BACFA,GADL,IAEExB,SAAU6V,EAAOxW,MACjBsM,YAAayK,GAAe,2BAAK5U,GAAN,IAAaxB,SAAU6V,EAAOxW,WAE7D,IlB1D8B,qBkB2D5B,OAAO,2BACFmC,GADL,IAEEoH,cAAeiN,EAAOxW,MACtBsM,YAAayK,GAAe,2BAAK5U,GAAN,IAAaoH,cAAeiN,EAAOxW,WAElE,IlBlEmC,0BkBmEjC,OAAO,2BACFmC,GADL,IAEEkH,oBAAqBmN,EAAOxW,MAC5BsM,YAAayK,GAAe,2BAAK5U,GAAN,IAAakH,oBAAqBmN,EAAOxW,WAExE,IlBvEoC,2BkBwElC,OAAO,2BACFmC,GADL,IAEEmH,oBAAqBkN,EAAOxW,MAC5BsM,YAAayK,GAAe,2BAAK5U,GAAN,IAAamH,oBAAqBkN,EAAOxW,WAExE,If5EuB,ce6ErB,OAAO4W,GACT,IpBhFiC,wBoBiF/B,GAAI,kBAAmBJ,EAAOxW,MAAMyK,SAAU,CAAC,IACrCrB,EAAkBoN,EAAOxW,MAAMyK,SAA/BrB,cACR,GAAIA,EACF,OAAO,2BACFA,GADL,IAEEkD,YAAayK,GAAe,2BAAK3N,GAAN,IAAqBkD,YAAY,OAKpE,QACE,OAAOnK,ICxDP8U,GAAW,SAAC,GAAD,uBAAOjX,GAAP,mBAEJ,MAATA,GACU,KAAVA,GACCyE,MAAMyS,QAAQlX,IAA2B,IAAjBA,EAAMJ,QACb,kBAAVI,GAAsBjD,OAAOgN,MAAM/J,KAGzCmX,GAAY,SAAC,EAAD,OAAEC,EAAF,oBAA0BC,EAA1B,2BAAoDD,EAAEE,cAAcD,EAAG,UAGnFE,GAAW,SAAC3a,GAAD,OAAyB,MAAPA,GAAeA,EAAI4a,cAAgB,GAAGA,aAE5DC,GAAc,SAAdA,EAAeL,EAAYC,GACtC,GAAID,IAAMC,EACR,OAAO,EACF,GAAI5S,MAAMyS,QAAQE,IAAM3S,MAAMyS,QAAQG,GAAI,CAC/C,GAAID,EAAExX,SAAWyX,EAAEzX,OAAQ,CACzB,IAAK,IAAIqH,EAAImQ,EAAExX,OAAQqH,KACrB,IAAKwQ,EAAYL,EAAEnQ,GAAIoQ,EAAEpQ,IAAK,OAAO,EAEvC,OAAO,EAEP,OAAO,EAEJ,GAAIsQ,GAASH,IAAMG,GAASF,GAAI,CAErC,IAAMK,EAAWpb,OAAOC,QAAQ6a,GAAGhW,OAAO6V,IAAUU,KAAKR,IAEnDS,EAAWtb,OAAOC,QAAQ8a,GAAGjW,OAAO6V,IAAUU,KAAKR,IACzD,GAAIO,EAAS9X,SAAWgY,EAAShY,OAC/B,OAAO,EAET,IAAK,IAAIqH,EAAIyQ,EAAS9X,OAAQqH,KAC5B,GAAIyQ,EAASzQ,GAAG,KAAO2Q,EAAS3Q,GAAG,KAAOwQ,EAAYC,EAASzQ,GAAG,GAAI2Q,EAAS3Q,GAAG,IAAK,OAAO,EAEhG,OAAO,EAEP,OAAO,GAIE4Q,GAAmB,SAACtb,EAAyBub,GACxD,IAAMC,EAAaxb,EAAQyb,WAAU,SAACjW,GAAD,OAAO0V,GAAY1V,EAAE0I,SAAUqN,EAASrN,aAC7E,IAAoB,IAAhBsN,EAAmB,CACrB,IAAMhY,EAAOxD,EAAQwb,GAAYhY,KAC3BkY,EAAgB1b,EAAQ2J,MAAM,GAEpC,OADA+R,EAAc9R,OAAO4R,EAAY,GAC1BE,EAActR,OAAd,2BACFmR,GADE,IAEL/X,UAGF,OAAOxD,EAAQoK,OAAOmR,ICwCXjV,GA7GC,WAaI,IAZlBV,EAYiB,uDAZK,CACpBU,QAAS,GACTqV,kBAAmB5P,GAAmB6P,MAExC3B,EAQiB,uCACjB,OAAQA,EAAOxY,MACb,ItBpCgC,uBsBqC9B,OAAImE,EAAMkO,eAAiBlO,EAAMkO,cAAc9F,YAAciM,EAAOxW,MAAMuK,UACjE,2BACFpI,GADL,IAEEkO,mBAAelR,IAGV,2BACFgD,GADL,IAEEkO,cAAemG,EAAOxW,QAG5B,ItB9CqC,4BsB+CnC,GAAImC,EAAMkO,cAAe,CACvB,IAAMxN,EAAUV,EAAMU,QAAQqD,MAAM,GAC9BkS,EAAevV,EAAQmV,WAC3B,SAACtJ,GAAD,OAAWA,EAAMnE,aAAepI,EAAMkO,eAAiBlO,EAAMkO,cAAc9F,cAQ7E,OANsB,IAAlB6N,IACFvV,EAAQuV,GAAR,2BACKvV,EAAQuV,IADb,IAEErY,KAAMyW,EAAOxW,SAGV,2BACFmC,GADL,IAEEU,UACAwN,cAAc,2BACTlO,EAAMkO,eADE,IAEXtQ,KAAMyW,EAAOxW,UAIjB,OAAOmC,EAEX,ItBpEgC,uBsBqE9B,IAAM4C,EAAQ5C,EAAMU,QAAQmV,WAAU,SAACtJ,GAAD,OAAWA,EAAMnE,YAAciM,EAAOxW,MAAMuK,aAC5E1H,EAAUV,EAAMU,QAAQqD,MAAM,GAEpC,OADArD,EAAQsD,OAAOpB,EAAO,GACf,2BACF5C,GADL,IAEEkO,mBAAelR,EACf0D,YAGJ,ItB7E0B,iBsB8ExB,MAAO,CACLA,QAAS,GACTqV,kBAAmB/V,EAAM+V,mBAE7B,ItBjF0C,iCsBkFxC,OAAO,2BACF/V,GADL,IAEEkO,cAAelO,EAAMkO,eAAiBlO,EAAMkO,cAActQ,KAAOoC,EAAMkO,mBAAgBlR,EACvF0D,QAASV,EAAMU,QAAQzB,QAAO,SAACsN,GAAD,OAAWA,EAAM3O,UAEnD,ItBtFmC,0BsBuFjC,OAAO,2BACFoC,GADL,IAEE+V,kBAAmB1B,EAAOxW,QAE9B,InBzFgB,OmB0Fd,IAAM6C,EAAUgV,GAAiB1V,EAAMU,QAAS2T,EAAOxW,MAAM8K,cACvDuF,EACJlO,EAAMkO,eAAiBoH,GAAYtV,EAAMkO,cAAc5F,SAAU+L,EAAOxW,MAAM8K,aAAaL,UAA3F,2BAES+L,EAAOxW,MAAM8K,cAFtB,IAGM/K,KAAMoC,EAAMkO,cAActQ,OAE5BoC,EAAMkO,cACZ,OAAO,2BACFlO,GADL,IAEEU,UACAwN,kBAGJ,InBtGwB,emBuGtB,IAAMgI,EAAclW,EAAMU,QACpBA,EAAUwV,EAAYnS,MAAM,EAAGmS,EAAYzY,OAAS,GACpD0Y,EAAaD,EAAYA,EAAYzY,OAAS,GAKpD,OAJAiD,EAAQ0V,KAAR,2BACKD,GADL,IAEErW,MAAOuU,EAAOvU,SAET,2BACFE,GADL,IAEEU,YAGJ,QACE,OAAOV,I,UChGEqW,GAvB0B,SAACC,EAAsBC,GAAvB,OAA4D,SACnGC,EACAnC,EACAoC,GAEA,OAAIpC,EAAOxY,OAAS6a,aACX,uCACFD,GACApC,EAAOsC,SAFZ,IAGE/K,YAAa,CACXD,SAAU4K,EAAgBD,EAAOE,EAAWnC,EAAnB,YAAC,eAA+BoC,GAAcpC,EAAOsC,aAI3E,2BACFF,GADL,IAEE7K,YAAa,CACXD,SAAU4K,EAAgBD,EAAOE,EAAWnC,EAAQoC,Q,8DCDtDG,GAA4B,CAChCtd,KAAM,CAAEgC,MAAO,GAAI+P,UAAMrO,GACzBzD,aAAc,CACZ+B,MAAM,oBAAD,OAAsBub,KAAM7E,OAAO8E,QAAnC,YACLzL,KAAM,0CAER7R,OAAQ,CAAE8B,MAAM,eAAD,OAAiByb,KAAMD,QAAvB,YAA0CzL,KAAM,uCAC/D5R,UAAW,CAAE6B,MAAM,iBAAD,OAAmB0b,KAASF,QAA5B,YAA+CzL,KAAM,0CACvE3R,KAAM,CACJ4B,MAAO,gEACP+P,KAAM,mEAER4L,WAAY,CACV3b,MAAO,yDACP+P,KAAM,yFAIJ6L,IAA6B,qBAChCtf,EAAS0B,KAAO,QADgB,eAEhCzB,EAAiBiC,KAAO,gBAFQ,eAGhCjC,EAAiBkC,IAAM,UAHS,eAIhClC,EAAiBoC,IAAM,aAJS,eAKhCpC,EAAiBmC,YAAc,QALC,IAQ7Bmd,GAA+B,CACnC5d,aAAc,CAAC1B,EAAiBiC,KAAMjC,EAAiBkC,KACvDP,OAAQ,CAAC3B,EAAiBkC,KAC1BN,UAAW,CAAC5B,EAAiBiC,KAAMjC,EAAiBoC,KACpDP,KAAM,CAAC7B,EAAiBmC,aACxBod,OAAQ,CAACvf,EAAiBkC,IAAKlC,EAAiBmC,cAG5Cqd,GAAsB,SAAC,GAAD,IAAGva,EAAH,EAAGA,IAAKI,EAAR,EAAQA,WAAR,OAC1BA,IAAetF,EAAS0B,KAAO2C,EAAuBa,GAAOI,GAEzDoa,GAAoB,SAACtX,GACzB,IAAM1D,EAAO0D,EAAMkF,cAAczI,eAAeS,WAC1CkK,EAAgBpH,EAAM6J,GAAG2F,aAAexP,EAAMiH,cAAcG,cAAgB,OAC5E7F,EACJvB,EAAMkF,cAAc9D,0BACpBpB,EAAMkF,cAAc9D,yBAAyB,KAAOtJ,EAAckD,SAEpE,MAAO,CACLkC,WAFiBZ,IAAS1E,EAAS0B,KAAO2C,EAAuB+D,EAAMkF,cAAczI,eAAeK,KAAOR,EAG3G8K,gBACA7F,aA6DSoK,GAA0B,CACrC,CACE7I,GAAI,YACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,MAC+B,KAA/CA,EAAUvR,cAAczI,eAAeK,KAAmD,IAArC2Z,EAAU/V,QAAQA,QAAQjD,QACjF0P,QAAS,CACPjV,MAAOiU,GAAaqL,KACpBpM,KAAM,sDACNC,KAAM,wCAGV,CACEvI,GAAI,QACJyU,iBAAkB,gBAAGlD,EAAH,EAAGA,OAAH,M5BnImB,8B4BmIHA,EAAOxY,QAAwCwY,EAAOxW,MAAM4D,UAC9F0L,QAAS,CACPjV,MAAOiU,GAAasL,QACpBrM,KACE,+GAGN,CACEtI,GAAI,cACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,MAC+B,KAA/CA,EAAUvR,cAAczI,eAAeK,MAAe2Z,EAAU5M,GAAG2F,cACrErC,QAAS,CACPjV,MAAOiU,GAAaqL,KACpBpM,KAAM,8GAGV,CACEtI,GAAI,iBACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,MAAkE,KAA/CA,EAAUvR,cAAczI,eAAeK,KAAc2Z,EAAU5M,GAAG2F,cACvGrC,QAAS,CACPjV,MAAOiU,GAAaqL,KACpBpM,KACE,mMAIN,CACEtI,GAAI,cACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,OAChBA,EAAU/V,QAAQA,QAAQjD,OAAS,GAAKgZ,EAAU/V,QAAQA,QAAQjD,OAAS,IAAMgZ,EAAU5M,GAAGgK,gBAChG1G,QAAS,CACPjV,MAAOiU,GAAaqL,KACpBpM,KACE,mIAGN,CACEtI,GAAI,aACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,OAChBA,EAAUvR,cAAczI,eAAeS,aAAetF,EAAS0B,MAChB,KAA/Cmd,EAAUvR,cAAczI,eAAeK,MACtC2Z,EAAUzM,OAAO5M,QACpB+P,QAAS,CACPjV,MAAOiU,GAAaqL,KACpBpM,KAAM,+DAGV,CACEtI,GAAI,oBACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,OAChBA,EAAUvR,cAAczI,eAAeS,aAAetF,EAAS0B,MAChB,KAA/Cmd,EAAUvR,cAAczI,eAAeK,KACzCqQ,QAAS,SAACsJ,EAAWpC,GACnB,IAAMnY,EAAaT,EAAiBgb,EAAUvR,cAAczI,eAAeK,KACrE4a,ErB5LgB,iBqB4LPrD,EAAOxY,MAAyB4a,EAAUzM,OAAO5M,OAChE,OAAIlB,EACK,CACLhE,MAAOiU,GAAasL,QACpBrM,KAAK,gCAAD,OAAkClP,EAAWZ,MAA7C,aACFoc,EAAS,GAAK,2CAIX,CACLxf,MAAOiU,GAAasE,MACpBrF,KAAK,wGAKb,CACEtI,GAAI,qBACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,SACb,UAAWA,EAAUzM,UAAYyM,EAAUzM,OAAOlK,QACN,KAA/C2W,EAAUvR,cAAczI,eAAeK,OACrCua,GAAoBZ,EAAUvR,cAAczI,iBAChD0Q,QAAS,SAACsJ,EAAWpC,GAAY,IAAD,EACkBiD,GAAkBb,GAA1DvZ,EADsB,EACtBA,WAAYkK,EADU,EACVA,cACpB,OApJ0B,SAC9B9K,EACAiF,EACA2H,GAEA,IAAMyO,EAA4BzO,GAAmD,SAA1BA,EAC3D,GAAI5M,EAAM,CACR,GAAIqb,EAA2B,CAAC,IAAD,EACLf,GAA0B1N,GAA1C5N,EADqB,EACrBA,MAAO+P,EADc,EACdA,KACf,MAAO,CACLnT,MAAOiU,GAAaqL,KACpBpM,KAAK,sBAAD,OAAwB9P,EAAxB,yCACJ+P,QAGF,IADK,EACa9J,GAAYjF,IAASzE,EAAiBkC,IAEpD6c,GAAyB,WAEzBA,GAA0BM,GAA8B5a,IAHpDhB,EAFH,EAEGA,MAAO+P,EAFV,EAEUA,KAIf,MAAO,CACLnT,MAAOiU,GAAaqL,KACpBpM,KAAK,uBAAD,OAAyB9P,EAAzB,6BACJ+P,QAIJ,MAAO,CACLnT,MAAOiU,GAAasE,MACpBrF,KAAMuM,EAAyB,gDACcf,GAA0B1N,GAAuB5N,MAD/D,yCAE3B,wEAqHGsc,CAAwB1a,EAFD,EACKqE,SACkB6F,KAGzD,CACEtE,GAAI,yBACJyU,iBAAkB,mBA5GO,SAACvX,GAAyB,IAAD,EACJsX,GAAkBtX,GAA1DoH,EAD4C,EAC5CA,cAAelK,EAD6B,EAC7BA,WAAYqE,EADiB,EACjBA,SACnC,SAAI6F,GAAmC,SAAlBA,IAA4BlK,KAC3CqE,GAA8B,SAAlB6F,GACN+P,GAA4B,OAAWU,SAAS3a,IAEhDia,GAA6B/P,GAAeyQ,SAAS3a,IAsG1B4a,CAAnB,EAAGrB,YACrBtJ,QAAS,SAACsJ,GAAe,IAAD,EACgBa,GAAkBb,GAAhDvZ,EADc,EACdA,WAAYkK,EADE,EACFA,cACd2Q,EACJ7a,IAAerF,EAAiBoC,IAC5B,UACCoB,EAAiBO,MAAK,SAACoc,GAAD,OAAOA,EAAEtd,MAAQwC,MAAe,CAAExC,IAAK9C,EAAS0B,KAAMgC,MAAO,YAAaA,MACjG2c,EAA6B,SAAlB7Q,EAA2B,eAAiB/N,EAAgB+N,GAC7E,MAAO,CACLlP,MAAOiU,GAAavS,QACpBwR,KAAK,YAAD,OAAc6M,EAAd,kDAAgEF,EAAhE,gBAIV,CACEjV,GAAI,4BACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,SACb,UAAWA,EAAUzM,UAAYyM,EAAUzM,OAAOlK,QACN,KAA/C2W,EAAUvR,cAAczI,eAAeK,KACb,cAxIb,SAACkD,GAAyB,IAAD,EACJsX,GAAkBtX,GAAhD9C,EADkC,EAClCA,WAAYkK,EADsB,EACtBA,cACpB,OAAIA,GAAmC,SAAlBA,EACZA,EACElK,EACFga,GAA8Bha,QADhC,EAoIHgb,CAAWzB,IACbtJ,QAAS,CACPjV,MAAOiU,GAAavS,QACpBwR,KACE,2JAGN,CACEtI,GAAI,uBACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,OAChBA,EAAUvR,cAActI,kBAAkBM,aAAetF,EAAS0B,MAChB,KAAlDmd,EAAUvR,cAActI,kBAAkBE,KAC5CqQ,QAAS,SAACsJ,EAAWpC,GACnB,IAAM8D,EAAgBhc,EAAsBsa,EAAUvR,cAActI,kBAAkBE,KACtF,OAAIqb,EACK,CACLjgB,MAAOiU,GAAaqL,KACpBpM,KAAK,mCAAD,OAAqC/O,EAAS8b,EAAe3c,GAA7D,MAGC,CACLtD,MAAOiU,GAAavS,QACpBwR,KAAK,2GAKb,CACEtI,GAAI,yBACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,MACkC,KAAlDA,EAAUvR,cAActI,kBAAkBE,MACzC2Z,EAAUvR,cAActI,kBAAkBM,aAAenF,EAAgBoD,MACvEsb,EAAUvR,cAActI,kBAAkBM,aAAetF,EAAS0B,MACjE6C,EAAsBsa,EAAUvR,cAActI,kBAAkBE,OAAS/E,EAAgBoD,OAC7Fkc,GAAoBZ,EAAUvR,cAAczI,kBAAoB5E,EAAiBiC,MACnFqT,QAAS,CACPjV,MAAOiU,GAAavS,QACpBwR,KAAM,yFAGV,CACEtI,GAAI,eACJyU,iBAAkB,kBAAmB,UAAnB,EAAGd,UAAqCzM,QAC1DmD,QAAS,SAACsJ,EAAWpC,GAAZ,MAAwB,CAC/Bnc,MAAOiU,GAAasE,MACpBrF,KAAK,iBAAD,OACF,UAAWqL,EAAUzM,QAAUyM,EAAUzM,OAAOlK,OAAS2W,EAAUzM,OAAOlK,MAAMqN,QAD9E,gEAKR,CACErK,GAAI,UACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,QAAqBA,EAAUzM,OAAO5M,SAAWqZ,EAAUxP,cAAcC,qBAC3FiG,QAAS,CACPjV,MAAOiU,GAAaqL,KACpBpM,KAAM,kFAGV,CACEtI,GAAI,yBACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAWpC,EAAd,EAAcA,OAAd,S5BrSmB,8B4BuSjCA,EAAOxY,MACPwY,EAAOxW,MAAM4D,UACb,uBAAwB4S,EAAOxW,MAAM4D,SAASyD,eACiB,KAA/DmP,EAAOxW,MAAM4D,SAASyD,cAAcxI,mBAAmBI,KACvDuX,EAAOxW,MAAM4D,SAASyD,cAAcxI,mBAAmBQ,YACvDuZ,EAAUvR,cAAc9D,yBAAyBlC,QAC/CmV,EAAOxW,MAAM4D,SAASyD,cAAcxI,mBAAmBQ,YACrD,IAERiQ,QAAS,CACPjV,MAAOiU,GAAasE,MACpBrF,KACE,mKAIN,CACEtI,GAAI,kBACJyU,iBAAkB,qBAAGd,UAA0B5M,GAAG2F,cAClDrC,QAAS,SAACsJ,EAAWpC,GAAZ,MAAwB,CAC/Bnc,MAAOiU,GAAaqL,KACpBpM,KAAK,yBAAD,QAA4BqL,EAAUvR,cAAc9D,0BAA4B,IACjF/G,KAAI,SAAC+d,GAAD,OAAO/b,EAAS+b,EAAG7c,MACvB4D,KAAK,SAFJ,yBAKR,CACE2D,GAAI,2BACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,OAChBA,EAAU5M,GAAG2F,gBACXiH,EAAUvR,cAAcxI,mBAAmBI,MAC5C2Z,EAAUvR,cAAcvI,uBAAuBG,KAChD2Z,EAAUvR,cAAcxI,mBAAmBQ,aAAepF,EAAckD,UAC1EmS,QAAS,CACPjV,MAAOiU,GAAavS,QACpBwR,KACE,0HAGN,CACEtI,GAAI,2BACJyU,iBAAkB,gBAAGd,EAAH,EAAGA,UAAH,OAChBA,EAAU5M,GAAG2F,gBACXiH,EAAUvR,cAAcxI,mBAAmBI,MAC5C2Z,EAAUvR,cAAcvI,uBAAuBG,KAChD2Z,EAAUvR,cAAcxI,mBAAmBQ,aAAepF,EAAcgD,UAC1EqS,QAAS,CACPjV,MAAOiU,GAAaqL,KACpBpM,KACE,oPAIN,CACEtI,GAAI,8BACJyU,iBAAkB,YAAoB,IAAjBd,EAAgB,EAAhBA,UACnB,KACEA,EAAU5M,GAAG2F,cACbiH,EAAUxP,cAAcE,qBACxBsP,EAAUxP,cAAcE,oBAAoBR,QAS5C,OAAO,EAPP,IAEE,OADAlH,KAAKC,MAAM+W,EAAUxP,cAAcE,sBAC5B,EACP,MAAOvH,GACP,OAAO,IAMbuN,QAAS,CACPjV,MAAOiU,GAAavS,QACpBwR,KAAM,8FCrXNiN,GAAcC,2BAAgB,CAClCzO,MACA3E,iBACA8E,UACA/C,iBACAvG,WACAkL,YAAa,iBAAO,MAGhB2M,GAAelC,GAAiC1K,IlBkBN,SAAC6M,EAAchC,EAAWnC,EAAQoC,GAAlC,OAC9C+B,EACGvZ,QAAO,SAACwZ,GAAD,OAAUA,EAAKlB,iBAAiB,CAAElD,SAAQmC,YAAWC,iBAC5Dpc,KAAI,SAACoe,GAAD,MAAmC,oBAAjBA,EAAKtL,QAAyBsL,EAAKtL,QAAQsJ,EAAWpC,GAAUoE,EAAKtL,cmBhC1FuL,GAAyB,SAACzR,GAAD,mBAAC,eAC3BA,GAD0B,IAE7BG,cAAgBH,GAAiBA,EAAcG,eAAkB,UA0B7DuR,GAAa,CAEjBC,EAAG,SAAC5Y,GACF,OAAIA,EACK,2BACFA,GADL,IAEEU,SA7B+BA,EA6BQV,EAAMU,QA5B/CA,GAAWA,EAAQA,QACd,2BACFA,GADL,IAEEA,QAASA,EAAQA,QAAQrG,KAAI,SAACsO,GAC5B,MAAI,kBAAmBA,EAAaL,SAC3B,2BACFK,GADL,IAEEL,SAAS,2BACJK,EAAaL,UADV,IAENrB,cAAeyR,GAAuB/P,EAAaL,SAASrB,mBAIzD0B,OAKNjI,GAWHuG,cAAeyR,GAAuB1Y,EAAMiH,iBAGvCjH,EAjCyB,IAACU,IAsC1BmY,GAAuB,CAClC/B,QAAS,EACTgC,QAASC,aAAcJ,GAAY,CAAEK,OAAO,KC5CxCC,GAAa,2BACdJ,IADc,IAEjBne,IAAK,OACLwe,aACAC,UAAW,CAAC,SAAU,iBAGlBC,GAAmBC,aAAeJ,IFYzB,SAACjZ,EAA6BqU,GAA9B,OACbkE,GAAavY,EAAOqU,EAAQgE,GAAYrY,EAAOqU,O,GEXlC,WACb,IAAMiF,EAAQC,uBAAYH,GAAkBI,+BAAoBC,2BAAgBC,QAEhF,MAAO,CAAEJ,QAAOK,UADEC,aAAaN,ICXJO,GAArBP,G,GAAAA,MAAOK,G,GAAAA,UAEfG,IAASC,OACP,kBAAC,KAAD,CAAUT,MAAOA,IACf,kBAAC,KAAD,CAAaK,UAAWA,IACtB,kBAAC,GAAD,QAGJ/Y,SAASoZ,eAAe,SZ8GpB,kBAAmB5I,WACrBA,UAAU6I,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.1fedb349.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/replay-logo.db4d89bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/streamlab-logo.6081168a.svg\";","import React from 'react';\nimport { Heading, HeadingProps } from '@chakra-ui/react';\n\nexport enum Level {\n  H1 = 'h1',\n  H2 = 'h2',\n  H3 = 'h3',\n  H4 = 'h4',\n  H5 = 'h5',\n  H6 = 'h6',\n}\n\nconst getStyles = (level: Level): HeadingProps => {\n  switch (level) {\n    case Level.H1:\n      return {\n        size: 'md',\n        my: 1,\n        mx: 4,\n        px: 1,\n      };\n    case Level.H2:\n      return {\n        size: 'sm',\n        m: 0,\n        p: 1,\n        textAlign: 'left',\n      };\n    case Level.H3:\n      return {\n        size: 'md',\n        my: 4,\n      };\n    case Level.H4:\n      return {\n        size: 'sm',\n        my: 4,\n      };\n    case Level.H6:\n      return {\n        size: 'sm',\n        fontWeight: 'normal',\n        justifySelf: 'center',\n      };\n    default:\n      return {\n        size: 'sm',\n      };\n  }\n};\n\ntype Props = HeadingProps & {\n  level: Level;\n  children: React.ReactNode;\n};\n\nconst Header: React.FC<Props> = ({ level, children, ...headingProps }: Props) => (\n  <Heading as={level} {...getStyles(level)} {...headingProps}>\n    {children}\n  </Heading>\n);\n\nexport default Header;\n","import {\n  streamTypes,\n  isLegacyMicrosoft,\n  isChromiumEdgeOnWindows,\n  isSafari,\n  // @ts-ignore\n} from 'vimond-replay/components/player/VideoStreamer/CompoundVideoStreamer/helpers.js';\nimport { PlaybackSource } from 'vimond-replay/default-player/Replay';\nimport { PlayerConfiguration } from 'vimond-replay';\n\nexport enum BaseTech {\n  AUTO,\n}\n\n// The following enum member orders should be considered as \"sealed\"/\"final\",\n// and never be changed, for backward compatibility in history and link sharing.\n\nexport enum StreamTechnology {\n  DASH = 1,\n  HLS,\n  PROGRESSIVE,\n  MSS,\n}\n\nexport enum DrmTechnology {\n  WIDEVINE = 1,\n  PLAYREADY,\n  FAIRPLAY,\n}\n\nexport enum SubtitlesFormat {\n  WEBVTT = 1,\n  TTML,\n  SRT,\n}\n\nexport type AutoTechnology<T> = BaseTech | T;\n\nexport interface Resource<T> {\n  url: string;\n  headers: { id: number; name: string; value: string }[];\n  useProxy: boolean;\n  technology: AutoTechnology<T>;\n}\n\ntype StreamDetails = {\n  streamResource: Resource<StreamTechnology>;\n  drmLicenseResource?: Resource<DrmTechnology>;\n  drmCertificateResource?: Resource<DrmTechnology>;\n  subtitlesResource?: Resource<SubtitlesFormat>;\n  startOffset?: number | '';\n};\n\nexport type LabeledTechOption = {\n  key: BaseTech | StreamTechnology | DrmTechnology | SubtitlesFormat;\n  label: string;\n};\n\nexport enum PlayerLogLevel {\n  NONE,\n  ERROR,\n  WARNING,\n  INFO,\n  DEBUG,\n  VERBOSE,\n}\n\nexport const playerLibraries = {\n  AUTO: 'Automatic selection',\n  SHAKA_PLAYER: 'Shaka Player',\n  HLS_JS: 'HLS.js',\n  RX_PLAYER: 'RxPlayer',\n  HTML: 'Native browser playback through HTML <video> element',\n};\n\n// Union instead of enum. Perhaps refactor similar types above for consistency.\nexport type PlayerLibrary = keyof typeof playerLibraries;\n\nexport const DEFAULT_PLAYER_LOG_LEVEL = PlayerLogLevel.WARNING;\n\ntype PlayerOptions = {\n  logLevel: PlayerLogLevel;\n  showPlaybackMonitor: boolean;\n  customConfiguration: string;\n};\n\nexport const contentTypes = {\n  [StreamTechnology.DASH]: 'application/dash+xml',\n  [StreamTechnology.HLS]: 'application/x-mpegurl',\n  [StreamTechnology.PROGRESSIVE]: 'video/mp4',\n  [StreamTechnology.MSS]: 'application/vnd.ms-sstr+xml',\n};\n\nconst reverseContentTypes: { [key: string]: StreamTechnology } = Object.entries(contentTypes)\n  .map((kv) => kv.reverse())\n  .reduce((obj, [key, val]) => {\n    obj[key] = Number(val) as StreamTechnology;\n    return obj;\n  }, {} as { [key: string]: StreamTechnology });\n\nconst drmSchemes = {\n  [DrmTechnology.WIDEVINE]: 'com.widevine.alpha',\n  [DrmTechnology.PLAYREADY]: 'com.microsoft.playready',\n  [DrmTechnology.FAIRPLAY]: 'com.apple.fps.1_0',\n};\n\nconst subtitlesContentTypes = {\n  [SubtitlesFormat.WEBVTT]: 'text/vtt',\n  [SubtitlesFormat.TTML]: 'application/ttml+xml',\n  [SubtitlesFormat.SRT]: 'text/srt',\n};\n\nexport const streamTechLabels = [\n  {\n    key: BaseTech.AUTO,\n    label: 'Auto',\n  },\n  {\n    key: StreamTechnology.DASH,\n    label: 'MPEG-DASH',\n  },\n  {\n    key: StreamTechnology.HLS,\n    label: 'HLS',\n  },\n  {\n    key: StreamTechnology.MSS,\n    label: 'Smooth stream',\n  },\n  {\n    key: StreamTechnology.PROGRESSIVE,\n    label: 'Progressive video',\n  },\n];\n\nexport const drmTechLabels = [\n  {\n    key: DrmTechnology.WIDEVINE,\n    label: 'Widevine',\n  },\n  {\n    key: DrmTechnology.PLAYREADY,\n    label: 'PlayReady',\n  },\n  {\n    key: DrmTechnology.FAIRPLAY,\n    label: 'FairPlay',\n  },\n];\n\nexport const subtitlesFormatLabels = [\n  {\n    key: BaseTech.AUTO,\n    label: 'Auto',\n  },\n  {\n    key: SubtitlesFormat.WEBVTT,\n    label: 'WebVTT',\n  },\n  {\n    key: SubtitlesFormat.TTML,\n    label: 'TTML (DXFP)',\n  } /*, // Not supported yet:\n  {\n    key: SubtitlesFormat.SRT,\n    label: 'SRT (SubRip)'\n  }*/,\n];\n\nconst getContentType = (streamType?: { contentTypes: string[] }) => {\n  if (streamType) {\n    return streamType.contentTypes[0];\n  }\n};\n\ninterface DetectedStreamType {\n  name: string;\n  label: string;\n  contentTypes: string[];\n}\n\nexport const detectStreamType = (streamUrl: string): DetectedStreamType | undefined =>\n  // @ts-ignore\n  streamTypes.find((type) => {\n    const { urlMatch, urlNotMatch } = type;\n    if (urlNotMatch) {\n      return urlMatch.test(streamUrl) && !urlNotMatch.test(streamUrl);\n    } else {\n      return urlMatch.test(streamUrl);\n    }\n  });\n\nexport const detectStreamTechnology = (streamUrl: string): StreamTechnology | undefined => {\n  const streamType = detectStreamType(streamUrl);\n  if (streamType) {\n    return reverseContentTypes[streamType.contentTypes[0]];\n  }\n};\n\nexport const detectSupportedDrmTechnologies = (userAgent: string) => {\n  if (isLegacyMicrosoft(userAgent)) {\n    return [DrmTechnology.PLAYREADY];\n  } else if (isChromiumEdgeOnWindows(userAgent)) {\n    return [DrmTechnology.PLAYREADY, DrmTechnology.WIDEVINE];\n  } else if (isSafari(userAgent)) {\n    return [DrmTechnology.FAIRPLAY];\n  } else {\n    // Firefox, Chrome, Chromium Edge on Mac etc.\n    return [DrmTechnology.WIDEVINE];\n  }\n};\n\nexport const detectSubtitlesFormat = (subtitlesUrl: string) => {\n  if (/\\.vtt/.test(subtitlesUrl)) {\n    return SubtitlesFormat.WEBVTT;\n  } else if (/(\\.ttml|\\.dxfp|\\.xml)/.test(subtitlesUrl)) {\n    return SubtitlesFormat.TTML;\n  } else if (/\\.srt/.test(subtitlesUrl)) {\n    return SubtitlesFormat.SRT;\n  }\n};\n\nexport const getLabel = <T extends unknown>(tech: AutoTechnology<T>, options: LabeledTechOption[]) =>\n  (options.find(({ key }) => key === tech) || options[0] || { label: '' }).label;\n\nexport const createPlayerSource = ({\n  streamResource,\n  drmLicenseResource,\n  drmCertificateResource,\n  subtitlesResource,\n  startOffset,\n}: StreamDetails): PlaybackSource | undefined => {\n  const streamUrl = streamResource.url;\n  const startPosition = startOffset === '' ? undefined : startOffset;\n  if (streamUrl) {\n    const contentType =\n      streamResource.technology === BaseTech.AUTO\n        ? getContentType(detectStreamType(streamUrl))\n        : contentTypes[streamResource.technology];\n    if (contentType) {\n      const source: PlaybackSource = {\n        streamUrl,\n        contentType,\n        startPosition,\n      };\n\n      if (drmLicenseResource) {\n        const licenseUrl = drmLicenseResource.url;\n        if (licenseUrl) {\n          source.licenseUrl = licenseUrl;\n          source.drmType =\n            drmLicenseResource.technology !== BaseTech.AUTO ? drmSchemes[drmLicenseResource.technology] : undefined;\n          source.licenseAcquisitionDetails = {};\n\n          if (drmLicenseResource && drmLicenseResource.headers.length) {\n            const headers: { [k: string]: string } = {};\n            drmLicenseResource.headers.forEach((h) => (headers[h.name] = h.value));\n            source.licenseAcquisitionDetails.licenseRequestHeaders = headers;\n          }\n\n          const certificateUrl = drmCertificateResource && drmCertificateResource.url;\n          if (certificateUrl) {\n            if (drmLicenseResource.technology === DrmTechnology.WIDEVINE) {\n              source.licenseAcquisitionDetails.widevineServiceCertificateUrl = certificateUrl;\n            } else if (drmLicenseResource.technology === DrmTechnology.FAIRPLAY) {\n              source.licenseAcquisitionDetails.fairPlayCertificateUrl = certificateUrl;\n            }\n          }\n        }\n      }\n\n      if (subtitlesResource) {\n        const src = subtitlesResource.url;\n        if (src) {\n          const subtitlesFormat =\n            subtitlesResource.technology === BaseTech.AUTO ? detectSubtitlesFormat(src) : subtitlesResource.technology;\n          if (subtitlesFormat) {\n            const contentType = subtitlesContentTypes[subtitlesFormat];\n            const match = src.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\n            const hostname = match && match[2];\n            const label = `Subtitles file from ${hostname}`;\n            source.textTracks = [{ contentType, src, label }];\n          }\n        }\n      }\n      return source;\n    }\n  }\n};\n\nexport const getLogLevelLabel = (logLevel: PlayerLogLevel) => {\n  const found = Object.entries(PlayerLogLevel).find(([key, value]) => logLevel === value);\n  return found && found[0];\n};\n\nexport const createPlayerOptions = ({ logLevel, showPlaybackMonitor, customConfiguration }: PlayerOptions) => {\n  const trimmed = customConfiguration.trim();\n  let options: PlayerConfiguration = {};\n  if (trimmed) {\n    try {\n      options = JSON.parse(trimmed);\n    } catch (e) {}\n  }\n\n  options.videoStreamer = options.videoStreamer || {};\n  // @ts-ignore\n  options.videoStreamer.logLevel = getLogLevelLabel(logLevel);\n  // @ts-ignore\n  options.playbackMonitor = options.playbackMonitor || {};\n  // @ts-ignore\n  options.playbackMonitor.visibleAtStart = showPlaybackMonitor;\n\n  return options;\n};\n","import { PersistibleFormData } from './history';\n\nconst setupParamName = 's=';\n\ntype LocationProps = {\n  origin: string;\n  pathname: string;\n  search: string;\n};\n\n// TODO in reducer: Derive: advancedMode (according to details), isRightPaneExpanded true, rightPaneIndex 0, expandedAdvancedAccordionIndices - all.\n\nconst getQueryParameter = (queryString: string, key: string) =>\n  queryString.length &&\n  queryString\n    .substr(1)\n    .split('&')\n    .find((p) => p.startsWith(key));\n\nconst getRemainingQueryString = (queryString: string, paramName: string, delimiter = '&') => {\n  if (queryString.length > 1) {\n    const remaining = queryString\n      .substr(1)\n      .split('&')\n      .filter((p) => p.indexOf(paramName) !== 0)\n      .join('&');\n    if (remaining.length > 1) {\n      return delimiter + remaining;\n    }\n  }\n  return '';\n};\n\nconst simplerEncodeUri = (str: string) =>\n  encodeURIComponent(str)\n    .replace(/%7B/g, '{')\n    .replace(/%7D/g, '}')\n    .replace(/%2C/g, ',')\n    .replace(/%3A/g, ':')\n    .replace(/%5B/g, '[')\n    .replace(/%5D/g, ']');\n\nexport const twoLevelCopy = <T>(obj: T): T => {\n  const copy = { ...(obj as { [key: string]: any }) } as { [key: string]: any };\n  Object.keys(obj).forEach((outerKey) => {\n    copy[outerKey] = { ...(copy[outerKey] as { [key: string]: any }) } as { [key: string]: any };\n  });\n  return copy as T;\n};\n\nexport const parseSetupFromQueryString = (queryString: string): PersistibleFormData | undefined => {\n  try {\n    const setupParameter = getQueryParameter(queryString, setupParamName);\n    if (setupParameter) {\n      const encodedValue = setupParameter.substr(setupParamName.length);\n      if (encodedValue.length) {\n        return JSON.parse(decodeURIComponent(encodedValue)) as PersistibleFormData;\n      }\n    }\n  } catch (e) {\n    console.error(`Bad format/encoding of setup parameter (\"${setupParamName}\").`);\n  }\n};\n\nexport const buildUrlFromState = (state: PersistibleFormData, { origin, pathname, search }: LocationProps): string =>\n  `${origin}${pathname}?${setupParamName}${simplerEncodeUri(JSON.stringify(state))}${getRemainingQueryString(\n    search,\n    setupParamName\n  )}`;\n\nexport const removeSetupFromUrl = ({ pathname, search }: LocationProps): string => {\n  return pathname + getRemainingQueryString(search, setupParamName, '?');\n};\n\nexport const updateAddressBar = () =>\n  window.history.pushState({}, document.title, removeSetupFromUrl(document.location));\n\n// Must be called:\n// O Advanced mode toggle\n// O Basic/advanced stream form field change\n// O Player options change\n// O Clear form\n// * Restore into forms\n","import {\n  detectSupportedDrmTechnologies,\n  DrmTechnology,\n  Resource,\n  StreamTechnology,\n  SubtitlesFormat,\n} from '../model/streamDetails';\nimport { PersistibleFormData } from '../model/history';\nimport { parseSetupFromQueryString } from '../model/sharing';\n\nexport const STREAM_RESOURCE_FIELD_CHANGE = 'STREAM_RESOURCE_FIELD_CHANGE';\nexport const DRM_LICENSE_RESOURCE_FIELD_CHANGE = 'DRM_LICENSE_RESOURCE_FIELD_CHANGE';\nexport const DRM_CERTIFICATE_RESOURCE_FIELD_CHANGE = 'DRM_CERTIFICATE_RESOURCE_FIELD_CHANGE';\nexport const SUBTITLES_RESOURCE_FIELD_CHANGE = 'SUBTITLES_RESOURCE_FIELD_CHANGE';\nexport const START_OFFSET_FIELD_CHANGE = 'START_OFFSET_FIELD_CHANGE';\nexport const APPLY_BROWSER_ENVIRONMENT = 'APPLY_BROWSER_ENVIRONMENT';\n\nexport type ApplyBrowserEnvironmentAction = {\n  type: typeof APPLY_BROWSER_ENVIRONMENT;\n  value: {\n    supportedDrmTechnologies: DrmTechnology[];\n    urlSetup: PersistibleFormData | undefined;\n  };\n};\n\nexport type ResourceUpdate =\n  | {\n      streamResource: Partial<Resource<StreamTechnology>>;\n    }\n  | {\n      drmLicenseResource: Partial<Resource<DrmTechnology>>;\n    }\n  | {\n      drmCertificateResource: Partial<Resource<DrmTechnology>>;\n    }\n  | {\n      subtitlesResource: Partial<Resource<SubtitlesFormat>>;\n    }\n  | {\n      startOffset: number | '';\n    };\n\nexport type StreamDetailsFieldChangeAction =\n  | {\n      type: typeof STREAM_RESOURCE_FIELD_CHANGE;\n      value: Partial<Resource<StreamTechnology>>;\n    }\n  | {\n      type: typeof DRM_LICENSE_RESOURCE_FIELD_CHANGE;\n      value: Partial<Resource<DrmTechnology>>;\n    }\n  | {\n      type: typeof DRM_CERTIFICATE_RESOURCE_FIELD_CHANGE;\n      value: Partial<Resource<DrmTechnology>>;\n    }\n  | {\n      type: typeof SUBTITLES_RESOURCE_FIELD_CHANGE;\n      value: Partial<Resource<SubtitlesFormat>>;\n    }\n  | {\n      type: typeof START_OFFSET_FIELD_CHANGE;\n      value: number | '';\n    };\n\nexport const updateStreamDetailsField = (resourceUpdate: ResourceUpdate): StreamDetailsFieldChangeAction =>\n  'streamResource' in resourceUpdate\n    ? {\n        type: STREAM_RESOURCE_FIELD_CHANGE,\n        value: resourceUpdate.streamResource,\n      }\n    : 'drmLicenseResource' in resourceUpdate\n    ? {\n        type: DRM_LICENSE_RESOURCE_FIELD_CHANGE,\n        value: resourceUpdate.drmLicenseResource,\n      }\n    : 'drmCertificateResource' in resourceUpdate\n    ? {\n        type: DRM_CERTIFICATE_RESOURCE_FIELD_CHANGE,\n        value: resourceUpdate.drmCertificateResource,\n      }\n    : 'subtitlesResource' in resourceUpdate\n    ? {\n        type: SUBTITLES_RESOURCE_FIELD_CHANGE,\n        value: resourceUpdate.subtitlesResource,\n      }\n    : {\n        type: START_OFFSET_FIELD_CHANGE,\n        value: resourceUpdate.startOffset,\n      };\n\nexport const applyBrowserEnvironment = (userAgent: string, queryString: string): ApplyBrowserEnvironmentAction => {\n  const supportedDrmTechnologies = detectSupportedDrmTechnologies(userAgent);\n  return {\n    type: APPLY_BROWSER_ENVIRONMENT,\n    value: {\n      supportedDrmTechnologies,\n      urlSetup: parseSetupFromQueryString(queryString),\n    },\n  };\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Box, Collapse, Flex, IconButton, Input, BoxProps } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\n\ntype Header = { name: string; value: string; id: number };\n\ntype Props = BoxProps & {\n  headers: Header[];\n  onHeadersChange: (headers: Header[]) => void;\n};\n\nconst renderRow = (\n  isOpen: boolean[],\n  onChange: (header: Header, index: number) => void,\n  onAnimationEnd: (index: number) => void,\n  onDelete: (index: number) => void\n) => ({ name, value, id }: Header, index: number, arr: Header[]) => {\n  return (\n    <Collapse key={id} in={isOpen[index]} onAnimationComplete={() => onAnimationEnd(index)}>\n      <Flex direction=\"row\" py={2}>\n        <Input\n          flex=\"1 2 auto\"\n          placeholder=\"Header name\"\n          mr={2}\n          value={name}\n          onChange={(evt: React.ChangeEvent<HTMLInputElement>) =>\n            onChange({ name: evt.target.value, value, id }, index)\n          }\n        />\n        <Input\n          flex=\"2 1 auto\"\n          placeholder=\"Header value\"\n          mr={2}\n          value={value}\n          onChange={(evt: React.ChangeEvent<HTMLInputElement>) =>\n            onChange({ name, value: evt.target.value, id }, index)\n          }\n        />\n        <IconButton flex=\"0\" aria-label=\"Remove header\" icon={<DeleteIcon />} onClick={() => onDelete(index)} mr={2} />\n      </Flex>\n    </Collapse>\n  );\n};\n\nconst HeaderRows: React.FC<Props> = (props) => {\n  const { headers = [], onHeadersChange, ...boxProps } = props;\n\n  const [isOpen, setIsOpen] = useState<boolean[]>([]);\n  const headersRef = useRef<Header[]>();\n\n  useEffect(() => {\n    const prev = headersRef.current;\n    if (prev) {\n      if (prev.length < headers.length) {\n        setIsOpen([...isOpen, true]);\n      } else if (prev.length > headers.length) {\n        setIsOpen(new Array(headers.length).fill(true));\n      }\n    } else {\n      setIsOpen(new Array(headers.length).fill(true));\n    }\n    headersRef.current = headers;\n  }, [headers, isOpen]);\n\n  const handleChange = (header: Header, index: number) => {\n    const headersCopy = headers.slice(0);\n    headersCopy[index] = header;\n    onHeadersChange(headersCopy);\n  };\n\n  const handleDelete = (index: number) => {\n    isOpen[index] = false;\n    setIsOpen([...isOpen]);\n  };\n\n  const handleAnimationEnd = (index: number) => {\n    if (!isOpen[index]) {\n      const headersCopy = headers.slice(0);\n      headersCopy.splice(index, 1);\n      onHeadersChange(headersCopy);\n    }\n  };\n\n  return (\n    <Box mb={headers.length ? 4 : 0} {...boxProps}>\n      {headers.map && headers.map(renderRow(isOpen, handleChange, handleAnimationEnd, handleDelete))}\n    </Box>\n  );\n};\n\nexport default HeaderRows;\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  FormLabel,\n  FormControl,\n  Input,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Switch,\n  FormHelperText,\n} from '@chakra-ui/react';\nimport { ChevronDownIcon } from '@chakra-ui/icons';\nimport Header, { Level } from '../components/Header';\nimport {\n  AutoTechnology,\n  DrmTechnology,\n  LabeledTechOption,\n  Resource,\n  StreamTechnology,\n  SubtitlesFormat,\n  subtitlesFormatLabels,\n  drmTechLabels,\n  streamTechLabels,\n  getLabel,\n} from '../store/model/streamDetails';\nimport { AppState } from '../store/reducers';\nimport { ResourceUpdate, updateStreamDetailsField } from '../store/actions/streamDetails';\nimport { useDispatch, useSelector } from 'react-redux';\nimport HeaderRows from '../components/HeaderRows';\nimport { updateAddressBar } from '../store/model/sharing';\n\ntype RowProps<T = any> = {\n  id: string;\n  label: string;\n  url: string;\n  headers: { name: string; value: string; id: number }[];\n  technology: AutoTechnology<T>;\n  useProxy: boolean;\n  onChange: (resource: Partial<Resource<T>>) => void;\n  techOptions: LabeledTechOption[];\n  isHeadersEnabled?: boolean;\n};\n\nconst isProxyVisible = false;\n\nconst filterDrmTechLabels = (drmTechnologies: AutoTechnology<DrmTechnology>[]) =>\n  drmTechLabels.filter(({ key }) => drmTechnologies.indexOf(key) >= 0);\n\nconst StreamDetailRow: React.FC<RowProps> = ({\n  id,\n  url,\n  label, // TODO: Need\n  useProxy,\n  headers,\n  technology,\n  techOptions,\n  onChange,\n  isHeadersEnabled,\n}) => (\n  <>\n    <FormControl gridColumn={isHeadersEnabled ? 1 : '1/span 2'}>\n      <Input\n        onChange={(evt: React.ChangeEvent<HTMLInputElement>) => onChange({ url: evt.target.value })}\n        placeholder={label + ' URL'}\n        type=\"url\"\n        value={url}\n      />\n    </FormControl>\n    {isHeadersEnabled && (\n      <Button onClick={() => onChange({ headers: headers.concat({ name: '', value: '', id: Date.now() }) })}>\n        Add header\n      </Button>\n    )}\n    {techOptions.length > 1 ? (\n      <Menu aria-label={label + ' technology menu'}>\n        <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\n          {getLabel(technology, techOptions)}\n        </MenuButton>\n        <MenuList>\n          {techOptions.map(({ key, label }: LabeledTechOption, i: number) => (\n            <MenuItem key={i} onClick={() => onChange({ technology: key })}>\n              {label}\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Menu>\n    ) : (\n      <Button isDisabled={true}>{getLabel(technology, techOptions)}</Button>\n    )}\n    {isProxyVisible && (\n      <FormControl justifySelf=\"center\">\n        <Switch\n          onChange={(evt: React.ChangeEvent<HTMLInputElement>) => onChange({ useProxy: evt.target.checked })}\n          id={`${id}-proxy-activate`}\n          isChecked={useProxy}\n        >\n          Activate proxy for {label}\n        </Switch>\n      </FormControl>\n    )}\n    <Box gridColumn=\"1/span 4\">\n      <HeaderRows\n        onHeadersChange={(headers: { name: string; value: string; id: number }[]) => onChange({ headers })}\n        headers={headers}\n      />\n    </Box>\n  </>\n);\n\nconst StreamDetails: React.FC = () => {\n  const {\n    streamResource,\n    drmLicenseResource,\n    drmCertificateResource,\n    subtitlesResource,\n    startOffset,\n    supportedDrmTechnologies = [DrmTechnology.WIDEVINE],\n    isDrmCertificateApplicable,\n  } = useSelector((state: AppState) => ({ ...state.streamDetails }));\n\n  const dispatch = useDispatch();\n  const handleResourceFieldChange = (resource: ResourceUpdate) => {\n    updateAddressBar();\n    return dispatch(updateStreamDetailsField(resource));\n  };\n\n  return (\n    <form aria-label=\"Stream details form\">\n      <Box\n        display=\"grid\"\n        gridTemplateColumns={isProxyVisible ? `1fr auto auto auto` : `1fr auto auto`}\n        gridAutoRows=\"auto\"\n        gridGap={2}\n        alignItems=\"center\"\n      >\n        <Header level={Level.H6} justifySelf=\"left\" gridColumn=\"1/span 2\">\n          URLs\n        </Header>\n        <Header level={Level.H6}>Technology</Header>\n        {isProxyVisible && <Header level={Level.H6}>Proxy</Header>}\n        <StreamDetailRow\n          id=\"stream\"\n          label=\"Stream\"\n          techOptions={streamTechLabels}\n          isHeadersEnabled={false}\n          onChange={(streamResource: Partial<Resource<StreamTechnology>>) =>\n            handleResourceFieldChange({ streamResource })\n          }\n          {...streamResource}\n        />\n        <StreamDetailRow\n          label=\"DRM license\"\n          id=\"license\"\n          techOptions={filterDrmTechLabels(supportedDrmTechnologies)}\n          isHeadersEnabled\n          onChange={(drmLicenseResource: Partial<Resource<DrmTechnology>>) =>\n            handleResourceFieldChange({ drmLicenseResource })\n          }\n          {...drmLicenseResource}\n        />\n        {isDrmCertificateApplicable && (\n          <StreamDetailRow\n            id=\"certificate\"\n            label=\"DRM certificate\"\n            techOptions={filterDrmTechLabels([drmLicenseResource.technology])}\n            isHeadersEnabled={false}\n            onChange={(drmCertificateResource: Partial<Resource<DrmTechnology>>) =>\n              handleResourceFieldChange({ drmCertificateResource })\n            }\n            {...drmCertificateResource}\n          />\n        )}\n        <StreamDetailRow\n          id=\"subtitles\"\n          label=\"Subtitles\"\n          techOptions={subtitlesFormatLabels}\n          isHeadersEnabled={false}\n          onChange={(subtitlesResource: Partial<Resource<SubtitlesFormat>>) =>\n            handleResourceFieldChange({ subtitlesResource })\n          }\n          {...subtitlesResource}\n        />\n      </Box>\n      <FormControl display=\"flex\" alignItems=\"center\" mt={2}>\n        <FormLabel htmlFor=\"startOffsetField\">Start offset:</FormLabel>\n        <Input\n          id=\"startOffsetField\"\n          type=\"number\"\n          step={0.001}\n          value={startOffset}\n          width={24}\n          textAlign=\"right\"\n          min={0}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            handleResourceFieldChange({ startOffset: e.target.value === '' ? '' : Number(e.target.value) })\n          }\n        />\n        <FormHelperText mx={2} mb={3}>\n          seconds\n        </FormHelperText>\n      </FormControl>\n    </form>\n  );\n};\n\nexport default StreamDetails;\n","import React from 'react';\n\nimport { Controlled as CodeMirror } from 'react-codemirror2';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/addon/lint/lint.css';\nimport 'codemirror/addon/lint/lint';\nimport 'codemirror/addon/lint/json-lint';\nimport 'codemirror/mode/javascript/javascript';\n\n// @ts-ignore\nimport jsonlint from 'jsonlint-mod';\n// @ts-ignore\nwindow.jsonlint = jsonlint;\n\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n};\n\nexport const JsonEditor: React.FC<Props> = ({ value, onChange }) => (\n  <CodeMirror\n    value={value}\n    options={{\n      mode: 'application/json',\n      theme: 'default',\n      lineNumbers: true,\n      tabSize: 2,\n      gutters: ['CodeMirror-lint-markers'],\n      lint: value && value.trim(),\n    }}\n    onBeforeChange={(editor, data, newValue) => onChange(newValue)}\n  />\n);\n","import { HistoryEntry } from '../model/history';\n\nexport const SELECT_HISTORY_ENTRY = 'SELECT_HISTORY_ENTRY';\nexport const RESTORE_HISTORY_ENTRY = 'RESTORE_HISTORY_ENTRY';\nexport const UPDATE_HISTORY_ENTRY_NAME = 'UPDATE_HISTORY_ENTRY_NAME';\nexport const DELETE_HISTORY_ENTRY = 'DELETE_HISTORY_ENTRY';\nexport const DELETE_HISTORY = 'DELETE_HISTORY';\nexport const DELETE_UNNAMED_HISTORY_ENTRIES = 'DELETE_UNNAMED_HISTORY_ENTRIES';\nexport const SET_HISTORY_LIST_FILTER = 'SET_HISTORY_LIST_FILTER';\n\nexport enum HistoryEntryFilter {\n  BOTH,\n  NAMED,\n  UNNAMED,\n}\n\nexport interface HistoryEntryAction {\n  type: typeof SELECT_HISTORY_ENTRY | typeof RESTORE_HISTORY_ENTRY | typeof DELETE_HISTORY_ENTRY;\n  value: HistoryEntry;\n}\n\nexport interface UpdateSelectedHistoryEntryNameAction {\n  type: typeof UPDATE_HISTORY_ENTRY_NAME;\n  value: string;\n}\n\nexport interface DeleteHistoryAction {\n  type: typeof DELETE_HISTORY;\n}\n\nexport interface DeleteUnnamedHistoryEntriesAction {\n  type: typeof DELETE_UNNAMED_HISTORY_ENTRIES;\n}\n\nexport interface SetHistoryFilterAction {\n  type: typeof SET_HISTORY_LIST_FILTER;\n  value: HistoryEntryFilter;\n}\n\nexport const selectHistoryEntry = (value: HistoryEntry): HistoryEntryAction => ({\n  type: SELECT_HISTORY_ENTRY,\n  value,\n});\n\nexport const updateSelectedHistoryEntryName = (value: string): UpdateSelectedHistoryEntryNameAction => ({\n  type: UPDATE_HISTORY_ENTRY_NAME,\n  value,\n});\n\nexport const restoreHistoryEntry = (value: HistoryEntry): HistoryEntryAction => ({\n  type: RESTORE_HISTORY_ENTRY,\n  value,\n});\n\nexport const deleteHistoryEntry = (value: HistoryEntry): HistoryEntryAction => ({\n  type: DELETE_HISTORY_ENTRY,\n  value,\n});\n\nexport const deleteHistory = (): DeleteHistoryAction => ({\n  type: DELETE_HISTORY,\n});\n\nexport const setHistoryFilter = (value: HistoryEntryFilter): SetHistoryFilterAction => ({\n  type: SET_HISTORY_LIST_FILTER,\n  value,\n});\n\nexport const deleteUnnamedHistoryEntries = (): DeleteUnnamedHistoryEntriesAction => ({\n  type: DELETE_UNNAMED_HISTORY_ENTRIES,\n});\n","import React from 'react';\nimport { Button, Grid, Link, Switch, FormLabel, Menu, MenuButton, MenuList, MenuItem, Text } from '@chakra-ui/react';\nimport { AppState } from '../store/reducers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setLogLevel,\n  togglePlaybackMonitor,\n  setPlayerConfiguration,\n  setPlayerLibrary,\n} from '../store/actions/playerOptions';\nimport { getLogLevelLabel, playerLibraries, PlayerLibrary, PlayerLogLevel } from '../store/model/streamDetails';\nimport { JsonEditor } from '../components/JsonEditor';\nimport { updateAddressBar } from '../store/model/sharing';\nimport { ChevronDownIcon } from '@chakra-ui/icons';\n\n// TODO: Let clicks on log level label open the log level menu, parallel to the switch label.\n\nconst PlayerOptions: React.FC = () => {\n  const { logLevel, showPlaybackMonitor, customConfiguration, playerLibrary } = useSelector((state: AppState) => ({\n    ...state.playerOptions,\n  }));\n  const dispatch = useDispatch();\n\n  const handlePlayerLibraryClick = (value: PlayerLibrary) => {\n    updateAddressBar();\n    dispatch(setPlayerLibrary(value));\n  };\n  const handleLogLevelClick = (value: PlayerLogLevel) => {\n    updateAddressBar();\n    dispatch(setLogLevel(value));\n  };\n  const handlePlayerConfigurationChange = (value: string) => {\n    updateAddressBar();\n    return dispatch(setPlayerConfiguration(value));\n  };\n  const handlePlaybackMonitorToggle = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    updateAddressBar();\n    return dispatch(togglePlaybackMonitor(evt.target.checked));\n  };\n\n  return (\n    <form aria-label=\"Player options form\">\n      <Grid templateColumns=\"auto 1fr\" gap={4} my={2} alignItems=\"center\">\n        <Menu aria-label=\"Player library menu\">\n          <MenuButton as={Button} rightIcon={<ChevronDownIcon />} style={{ justifySelf: 'end' }}>\n            {playerLibraries[playerLibrary]}\n          </MenuButton>\n          <MenuList>\n            {Object.entries(playerLibraries)\n              // @ts-ignore\n              .map(([key, value]) => (\n                // @ts-ignore\n                <MenuItem key={key} onClick={() => handlePlayerLibraryClick(key)}>\n                  {value}\n                </MenuItem>\n              ))}\n          </MenuList>\n        </Menu>\n        <FormLabel>Player library to use for playback</FormLabel>\n        <Switch\n          id=\"playback-monitor-switch\"\n          style={{ justifySelf: 'end' }}\n          isChecked={showPlaybackMonitor}\n          onChange={handlePlaybackMonitorToggle}\n        />\n        <FormLabel htmlFor=\"playback-monitor-switch\">Display playback monitor overlay at startup</FormLabel>\n        <Menu aria-label=\"Log level menu\">\n          <MenuButton as={Button} rightIcon={<ChevronDownIcon />} style={{ justifySelf: 'end' }}>\n            {getLogLevelLabel(logLevel)}\n          </MenuButton>\n          <MenuList>\n            {Object.entries(PlayerLogLevel)\n              // @ts-ignore\n              .filter(([key]) => !isNaN(Number(PlayerLogLevel[key])))\n              .map(([key, value]) => (\n                <MenuItem key={value} onClick={() => handleLogLevelClick(Number(value))}>\n                  {key}\n                </MenuItem>\n              ))}\n          </MenuList>\n        </Menu>\n        <FormLabel>Player log level (for messages to the JS console)</FormLabel>\n      </Grid>\n      <Text mt={4} mb={1}>\n        Player configuration overrides according to{' '}\n        <Link\n          href=\"https://vimond.github.io/replay/#/custom-replay/configuration\"\n          isExternal\n          style={{ textDecoration: 'underline' }}\n        >\n          Replay documentation\n        </Link>\n        :\n      </Text>\n      <JsonEditor value={customConfiguration} onChange={handlePlayerConfigurationChange} />\n    </form>\n  );\n};\n\nexport default PlayerOptions;\n","import { PlayerLibrary, PlayerLogLevel } from '../model/streamDetails';\n\nexport const SET_LOG_LEVEL = 'SET_LOG_LEVEL';\nexport const TOGGLE_PLAYBACK_MONITOR = 'TOGGLE_PLAYBACK_MONITOR';\nexport const SET_PLAYER_CONFIGURATION = 'SET_PLAYER_CONFIGURATION';\nexport const SET_PLAYER_LIBRARY = 'SET_PLAYER_LIBRARY';\n\nexport type SetLogLevelAction = {\n  type: typeof SET_LOG_LEVEL;\n  value: PlayerLogLevel;\n};\n\nexport type TogglePlaybackMonitorAction = {\n  type: typeof TOGGLE_PLAYBACK_MONITOR;\n  value: boolean;\n};\n\nexport type SetPlayerConfigurationAction = {\n  type: typeof SET_PLAYER_CONFIGURATION;\n  value: string;\n};\n\nexport type SetPlayerLibraryAction = {\n  type: typeof SET_PLAYER_LIBRARY;\n  value: PlayerLibrary;\n};\n\nexport type PlayerOptionsAction =\n  | SetLogLevelAction\n  | TogglePlaybackMonitorAction\n  | SetPlayerConfigurationAction\n  | SetPlayerLibraryAction;\n\nexport const setLogLevel = (value: PlayerLogLevel): SetLogLevelAction => ({\n  type: SET_LOG_LEVEL,\n  value,\n});\n\nexport const togglePlaybackMonitor = (value: boolean): TogglePlaybackMonitorAction => ({\n  type: TOGGLE_PLAYBACK_MONITOR,\n  value,\n});\n\nexport const setPlayerConfiguration = (value: string): SetPlayerConfigurationAction => ({\n  type: SET_PLAYER_CONFIGURATION,\n  value,\n});\n\nexport const setPlayerLibrary = (value: PlayerLibrary): SetPlayerLibraryAction => ({\n  type: SET_PLAYER_LIBRARY,\n  value,\n});\n","import { PlaybackSource } from 'vimond-replay/default-player/Replay';\nimport { PlayerConfiguration } from 'vimond-replay';\nimport { AppState } from '../reducers';\nimport { Dispatch } from 'redux';\nimport { createPlayerOptions, createPlayerSource, PlayerLibrary } from '../model/streamDetails';\nimport { Action } from './index';\nimport { AdvancedHistoryEntry, BasicHistoryEntry, HistoryEntry } from '../model/history';\nimport { StreamDetailsState } from '../reducers/streamDetails';\nimport { PlayerOptionsState } from '../reducers/playerOptions';\n\nexport const PLAY = 'PLAY';\nexport const STOP = 'STOP';\nexport const PLAYER_ERROR = 'PLAYER_ERROR';\n\nexport type PlayerAction =\n  | {\n      type: typeof PLAY;\n      value: {\n        source: PlaybackSource;\n        options?: PlayerConfiguration;\n        playerLibraryOverride?: PlayerLibrary;\n        historyEntry: HistoryEntry;\n      };\n    }\n  | {\n      type: typeof STOP;\n    };\n\nexport type PlayerErrorAction = {\n  type: typeof PLAYER_ERROR;\n  error: Error;\n};\n\nconst createBasicHistoryEntry = (streamDetails: StreamDetailsState): BasicHistoryEntry => ({\n  timestamp: new Date().toISOString(),\n  name: '',\n  formData: {\n    streamDetails: {\n      streamResource: {\n        url: streamDetails.streamResource.url,\n        technology: streamDetails.streamResource.technology,\n      },\n    },\n  },\n});\n\nconst omitSupportedDrmTechnologies = (\n  streamDetails: StreamDetailsState\n): Omit<StreamDetailsState, 'supportedDrmTechnologies'> => {\n  const { supportedDrmTechnologies, ...rest } = streamDetails;\n  return rest;\n};\n\nconst createAdvancedHistoryEntry = (\n  streamDetails: StreamDetailsState,\n  playerOptions: PlayerOptionsState\n): AdvancedHistoryEntry => ({\n  timestamp: new Date().toISOString(),\n  name: '',\n  formData: {\n    streamDetails: omitSupportedDrmTechnologies(streamDetails),\n    playerOptions,\n  },\n});\n\nexport const playBasic = (dispatch: Dispatch<Action>, getState: () => AppState) => {\n  const { streamDetails } = getState();\n  const { streamResource } = streamDetails; // Only including what's visible in the form.\n  const source = createPlayerSource({ streamResource });\n  if (source) {\n    dispatch({\n      type: PLAY,\n      value: {\n        source,\n        historyEntry: createBasicHistoryEntry(streamDetails),\n      },\n    });\n  }\n};\n\nexport const playAdvanced = (dispatch: Dispatch<Action>, getState: () => AppState) => {\n  const { streamDetails, playerOptions } = getState();\n  const source = createPlayerSource(streamDetails);\n  const options = createPlayerOptions(playerOptions);\n  const playerLibraryOverride = playerOptions.playerLibrary;\n  if (source) {\n    dispatch({\n      type: PLAY,\n      value: {\n        source,\n        options,\n        playerLibraryOverride,\n        historyEntry: createAdvancedHistoryEntry({ ...streamDetails, startOffset: '' }, playerOptions),\n      },\n    });\n  }\n};\n\nexport const stop = (dispatch: Dispatch<Action>): PlayerAction => dispatch({ type: STOP });\n\nexport const handlePlayerError = (error: any) => (dispatch: Dispatch<Action>) => {\n  // TODO: Improve typing for Replay errors.\n  if (error instanceof Error) {\n    // Redux dev tools has issues with JSON.stringify and HLS.js source errors.\n    // @ts-ignore\n    if (error.sourceError && (error.sourceError.loader || (error.sourceError.frag && error.sourceError.frag.loader))) {\n      // @ts-ignore\n      const { loader, context, frag, ...rest } = error.sourceError;\n      // @ts-ignore\n      error.sourceError = rest;\n      dispatch({\n        type: PLAYER_ERROR,\n        error,\n      });\n    } else {\n      dispatch({\n        type: PLAYER_ERROR,\n        error,\n      });\n    }\n    console.error('Playback error: %s', error.message);\n  } else {\n    dispatch({\n      type: PLAYER_ERROR,\n      error: new Error(error),\n    });\n    console.error('Playback error:', error);\n  }\n  console.dir(error);\n};\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  Button,\n  Flex,\n  Stack,\n  Text,\n} from '@chakra-ui/react';\nimport StreamDetails from './StreamDetails';\nimport PlayerOptions from './PlayerOptions';\nimport Header, { Level } from '../components/Header';\nimport { playAdvanced, stop } from '../store/actions/player';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearForms, updateAdvancedAccordionExpansions } from '../store/actions/ui';\nimport { AppState } from '../store/reducers';\nimport { updateAddressBar } from '../store/model/sharing';\n\nconst SectionHeader: React.FC<{ header: string; isRequired?: boolean }> = ({ header, isRequired }) => (\n  <AccordionButton backgroundColor=\"gray.100\">\n    <Header level={Level.H2} flex=\"1\" lineHeight={1}>\n      {header}\n      {!isRequired && (\n        <Text as=\"em\" fontStyle=\"normal\" color=\"gray.500\" fontWeight=\"normal\" ml=\"4\">\n          {' '}\n          optional\n        </Text>\n      )}\n    </Header>\n    <AccordionIcon />\n  </AccordionButton>\n);\n\nconst Advanced: React.FC = () => {\n  const expandedIndices = useSelector((state: AppState) => state.ui.expandedAdvancedAccordionIndices);\n  const isPlaying = useSelector((state: AppState) => !!state.player.source);\n  const isPlayable = useSelector((state: AppState) => !!state.streamDetails.streamResource.url);\n  const isPlayerOptionsModified = useSelector((state: AppState) => state.playerOptions.isModified);\n\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  const dispatch = useDispatch();\n  const handleCloseClick = () => setIsOpen(false);\n  const handleClearClick = () => {\n    setIsOpen(false);\n    updateAddressBar();\n    dispatch(clearForms());\n  };\n  const handlePlay = (evt: React.MouseEvent<HTMLButtonElement>) => {\n    evt.currentTarget.blur(); // Otherwise Replay's Ctrl+Alt+M short cut will be captured as a click on this button.\n    dispatch(playAdvanced);\n  };\n  const handleStop = () => dispatch(stop);\n  const handleAccordionChange = (indices: number[]) => dispatch(updateAdvancedAccordionExpansions(indices));\n\n  const cancelRef = React.useRef<HTMLButtonElement>(null);\n  return (\n    <Stack aria-label=\"Advanced forms\">\n      {/*\n              // @ts-ignore Inconsistently defined change handler type. */}\n      <Accordion defaultIndex={expandedIndices} allowMultiple onChange={handleAccordionChange}>\n        <AccordionItem>\n          <SectionHeader header=\"Stream details\" isRequired />\n          <AccordionPanel ml={2} mt={1} backgroundColor=\"White\">\n            <StreamDetails />\n          </AccordionPanel>\n        </AccordionItem>\n        <AccordionItem>\n          <SectionHeader header={`Player options${isPlayerOptionsModified ? ' *' : ''}`} />\n          <AccordionPanel ml={2} mt={1} backgroundColor=\"White\">\n            <PlayerOptions />\n          </AccordionPanel>\n        </AccordionItem>\n      </Accordion>\n      <Flex justify=\"center\" py={4}>\n        <Button colorScheme=\"green\" onClick={handlePlay} mx={4} isDisabled={!isPlayable}>\n          Play\n        </Button>\n        <Button colorScheme=\"red\" onClick={handleStop} isDisabled={!isPlaying}>\n          Stop\n        </Button>\n        <Button colorScheme=\"red\" variant=\"outline\" onClick={() => setIsOpen(true)} mx={4}>\n          Clear all forms\n        </Button>\n        <AlertDialog leastDestructiveRef={cancelRef} isOpen={isOpen} onClose={handleCloseClick}>\n          <AlertDialogOverlay />\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Clear forms\n            </AlertDialogHeader>\n            <AlertDialogBody>\n              Are you sure you want to empty all form fields? You cannot undo this action afterwards.\n            </AlertDialogBody>\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={handleCloseClick}>\n                Cancel\n              </Button>\n              <Button colorScheme=\"red\" onClick={handleClearClick} ml={3}>\n                Clear forms\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default Advanced;\n","export const TOGGLE_ADVANCED_MODE = 'TOGGLE_ADVANCED_MODE';\nexport const PANE_RESIZE = 'PANE_RESIZE';\nexport const TOGGLE_RIGHT_PANE = 'TOGGLE_RIGHT_PANE';\nexport const ADVANCED_ACCORDION_CHANGE = 'ADVANCED_ACCORDION_CHANGE';\nexport const RIGHT_PANE_TAB_CHANGE = 'RIGHT_PANE_TAB_CHANGE';\nexport const CLEAR_FORMS = 'CLEAR_FORMS';\n\nexport interface ToggleAdvancedModeAction {\n  type: typeof TOGGLE_ADVANCED_MODE;\n  value: boolean;\n}\n\nexport interface PaneResizeAction {\n  type: typeof PANE_RESIZE;\n  value: number;\n}\n\nexport interface ToggleRightPaneAction {\n  type: typeof TOGGLE_RIGHT_PANE;\n  value: boolean;\n}\n\nexport interface AdvancedAccordionExpansionAction {\n  type: typeof ADVANCED_ACCORDION_CHANGE;\n  value: number[];\n}\n\nexport interface RightPaneTabChangeAction {\n  type: typeof RIGHT_PANE_TAB_CHANGE;\n  value: number;\n}\n\nexport interface ClearFormsAction {\n  type: typeof CLEAR_FORMS;\n}\n\nexport const toggleAdvancedMode = (value: boolean): ToggleAdvancedModeAction => ({\n  type: TOGGLE_ADVANCED_MODE,\n  value,\n});\n\nexport const updatePaneSize = (value: number): PaneResizeAction => ({\n  type: PANE_RESIZE,\n  value,\n});\n\nexport const toggleRightPane = (value: boolean): ToggleRightPaneAction => ({\n  type: TOGGLE_RIGHT_PANE,\n  value,\n});\n\nexport const updateAdvancedAccordionExpansions = (value: number[]): AdvancedAccordionExpansionAction => ({\n  type: ADVANCED_ACCORDION_CHANGE,\n  value,\n});\n\nexport const updateActiveRightPaneTab = (value: number): RightPaneTabChangeAction => ({\n  type: RIGHT_PANE_TAB_CHANGE,\n  value,\n});\n\nexport const clearForms = (): ClearFormsAction => ({\n  type: CLEAR_FORMS,\n});\n","import React from 'react';\nimport { Alert, AlertIcon, List, ListItem, Box, Link, Text } from '@chakra-ui/react';\nimport { AppState } from '../store/reducers';\nimport { useSelector } from 'react-redux';\nimport { Message } from '../store/model/messageResolver';\nimport { ExternalLinkIcon } from '@chakra-ui/icons';\n\nconst renderMessage = ({ text, level, link }: Message, i: number) => (\n  <ListItem key={i}>\n    <Alert status={level} alignItems=\"flex-start\" style={{ overflowX: 'auto' }}>\n      <AlertIcon flex=\"0 0 1rem\" />\n      {link ? (\n        <>\n          <Link href={link} isExternal>\n            {text}\n          </Link>\n          <Link alignSelf=\"center\" mx={2} href={link} isExternal>\n            <ExternalLinkIcon />\n          </Link>\n        </>\n      ) : (\n        text\n      )}\n    </Alert>\n  </ListItem>\n);\n\nconst Information: React.FC = () => {\n  const messages = useSelector((state: AppState) => state.information.messages);\n  return (\n    <Box display=\"flex\" flex=\"1\" position=\"relative\">\n      <List styleType=\"none\">{messages.map(renderMessage)}</List>\n      <Text position=\"absolute\" bottom={3} left={1} right={1} align=\"center\">\n        An{' '}\n        <Link href=\"https://github.com/vimond/streamlab/\" isExternal textDecoration=\"underline\">\n          open source project\n        </Link>{' '}\n        from{' '}\n        <Link href=\"https://www.vimond.com/vimond-tools\" isExternal textDecoration=\"underline\">\n          Vimond developers\n        </Link>\n        .\n      </Text>\n    </Box>\n  );\n};\n\nexport default Information;\n","import { AppState, BaseAppState } from '../reducers';\nimport { Action } from '../actions';\n\nexport enum MessageLevel {\n  INFO = 'info',\n  SUCCESS = 'success',\n  WARNING = 'warning',\n  ERROR = 'error',\n}\n\nexport type Message = {\n  level: MessageLevel;\n  text: string;\n  link?: string;\n};\n\nexport type MessageRule = {\n  id: string;\n  displayCondition: ({\n    action,\n    prevState,\n    nextState,\n  }: {\n    action: Action;\n    prevState: AppState | undefined;\n    nextState: BaseAppState;\n  }) => boolean;\n  message: Message | ((state: BaseAppState, action: Action) => Message);\n};\n\nexport type MessageResolver = (\n  messageRules: MessageRule[],\n  prevState: AppState | undefined,\n  action: Action,\n  nextState: BaseAppState\n) => Message[];\n\nexport const resolveMessages: MessageResolver = (messageRules, prevState, action, nextState) =>\n  messageRules\n    .filter((rule) => rule.displayCondition({ action, prevState, nextState }))\n    .map((rule) => (typeof rule.message === 'function' ? rule.message(nextState, action) : rule.message));\n","import React from 'react';\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  Badge,\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormLabel,\n  Grid,\n  Input,\n  List,\n  Text,\n} from '@chakra-ui/react';\nimport Header, { Level } from '../components/Header';\nimport { HistoryEntry, SimpleStreamResource } from '../store/model/history';\nimport {\n  deleteHistory,\n  deleteHistoryEntry,\n  deleteUnnamedHistoryEntries,\n  restoreHistoryEntry,\n  selectHistoryEntry,\n  updateSelectedHistoryEntryName,\n} from '../store/actions/history';\nimport {\n  BaseTech,\n  DEFAULT_PLAYER_LOG_LEVEL,\n  detectStreamTechnology,\n  drmTechLabels,\n  DrmTechnology,\n  getLabel,\n  getLogLevelLabel,\n  LabeledTechOption,\n  playerLibraries,\n  Resource,\n  streamTechLabels,\n  StreamTechnology,\n  SubtitlesFormat,\n  subtitlesFormatLabels,\n} from '../store/model/streamDetails';\nimport { AppState } from '../store/reducers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Property } from 'csstype';\nimport { updateAddressBar } from '../store/model/sharing';\n\ntype Header = { id: number; name: string; value: string };\n\nconst formatDate = (isoDate: string) => isoDate.replace(/T/, ' ').substr(0, 16);\n\nconst getStreamTechLabel = ({ url, technology }: Resource<StreamTechnology> | SimpleStreamResource) => {\n  return getLabel(technology === BaseTech.AUTO ? detectStreamTechnology(url) : technology, streamTechLabels);\n};\n\nconst formatLabel = (entry: HistoryEntry) => {\n  if (entry.name) {\n    return entry.name;\n  } else {\n    const { streamResource } = entry.formData.streamDetails;\n    const match = streamResource.url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\n    const hostname = match && match[2];\n    const techLabel = getStreamTechLabel(streamResource);\n    const stream = techLabel.indexOf('stream') < 0 ? ' stream' : '';\n    return `${techLabel}${stream} on ${hostname || '[unknown host]'}`;\n  }\n};\n\nconst HistoryListItem: React.FC<{ entry: HistoryEntry; isSelected: boolean; handleClick: () => void }> = ({\n  entry,\n  isSelected,\n  handleClick,\n}) => (\n  <Box\n    as=\"li\"\n    p={2}\n    cursor=\"pointer\"\n    backgroundColor={isSelected ? 'gray.200' : undefined}\n    _hover={{ backgroundColor: 'gray.100' }}\n    style={{ width: '100%', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}\n    color={entry.name ? undefined : 'gray.500'}\n    onClick={handleClick}\n    title={formatDate(entry.timestamp) + ' ' + formatLabel(entry)}\n  >\n    {entry.error && (\n      <Badge colorScheme=\"red\" mt=\"-0.2em\" title={`This playback attempt failed with an error: ${entry.error.message}`}>\n        Err\n      </Badge>\n    )}{' '}\n    {formatLabel(entry) + (entry.name ? '' : ', ' + formatDate(entry.timestamp))}\n  </Box>\n);\n\nconst isResourcePopulated = (resource: Resource<unknown>) => !!(resource.url || resource.headers.length);\n\nconst userSelectProp: Property.UserSelect = 'text';\n\nconst inputStyle = {\n  userSelect: userSelectProp,\n  backgroundColor: '#F7FAFC',\n  padding: '0.2rem',\n  border: 'none',\n  height: 'auto',\n  marginBottom: '0.2rem',\n};\n\nconst renderHeaderRow = ({ id, name, value }: Header) => (\n  <React.Fragment key={id}>\n    <Input type=\"text\" value={name} isReadOnly style={inputStyle} />\n    <Input type=\"text\" value={value} isReadOnly style={inputStyle} />\n  </React.Fragment>\n);\n\nconst StreamResourceFields: React.FC<{\n  label: string;\n  resource: Resource<StreamTechnology | DrmTechnology | SubtitlesFormat> | SimpleStreamResource;\n  techLabels: LabeledTechOption[];\n}> = ({ label, resource, techLabels }) => (\n  <>\n    <FormLabel justifySelf=\"right\">{label} URL</FormLabel>\n    <Input type=\"url\" value={resource.url} isReadOnly style={inputStyle} />\n    {'useProxy' in resource && resource.useProxy && (\n      <>\n        <FormLabel justifySelf=\"right\">Use proxy</FormLabel>\n        <Checkbox isChecked isReadOnly />\n      </>\n    )}\n    {resource.technology !== BaseTech.AUTO && (\n      <>\n        <FormLabel justifySelf=\"right\">{label} technology</FormLabel>\n        <Input type=\"text\" value={getLabel(resource.technology, techLabels)} isReadOnly style={inputStyle} />\n      </>\n    )}\n    {'headers' in resource && resource.headers.some(({ name, value }) => name || value) ? (\n      <>\n        <FormLabel alignSelf=\"start\" justifySelf=\"right\">\n          {label} headers\n        </FormLabel>\n        <Grid templateColumns=\"1fr 3fr\" gap={2} alignItems=\"center\">\n          {resource.headers.map(renderHeaderRow)}\n        </Grid>\n      </>\n    ) : (\n      ''\n    )}\n  </>\n);\n\nconst FormHistory: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useSelector((state: AppState) => state.history.history);\n  const selectedEntry = useSelector((state: AppState) => state.history.selectedEntry);\n\n  const [isFullClearOpen, setIsFullClearOpen] = React.useState<boolean>(false);\n  const [isClearUnnamedOpen, setIsClearUnnamedOpen] = React.useState<boolean>(false);\n\n  const handleCloseClick = () => {\n    setIsFullClearOpen(false);\n    setIsClearUnnamedOpen(false);\n  };\n  const handleDeleteHistoryClick = () => {\n    handleDeleteHistory();\n    handleCloseClick();\n  };\n  const handleDeleteUnnamedClick = () => {\n    handleDeleteUnnamed();\n    handleCloseClick();\n  };\n  const handleDeleteEntryClick = (entry: HistoryEntry) => dispatch(deleteHistoryEntry(entry));\n  const handleDeleteHistory = () => dispatch(deleteHistory());\n  const handleDeleteUnnamed = () => dispatch(deleteUnnamedHistoryEntries());\n\n  const handleEntryClick = (entry: HistoryEntry) => dispatch(selectHistoryEntry(entry));\n  const handleEntryLabelChange = (evt: React.ChangeEvent<HTMLInputElement>) =>\n    dispatch(updateSelectedHistoryEntryName(evt.target.value));\n  const handleRestoreEntryClick = (entry: HistoryEntry) => {\n    updateAddressBar();\n    return dispatch(restoreHistoryEntry(entry));\n  };\n\n  const cancelFullDeleteRef = React.useRef<HTMLButtonElement>(null);\n  const cancelUnnamedDeleteRef = React.useRef<HTMLButtonElement>(null);\n  return (\n    <Box mx={4}>\n      <Box>\n        <Header level={Level.H4}>Form history</Header>\n        <Text>\n          The form data from each playback attempt is registered in the entries below. Duplicates are listed once with\n          their last playback time. Select for inspection and restoration back into the forms:\n        </Text>\n        {!!history.length && (\n          <List\n            overflowY=\"scroll\"\n            backgroundColor=\"white\"\n            minHeight={32}\n            maxHeight={64}\n            my={2}\n            borderWidth=\"1px\"\n            rounded=\"md\"\n            borderColor=\"gray.400\"\n          >\n            {history\n              .slice(0)\n              .reverse()\n              .map((entry) => (\n                <HistoryListItem\n                  key={entry.timestamp}\n                  entry={entry}\n                  handleClick={() => handleEntryClick(entry)}\n                  isSelected={!!(selectedEntry && entry.timestamp === selectedEntry.timestamp)}\n                />\n              ))}\n          </List>\n        )}\n      </Box>\n      {selectedEntry && (\n        <Box mt={4} p={2} backgroundColor=\"gray.200\" rounded=\"md\" aria-label=\"Form history entry\">\n          <Grid\n            templateColumns={selectedEntry.error ? 'auto auto 1fr' : 'auto 1fr'}\n            gap={4}\n            alignItems=\"center\"\n            title={\n              selectedEntry.error\n                ? `Unsuccessful playback attempt: ${\n                    selectedEntry.error.message || selectedEntry.error.code || selectedEntry.error\n                  }`\n                : undefined\n            }\n          >\n            {selectedEntry.error && (\n              <Badge\n                colorScheme=\"red\"\n                mt=\"-0.2em\"\n                title={`This playback attempt failed with an error: ${selectedEntry.error.message}`}\n              >\n                Err\n              </Badge>\n            )}\n            <Header level={Level.H4}>{formatDate(selectedEntry.timestamp)}</Header>\n            <Input\n              type=\"text\"\n              placeholder=\"Enter a name for this entry\"\n              value={selectedEntry.name}\n              onChange={handleEntryLabelChange}\n              backgroundColor=\"White\"\n            />\n          </Grid>\n          <Text>\n            The details below can be reapplied to the form fields by pressing Restore. Note that fields not included in\n            the stored data will be cleared.\n          </Text>\n          <Grid mt={2} templateColumns=\"auto 1fr\" rowGap={1} columnGap={0} alignItems=\"center\">\n            <StreamResourceFields\n              label=\"Stream\"\n              resource={selectedEntry.formData.streamDetails.streamResource}\n              techLabels={streamTechLabels}\n            />\n            {'drmLicenseResource' in selectedEntry.formData.streamDetails &&\n              isResourcePopulated(selectedEntry.formData.streamDetails.drmLicenseResource) && (\n                <StreamResourceFields\n                  label=\"DRM license\"\n                  resource={{ ...selectedEntry.formData.streamDetails.drmLicenseResource, technology: BaseTech.AUTO }}\n                  techLabels={drmTechLabels}\n                />\n              )}\n            {'drmCertificateResource' in selectedEntry.formData.streamDetails &&\n              isResourcePopulated(selectedEntry.formData.streamDetails.drmCertificateResource) && (\n                <StreamResourceFields\n                  label=\"DRM certificate\"\n                  resource={{\n                    ...selectedEntry.formData.streamDetails.drmCertificateResource,\n                    technology: BaseTech.AUTO,\n                  }}\n                  techLabels={drmTechLabels}\n                />\n              )}\n            {'subtitlesResource' in selectedEntry.formData.streamDetails &&\n              isResourcePopulated(selectedEntry.formData.streamDetails.subtitlesResource) && (\n                <StreamResourceFields\n                  label=\"Subtitles\"\n                  resource={selectedEntry.formData.streamDetails.subtitlesResource}\n                  techLabels={subtitlesFormatLabels}\n                />\n              )}\n            {'playerOptions' in selectedEntry.formData &&\n              selectedEntry.formData.playerOptions &&\n              selectedEntry.formData.playerOptions.showPlaybackMonitor && (\n                <>\n                  <FormLabel justifySelf=\"right\">Show playback monitor</FormLabel>\n                  <Checkbox isChecked isReadOnly />\n                </>\n              )}\n            {'playerOptions' in selectedEntry.formData &&\n              selectedEntry.formData.playerOptions &&\n              selectedEntry.formData.playerOptions.playerLibrary !== 'AUTO' && (\n                <>\n                  <FormLabel justifySelf=\"right\">Player library</FormLabel>\n                  <Input\n                    type=\"text\"\n                    value={playerLibraries[selectedEntry.formData.playerOptions.playerLibrary]}\n                    isReadOnly\n                    style={inputStyle}\n                  />\n                </>\n              )}\n            {'playerOptions' in selectedEntry.formData &&\n              selectedEntry.formData.playerOptions &&\n              selectedEntry.formData.playerOptions.logLevel !== DEFAULT_PLAYER_LOG_LEVEL && (\n                <>\n                  <FormLabel justifySelf=\"right\">Player log level</FormLabel>\n                  <Input\n                    type=\"text\"\n                    value={getLogLevelLabel(selectedEntry.formData.playerOptions.logLevel)}\n                    isReadOnly\n                    style={inputStyle}\n                  />\n                </>\n              )}\n            {'playerOptions' in selectedEntry.formData &&\n              selectedEntry.formData.playerOptions &&\n              selectedEntry.formData.playerOptions.customConfiguration &&\n              selectedEntry.formData.playerOptions.customConfiguration.trim() && (\n                <>\n                  <FormLabel justifySelf=\"right\">Custom configuration</FormLabel>\n                  <Input\n                    type=\"text\"\n                    value={selectedEntry.formData.playerOptions.customConfiguration.trim()}\n                    isReadOnly\n                    style={inputStyle}\n                  />\n                </>\n              )}\n          </Grid>\n          <Flex justify=\"center\" pt={4}>\n            <Button m={2} colorScheme=\"blue\" onClick={() => handleRestoreEntryClick(selectedEntry)}>\n              Restore into forms\n            </Button>\n            <Button m={2} colorScheme=\"red\" onClick={() => handleDeleteEntryClick(selectedEntry)}>\n              Delete from history\n            </Button>\n          </Flex>\n        </Box>\n      )}\n      {!!history.length && (\n        <Flex justify=\"center\" py={1}>\n          <Button m={2} colorScheme=\"red\" variant=\"outline\" onClick={() => setIsClearUnnamedOpen(true)}>\n            Clear unnamed entries\n          </Button>\n          <Button m={2} colorScheme=\"red\" variant=\"outline\" onClick={() => setIsFullClearOpen(true)}>\n            Clear history\n          </Button>\n          <AlertDialog\n            isOpen={isClearUnnamedOpen}\n            leastDestructiveRef={cancelUnnamedDeleteRef}\n            onClose={handleCloseClick}\n          >\n            <AlertDialogOverlay />\n            <AlertDialogContent>\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                Clear unnamed entries\n              </AlertDialogHeader>\n              <AlertDialogBody>\n                <Text>\n                  Are you sure you want to clear all history entries you haven't given a name? You cannot undo this\n                  action afterwards.{' '}\n                </Text>\n                <Text mt={2}>\n                  If you want to keep some entries, give them a name before proceeding with this operation.\n                </Text>\n              </AlertDialogBody>\n              <AlertDialogFooter>\n                <Button ref={cancelUnnamedDeleteRef} onClick={handleCloseClick}>\n                  Cancel\n                </Button>\n                <Button colorScheme=\"red\" onClick={handleDeleteUnnamedClick} ml={3}>\n                  Clear history entries with no name\n                </Button>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialog>\n          <AlertDialog isOpen={isFullClearOpen} leastDestructiveRef={cancelFullDeleteRef} onClose={handleCloseClick}>\n            <AlertDialogOverlay />\n            <AlertDialogContent>\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                Clear forms\n              </AlertDialogHeader>\n              <AlertDialogBody>\n                Are you sure you want to clear all history entries? You cannot undo this action afterwards.\n              </AlertDialogBody>\n              <AlertDialogFooter>\n                <Button ref={cancelFullDeleteRef} onClick={handleCloseClick}>\n                  Cancel\n                </Button>\n                <Button colorScheme=\"red\" onClick={handleDeleteHistoryClick} ml={3}>\n                  Clear history completely\n                </Button>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialog>\n        </Flex>\n      )}\n    </Box>\n  );\n};\n\nexport default FormHistory;\n","import React from 'react';\nimport { Box, Text, Button, useClipboard } from '@chakra-ui/react';\nimport Header, { Level } from '../components/Header';\nimport { AppState } from '../store/reducers';\nimport { PersistibleFormData } from '../store/model/history';\nimport { buildUrlFromState } from '../store/model/sharing';\nimport { useSelector } from 'react-redux';\nimport { CheckIcon, CopyIcon } from '@chakra-ui/icons';\n\n// TODO: Make this a flag being part of the Redux state, comparing with initialState.\n// Also separate the form data from this other props in state slices, in order to avoid excluding props to be serialised.\nconst hasContent = ({ streamDetails, playerOptions, ui }: AppState) => {\n  if (ui.advancedMode) {\n    return (\n      playerOptions.isModified ||\n      [\n        streamDetails.streamResource,\n        streamDetails.drmLicenseResource,\n        streamDetails.drmCertificateResource,\n        streamDetails.subtitlesResource,\n      ].some((resource) => resource.url || resource.headers.some((h) => h.name || h.value) || resource.useProxy)\n    );\n  } else {\n    return !!streamDetails.streamResource.url;\n  }\n};\n\nconst extractPersistibleFormData = (state: AppState): PersistibleFormData | undefined => {\n  if (hasContent(state)) {\n    if (state.ui.advancedMode) {\n      const { supportedDrmTechnologies, ...streamDetails } = state.streamDetails;\n      const { isModified, ...playerOptions } = state.playerOptions;\n      return {\n        streamDetails,\n        playerOptions,\n      };\n    } else {\n      const { headers, useProxy, ...streamResource } = state.streamDetails.streamResource;\n      return {\n        streamDetails: {\n          streamResource,\n        },\n      };\n    }\n  }\n};\n\nconst Sharing: React.FC = () => {\n  const shareState = useSelector((state: AppState) => extractPersistibleFormData(state));\n  const link = shareState ? buildUrlFromState(shareState, document.location) : '';\n  const { onCopy, hasCopied } = useClipboard(link);\n  if (shareState) {\n    return (\n      <Box mx={4}>\n        <Header level={Level.H4}>Share your stream setup</Header>\n        <Text userSelect=\"none\" mb={2}>\n          This Streamlab page, with the{' '}\n          {'playerOptions' in shareState ? 'stream details and player options' : 'stream specified'} to the left\n          pre-filled and ready to be played, can be shared through the following link:\n        </Text>\n        <Text\n          backgroundColor=\"white\"\n          borderRadius=\"md\"\n          cursor=\"text\"\n          p={2}\n          wordBreak=\"break-all\"\n          aria-label=\"Copyable share URL\"\n          aria-readonly\n          role=\"textbox\"\n        >\n          {link}\n        </Text>\n        <Button\n          colorScheme=\"blue\"\n          my={4}\n          mx=\"auto\"\n          display=\"block\"\n          leftIcon={hasCopied ? <CheckIcon /> : <CopyIcon />}\n          onClick={onCopy}\n        >\n          Copy to clipboard\n        </Button>\n        <Text userSelect=\"none\" mt={2}>\n          NOTE: URLs are often tracked/collected by sharing tools and search bots. Be cautious of using this share URL\n          if it contains form details (keys, resource URLs) not meant to be disclosed to other parties.\n        </Text>\n      </Box>\n    );\n  } else {\n    return (\n      <Box mx={4}>\n        <Header level={Level.H4}>Share your stream setup</Header>\n        <Text userSelect=\"none\" mb={2}>\n          When you have filled in stream details and/or set some player options, you can share this page with the full\n          setup in a link appearing here.\n        </Text>\n      </Box>\n    );\n  }\n};\n\nexport default Sharing;\n","import React from 'react';\nimport { Badge, Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/react';\nimport Information from './Information';\nimport FormHistory from './FormHistory';\nimport Sharing from './Sharing';\nimport { AppState } from '../store/reducers';\nimport { updateActiveRightPaneTab } from '../store/actions/ui';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MessageLevel } from '../store/model/messageResolver';\n\nconst Sidebar: React.FC = () => {\n  const dispatch = useDispatch();\n  const activeTabIndex = useSelector((state: AppState) => state.ui.rightPaneActiveTabIndex);\n  const errorMessageCount = useSelector(\n    (state: AppState) => state.information.messages.filter((m) => m.level === MessageLevel.ERROR).length\n  );\n  const handleActiveTabChange = (index: number) => dispatch(updateActiveRightPaneTab(index));\n\n  return (\n    <Tabs\n      flex=\"1 1 auto\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignContent=\"stretch\"\n      isFitted\n      backgroundColor=\"gray.100\"\n      height=\"100vh\"\n      index={activeTabIndex}\n      onChange={handleActiveTabChange}\n    >\n      <TabList flex=\"0 0 auto\" backgroundColor=\"white\">\n        <Tab>\n          Info{' '}\n          {activeTabIndex > 0 && errorMessageCount > 0 && (\n            <Badge ml={2} colorScheme=\"red\" variant=\"solid\">\n              {errorMessageCount}\n            </Badge>\n          )}\n        </Tab>\n        <Tab>History</Tab>\n        <Tab>Sharing</Tab>\n      </TabList>\n      <TabPanels flex=\"1 1 auto\" display=\"flex\" overflowY=\"auto\" outline=\"none\">\n        <TabPanel p={0} aria-label=\"Information panel\" display=\"flex\" flex=\"1\">\n          <Information />\n        </TabPanel>\n        <TabPanel p={0} aria-label=\"Form history panel\" width=\"100%\">\n          <FormHistory />\n        </TabPanel>\n        <TabPanel p={0} aria-label=\"Sharing panel\">\n          <Sharing />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { Box, Button, Flex, FormControl, Input, Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/react';\nimport Header, { Level } from '../components/Header';\nimport { AppState } from '../store/reducers';\nimport { updateStreamDetailsField } from '../store/actions/streamDetails';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AutoTechnology, BaseTech, StreamTechnology } from '../store/model/streamDetails';\nimport { playBasic } from '../store/actions/player';\nimport { updateAddressBar } from '../store/model/sharing';\nimport { ChevronDownIcon } from '@chakra-ui/icons';\n\ntype StreamTech = AutoTechnology<StreamTechnology>;\n\nconst techOptions = [\n  {\n    key: BaseTech.AUTO,\n    label: 'Autodetect stream technology',\n  },\n  {\n    key: StreamTechnology.DASH,\n    label: 'MPEG-DASH',\n  },\n  {\n    key: StreamTechnology.HLS,\n    label: 'HLS',\n  },\n  {\n    key: StreamTechnology.PROGRESSIVE,\n    label: 'Progressive video',\n  },\n];\n\nconst getLabel = (tech: StreamTech) => (techOptions.find(({ key }) => key === tech) || techOptions[0]).label;\n\nconst Basic: React.FC = () => {\n  const streamResource = useSelector((state: AppState) => state.streamDetails.streamResource);\n  const dispatch = useDispatch();\n\n  const handleStreamUrlChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    updateAddressBar();\n    dispatch(\n      updateStreamDetailsField({\n        streamResource: { url: evt.target.value },\n      })\n    );\n  };\n  const handleStreamTechnologyChange = (technology: StreamTech) => {\n    updateAddressBar();\n    dispatch(\n      updateStreamDetailsField({\n        streamResource: { technology },\n      })\n    );\n  };\n  const handlePlay = (evt: React.MouseEvent<HTMLButtonElement>) => {\n    evt.currentTarget.blur(); // Otherwise Replay's Ctrl+Alt+M short cut will be captured as a click on this button.\n    return dispatch(playBasic);\n  };\n  const handleFormSubmit = (evt: React.FormEvent) => {\n    evt.preventDefault();\n    dispatch(playBasic);\n  };\n\n  return (\n    <Box as=\"form\" my={8} onSubmit={handleFormSubmit} aria-label=\"Basic form\">\n      <Header level={Level.H3} fontSize=\"md\" textAlign=\"center\">\n        Test progressive, HLS, MPEG-DASH, or smooth streams:\n      </Header>\n      <FormControl isRequired m={4} width=\"auto\">\n        <Input\n          placeholder=\"Stream URL\"\n          type=\"url\"\n          textAlign=\"center\"\n          value={streamResource.url}\n          onChange={handleStreamUrlChange}\n        />\n      </FormControl>\n      <Flex justify=\"center\" mx={4}>\n        <Menu aria-label=\"Stream technology menu\">\n          {/*\n              // @ts-ignore */}\n          <MenuButton as={Button} rightIcon={<ChevronDownIcon />} flex=\"0 0 none\" ml={2}>\n            {getLabel(streamResource.technology)}\n          </MenuButton>\n          <MenuList>\n            {techOptions.map(({ key, label }) => (\n              <MenuItem key={key} onClick={() => handleStreamTechnologyChange(key)}>\n                {label}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </Menu>\n        <Button colorScheme=\"green\" mx={4} onClick={handlePlay} isDisabled={!streamResource.url}>\n          Play\n        </Button>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Basic;\n","import React from 'react';\nimport { PlaybackSource } from 'vimond-replay/default-player/Replay';\nimport BasicVideoStreamer from 'vimond-replay/video-streamer/basic';\nimport { contentTypes, PlayerLibrary, StreamTechnology } from '../store/model/streamDetails';\nimport ShakaDebugVideoStreamer from 'vimond-replay/video-streamer/shaka-player-debug';\nimport HtmlVideoStreamer from 'vimond-replay/video-streamer/html';\nimport HlsjsVideoStreamer from 'vimond-replay/video-streamer/hlsjs';\nimport RxVideoStreamer from 'vimond-replay/video-streamer/rx-player';\n// @ts-ignore\nimport muxjs from 'mux.js';\n\nexport const isSafari = (userAgent: string) =>\n  userAgent.indexOf('Safari') > 0 && userAgent.indexOf('Chrome') < 0 && userAgent.indexOf('Firefox') < 0;\n\nconst getMatchingVideoStreamer = (\n  source: PlaybackSource | undefined,\n  userAgent: string,\n  playerLibrary: PlayerLibrary | undefined,\n  props: any\n) => {\n  switch (playerLibrary) {\n    case 'HTML':\n      return <HtmlVideoStreamer {...props} />;\n    case 'SHAKA_PLAYER':\n      // @ts-ignore\n      window.muxjs = muxjs;\n      return <ShakaDebugVideoStreamer {...props} />;\n    case 'HLS_JS':\n      return <HlsjsVideoStreamer {...props} />;\n    case 'RX_PLAYER':\n      return <RxVideoStreamer {...props} />;\n    default:\n      const contentType = source && typeof source !== 'string' && 'contentType' in source ? source.contentType : '';\n      switch (contentType) {\n        case contentTypes[StreamTechnology.DASH]:\n          return <ShakaDebugVideoStreamer {...props} />;\n        case contentTypes[StreamTechnology.MSS]:\n          return <RxVideoStreamer {...props} />;\n        case contentTypes[StreamTechnology.HLS]:\n          if (isSafari(userAgent)) {\n            return <HtmlVideoStreamer {...props} />;\n          } else {\n            return <HlsjsVideoStreamer {...props} />;\n          }\n        default:\n          return <BasicVideoStreamer {...props} />;\n      }\n  }\n};\n\ntype Props = {\n  playerLibraryOverride?: PlayerLibrary;\n  source?: PlaybackSource;\n};\n\nconst VideoStreamerResolver: React.FC<Props> = (props) =>\n  getMatchingVideoStreamer(props.source, navigator.userAgent, props.playerLibraryOverride, props);\n\nexport default VideoStreamerResolver;\n","import { Replay } from 'vimond-replay';\nimport React from 'react';\nimport { Box, Text, Flex, Link, Image } from '@chakra-ui/react';\nimport { PlaybackActions, VideoStreamState } from 'vimond-replay/default-player/Replay';\nimport ReplayLogo from '../graphics/replay-logo.svg';\n\nimport { AppState } from '../store/reducers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handlePlayerError, stop } from '../store/actions/player';\nimport VideoStreamerResolver from './VideoStreamerResolver';\n\nconst stickyPlayerControls = {\n  interactionDetector: {\n    inactivityDelay: -1,\n  },\n};\n\nconst onStreamStateChange = (streamState: VideoStreamState) => {\n  // @ts-ignore\n  if (!window.player) {\n    // @ts-ignore\n    window.player = {};\n  }\n  // @ts-ignore\n  if (!window.player.state) {\n    // @ts-ignore\n    window.player.state = {};\n  }\n  for (const [key, value] of Object.entries(streamState)) {\n    // @ts-ignore\n    window.player.state[key] = value;\n  }\n};\n\nconst highlightConsoleStyle = 'font-weight: bold; color: orange;';\nconst normalConsoleStyle = 'font-weight: normal; color: inherit';\n\nconst onPlaybackActionsReady = (actions: PlaybackActions) => {\n  // @ts-ignore\n  window.player = actions;\n  // @ts-ignore\n  window.player.state = {};\n  console.log(`Streamlab v${process.env.REACT_APP_VERSION}`);\n  console.info(\n    'Playback methods and playback state is exposed to a global %cplayer %cobject. Expand for details:',\n    highlightConsoleStyle,\n    normalConsoleStyle\n  );\n  // @ts-ignore\n  console.dir(window.player);\n  console.info(\n    'Start playing a stream. then type e.g. %cplayer.setPosition(123), %cto seek to 02:03, or %cplayer.state.position %cto get the current playback position.',\n    highlightConsoleStyle,\n    normalConsoleStyle,\n    highlightConsoleStyle,\n    normalConsoleStyle\n  );\n};\n\nconst Player: React.FC = () => {\n  const { source, options, playerLibraryOverride } = useSelector((state: AppState) => ({ ...state.player }));\n  const dispatch = useDispatch();\n  const onExit = () => dispatch(stop);\n  const onError = (err: any) => dispatch(handlePlayerError(err));\n\n  return (\n    <Box my={1} p={4} position=\"relative\">\n      <Replay\n        source={source}\n        options={source ? options : { ...options, ...stickyPlayerControls }}\n        onError={onError}\n        onExit={source ? onExit : undefined}\n        onStreamStateChange={onStreamStateChange}\n        onPlaybackActionsReady={onPlaybackActionsReady}\n      >\n        <VideoStreamerResolver playerLibraryOverride={playerLibraryOverride} />\n      </Replay>\n      {!source && (\n        <Flex\n          position=\"absolute\"\n          left={0}\n          right={0}\n          top={0}\n          direction=\"column\"\n          pt={12}\n          alignItems=\"center\"\n          opacity={0.7}\n        >\n          <Text width=\"20%\" mt={6}>\n            <Link href=\"https://vimond.github.io/replay/\" isExternal>\n              <Image src={ReplayLogo} alt=\"Replay\" width=\"8rem\" margin=\"0 auto\" />\n            </Link>\n          </Text>\n          <Text color=\"white\" mt={6}>\n            The{' '}\n            <Link href=\"https://vimond.github.io/replay/\" isExternal style={{ textDecoration: 'underline' }}>\n              open source\n            </Link>{' '}\n            React video player from{' '}\n            <Link href=\"https://vimond.com\" isExternal style={{ textDecoration: 'underline' }}>\n              Vimond\n            </Link>\n            .\n          </Text>\n        </Flex>\n      )}\n    </Box>\n  );\n};\n\nexport default Player;\n","import React from 'react';\nimport Header, { Level } from '../components/Header';\nimport { Flex, FormControl, FormLabel, Switch, Image, Button, Link } from '@chakra-ui/react';\nimport { AppState } from '../store/reducers';\nimport { toggleAdvancedMode, toggleRightPane } from '../store/actions/ui';\nimport { useDispatch, useSelector } from 'react-redux';\nimport StreamlabLogo from '../graphics/streamlab-logo.svg';\nimport { updateAddressBar } from '../store/model/sharing';\n\nconst HeaderBar: React.FC = () => {\n  const advancedMode = useSelector((state: AppState) => state.ui.advancedMode);\n  const isRightPaneExpanded = useSelector((state: AppState) => state.ui.isRightPaneExpanded);\n\n  const dispatch = useDispatch();\n  const handleAdvancedModeChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    updateAddressBar();\n    dispatch(toggleAdvancedMode(evt.target.checked));\n  };\n  const handleRightPaneClick = (evt: React.MouseEvent<HTMLButtonElement>) =>\n    dispatch(toggleRightPane(evt.currentTarget.textContent === '‹' ? true : false));\n\n  return (\n    <Flex direction=\"row\" align=\"center\" backgroundColor=\"gray.200\" flex=\"0 0 auto\">\n      <Header level={Level.H1} flex=\"1 1 auto\" display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <Link href=\"https://github.com/vimond/streamlab\" isExternal>\n          <Image src={StreamlabLogo} alt=\"Streamlab\" width=\"10rem\" opacity={0.8} />\n        </Link>\n      </Header>\n      <FormControl flex=\"0\" p={1} mt={1} display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\">\n        <Switch id=\"advanced-switch\" isChecked={advancedMode} onChange={handleAdvancedModeChange} />\n        <FormLabel ml={2} mt={1} fontSize=\"sm\" htmlFor=\"advanced-switch\">\n          Advanced\n        </FormLabel>\n      </FormControl>\n      <Button\n        width=\"auto\"\n        minWidth=\"auto\"\n        height=\"auto\"\n        flex=\"0\"\n        ml={4}\n        p={1}\n        title={`${isRightPaneExpanded ? 'Collapse' : 'Expand'} sidebar`}\n        onClick={handleRightPaneClick}\n      >\n        {isRightPaneExpanded ? '›' : '‹'}\n      </Button>\n    </Flex>\n  );\n};\n\nexport default HeaderBar;\n","import React, { useEffect } from 'react';\nimport { Box, Flex, ChakraProvider, extendTheme } from '@chakra-ui/react';\nimport Advanced from './panels/Advanced';\nimport Sidebar from './panels/Sidebar';\nimport Basic from './panels/Basic';\nimport Split from 'react-split';\nimport { AppState } from './store/reducers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Player from './panels/Player';\nimport HeaderBar from './panels/HeaderBar';\nimport { updatePaneSize } from './store/actions/ui';\nimport { applyBrowserEnvironment } from './store/actions/streamDetails';\n\nimport 'vimond-replay/index.css';\nimport './App.css';\n\n// Needed for menu dropdown to overlay subsequent items with custom z-index.\nconst theme = extendTheme({\n  components: {\n    Menu: {\n      baseStyle: {\n        list: {\n          zIndex: 5,\n        },\n      },\n    },\n  },\n});\n\nconst gutterStyle = () => ({ backgroundColor: '#E2E8F0', width: '4px' });\n\nconst App: React.FC = () => {\n  const advancedMode = useSelector((state: AppState) => state.ui.advancedMode);\n  const rightPaneWidth = useSelector((state: AppState) => state.ui.rightPaneWidth || 33);\n  const isRightPaneExpanded = useSelector((state: AppState) => state.ui.isRightPaneExpanded);\n  const dispatch = useDispatch();\n  const handlePaneResize = (sizes: number[]) => dispatch(updatePaneSize(sizes[1]));\n\n  useEffect(() => {\n    dispatch(applyBrowserEnvironment(navigator.userAgent, document.location.search));\n  }, [dispatch]);\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Split\n        onDragEnd={handlePaneResize}\n        sizes={[100 - rightPaneWidth, rightPaneWidth]}\n        direction=\"horizontal\"\n        cursor=\"col-resize\"\n        gutterAlign=\"end\"\n        gutterSize={4}\n        gutterStyle={gutterStyle}\n        collapsed={isRightPaneExpanded ? undefined : 1}\n        minSize={isRightPaneExpanded ? 300 : 0}\n        style={{ display: 'flex' }}\n      >\n        <Flex height=\"100vh\" direction=\"column\">\n          <HeaderBar />\n          <Box flex=\"1 1 auto\" overflowY=\"auto\">\n            {advancedMode ? <Advanced /> : <Basic />}\n            <Player />\n          </Box>\n        </Flex>\n        <Sidebar />\n      </Split>\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ADVANCED_ACCORDION_CHANGE,\n  AdvancedAccordionExpansionAction,\n  PANE_RESIZE,\n  PaneResizeAction,\n  RIGHT_PANE_TAB_CHANGE,\n  RightPaneTabChangeAction,\n  TOGGLE_ADVANCED_MODE,\n  TOGGLE_RIGHT_PANE,\n  ToggleAdvancedModeAction,\n  ToggleRightPaneAction,\n} from '../actions/ui';\nimport { HistoryEntryAction, RESTORE_HISTORY_ENTRY } from '../actions/history';\nimport { APPLY_BROWSER_ENVIRONMENT, ApplyBrowserEnvironmentAction } from '../actions/streamDetails';\n\nexport interface UiState {\n  advancedMode: boolean;\n  expandedAdvancedAccordionIndices: number[];\n  rightPaneWidth?: number;\n  isRightPaneExpanded: boolean;\n  rightPaneActiveTabIndex: number;\n}\n\nconst ui = (\n  state: UiState = {\n    advancedMode: false,\n    expandedAdvancedAccordionIndices: [0],\n    rightPaneActiveTabIndex: 0,\n    isRightPaneExpanded: true,\n  },\n  action:\n    | ToggleAdvancedModeAction\n    | PaneResizeAction\n    | ToggleRightPaneAction\n    | AdvancedAccordionExpansionAction\n    | RightPaneTabChangeAction\n    | HistoryEntryAction\n    | ApplyBrowserEnvironmentAction\n) => {\n  switch (action.type) {\n    case APPLY_BROWSER_ENVIRONMENT:\n      if (action.value.urlSetup) {\n        const advancedMode = 'playerOptions' in action.value.urlSetup;\n        const expandedAdvancedAccordionIndices = advancedMode ? [0, 1] : state.expandedAdvancedAccordionIndices; // TODO: Can this be made dynamic?\n        const rightPaneActiveTabIndex = 0;\n        const isRightPaneExpanded = true;\n        return {\n          ...state,\n          advancedMode,\n          expandedAdvancedAccordionIndices,\n          rightPaneActiveTabIndex,\n          isRightPaneExpanded,\n        };\n      } else {\n        return state;\n      }\n    case TOGGLE_ADVANCED_MODE:\n      return {\n        ...state,\n        advancedMode: action.value,\n      };\n    case RESTORE_HISTORY_ENTRY:\n      if ('drmLicenseResource' in action.value.formData.streamDetails) {\n        return {\n          ...state,\n          advancedMode: true,\n        };\n      } else {\n        return state;\n      }\n    case PANE_RESIZE:\n      return {\n        ...state,\n        rightPaneWidth: action.value,\n      };\n    case TOGGLE_RIGHT_PANE:\n      return {\n        ...state,\n        isRightPaneExpanded: action.value,\n      };\n    case ADVANCED_ACCORDION_CHANGE:\n      return {\n        ...state,\n        expandedAdvancedAccordionIndices: action.value,\n      };\n    case RIGHT_PANE_TAB_CHANGE:\n      return {\n        ...state,\n        rightPaneActiveTabIndex: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import {\n  DRM_CERTIFICATE_RESOURCE_FIELD_CHANGE,\n  DRM_LICENSE_RESOURCE_FIELD_CHANGE,\n  APPLY_BROWSER_ENVIRONMENT,\n  applyBrowserEnvironment,\n  START_OFFSET_FIELD_CHANGE,\n  STREAM_RESOURCE_FIELD_CHANGE,\n  StreamDetailsFieldChangeAction,\n  SUBTITLES_RESOURCE_FIELD_CHANGE,\n} from '../actions/streamDetails';\nimport { BaseTech, DrmTechnology, Resource, StreamTechnology, SubtitlesFormat } from '../model/streamDetails';\nimport { HistoryEntryAction, RESTORE_HISTORY_ENTRY } from '../actions/history';\nimport { CLEAR_FORMS, ClearFormsAction } from '../actions/ui';\n\nexport interface StreamDetailsState {\n  streamResource: Resource<StreamTechnology>;\n  drmLicenseResource: Resource<DrmTechnology>;\n  drmCertificateResource: Resource<DrmTechnology>;\n  subtitlesResource: Resource<SubtitlesFormat>;\n  startOffset: number | '';\n  isDrmCertificateApplicable: boolean;\n  supportedDrmTechnologies: DrmTechnology[];\n}\n\nconst initResource = () => ({ url: '', headers: [], useProxy: false, technology: BaseTech.AUTO });\n\nconst initState = (): StreamDetailsState => ({\n  streamResource: initResource(),\n  drmLicenseResource: initResource(),\n  drmCertificateResource: initResource(),\n  subtitlesResource: initResource(),\n  supportedDrmTechnologies: [],\n  isDrmCertificateApplicable: true,\n  startOffset: '',\n});\n\nconst drmSupportsCertificate = (drmType: DrmTechnology | BaseTech | undefined) => drmType !== DrmTechnology.PLAYREADY;\n\nconst streamDetails = (\n  state: StreamDetailsState = initState(),\n  action:\n    | StreamDetailsFieldChangeAction\n    | ReturnType<typeof applyBrowserEnvironment>\n    | HistoryEntryAction\n    | ClearFormsAction\n): StreamDetailsState => {\n  switch (action.type) {\n    case APPLY_BROWSER_ENVIRONMENT:\n      const { supportedDrmTechnologies, urlSetup } = action.value;\n      const technology = supportedDrmTechnologies[0];\n      const isDrmCertificateApplicable = drmSupportsCertificate(technology);\n      if (urlSetup) {\n        const initialState = initState();\n        return {\n          ...initialState,\n          isDrmCertificateApplicable,\n          ...urlSetup.streamDetails,\n          streamResource: {\n            ...initialState.streamResource,\n            ...urlSetup.streamDetails.streamResource,\n          },\n          supportedDrmTechnologies,\n        };\n      } else {\n        return {\n          ...state,\n          supportedDrmTechnologies,\n          isDrmCertificateApplicable,\n          drmLicenseResource: {\n            ...state.drmLicenseResource,\n            technology,\n          },\n          drmCertificateResource: {\n            ...state.drmCertificateResource,\n            technology,\n          },\n        };\n      }\n    case STREAM_RESOURCE_FIELD_CHANGE:\n      return {\n        ...state,\n        streamResource: {\n          ...state.streamResource,\n          ...action.value,\n        },\n      };\n    case DRM_LICENSE_RESOURCE_FIELD_CHANGE:\n      // TODO: Refactor into something nicer.\n      const newStateFromLicenseField = {\n        ...state,\n        isDrmCertificateApplicable: drmSupportsCertificate(action.value.technology),\n        drmLicenseResource: {\n          ...state.drmLicenseResource,\n          ...action.value,\n        },\n      };\n      if ('technology' in action.value && action.value.technology) {\n        return {\n          ...newStateFromLicenseField,\n          drmCertificateResource: {\n            ...state.drmCertificateResource,\n            technology: action.value.technology,\n          },\n        };\n      } else {\n        return newStateFromLicenseField;\n      }\n    case DRM_CERTIFICATE_RESOURCE_FIELD_CHANGE:\n      const newStateFromCertificateField = {\n        ...state,\n        isDrmCertificateApplicable: drmSupportsCertificate(action.value.technology),\n        drmCertificateResource: {\n          ...state.drmCertificateResource,\n          ...action.value,\n        },\n      };\n      if ('technology' in action.value && action.value.technology != null) {\n        return {\n          ...newStateFromCertificateField,\n          drmLicenseResource: {\n            ...state.drmLicenseResource,\n            technology: action.value.technology,\n          },\n        };\n      } else {\n        return newStateFromCertificateField;\n      }\n    case SUBTITLES_RESOURCE_FIELD_CHANGE:\n      return {\n        ...state,\n        subtitlesResource: {\n          ...state.subtitlesResource,\n          ...action.value,\n        },\n      };\n    case START_OFFSET_FIELD_CHANGE:\n      return {\n        ...state,\n        startOffset: action.value,\n      };\n    case RESTORE_HISTORY_ENTRY: {\n      const initialState = initState();\n      const { supportedDrmTechnologies } = state;\n      return {\n        ...initialState,\n        ...action.value.formData.streamDetails,\n        streamResource: {\n          ...initialState.streamResource,\n          ...action.value.formData.streamDetails.streamResource,\n        },\n        supportedDrmTechnologies,\n      };\n    }\n    case CLEAR_FORMS:\n      return {\n        isDrmCertificateApplicable: state.isDrmCertificateApplicable,\n        supportedDrmTechnologies: state.supportedDrmTechnologies,\n        streamResource: initResource(),\n        drmLicenseResource: {\n          ...initResource(),\n          technology: state.drmLicenseResource.technology,\n        },\n        drmCertificateResource: {\n          ...initResource(),\n          technology: state.drmCertificateResource.technology,\n        },\n        subtitlesResource: initResource(),\n        startOffset: '',\n      };\n    default:\n      return state;\n  }\n};\n\nexport default streamDetails;\n","import { PlaybackSource } from 'vimond-replay/default-player/Replay';\nimport { PlayerConfiguration } from 'vimond-replay';\nimport { PLAY, PLAYER_ERROR, PlayerAction, PlayerErrorAction, STOP } from '../actions/player';\nimport { CLEAR_FORMS, ClearFormsAction } from '../actions/ui';\nimport { PlayerLibrary } from '../model/streamDetails';\n\n// TODO: It seems wrong that the reducer is dependent on player (i.e. UI component) types.\n// Consider having an intermediate type, even if that seems redundant.\n\nexport interface PlayerState {\n  source?: PlaybackSource;\n  options?: PlayerConfiguration;\n  playerLibraryOverride?: PlayerLibrary;\n  error?: Error;\n}\n\nconst initialState = {\n  source: undefined,\n  options: {\n    interactionDetector: {\n      inactivityDelay: -1,\n    },\n  },\n  playerLibraryOverride: undefined,\n};\n\nconst player = (state: PlayerState = initialState, action: PlayerAction | PlayerErrorAction | ClearFormsAction) => {\n  switch (action.type) {\n    case PLAY:\n      const { source, options, playerLibraryOverride } = action.value;\n      return {\n        source,\n        options,\n        playerLibraryOverride,\n      };\n    case STOP:\n    case CLEAR_FORMS:\n      return initialState;\n    case PLAYER_ERROR:\n      return {\n        ...initialState,\n        error: action.error,\n      };\n  }\n  return state;\n};\n\nexport default player;\n","import {\n  PlayerOptionsAction,\n  SET_LOG_LEVEL,\n  SET_PLAYER_CONFIGURATION,\n  SET_PLAYER_LIBRARY,\n  TOGGLE_PLAYBACK_MONITOR,\n} from '../actions/playerOptions';\nimport { DEFAULT_PLAYER_LOG_LEVEL, PlayerLibrary, PlayerLogLevel } from '../model/streamDetails';\nimport { HistoryEntryAction, RESTORE_HISTORY_ENTRY } from '../actions/history';\nimport { CLEAR_FORMS, ClearFormsAction } from '../actions/ui';\nimport { IsModifiedBaseState } from './index';\nimport { APPLY_BROWSER_ENVIRONMENT, ApplyBrowserEnvironmentAction } from '../actions/streamDetails';\n\nexport interface PlayerOptionsState extends IsModifiedBaseState {\n  logLevel: PlayerLogLevel;\n  showPlaybackMonitor: boolean;\n  customConfiguration: string;\n  playerLibrary: PlayerLibrary;\n}\n\nconst initialState = {\n  logLevel: DEFAULT_PLAYER_LOG_LEVEL,\n  showPlaybackMonitor: false,\n  customConfiguration: '',\n  playerLibrary: 'AUTO' as PlayerLibrary,\n  isModified: false,\n};\n\nconst isInitialState = ({ logLevel, showPlaybackMonitor, customConfiguration, playerLibrary }: PlayerOptionsState) =>\n  logLevel === initialState.logLevel &&\n  showPlaybackMonitor === initialState.showPlaybackMonitor &&\n  customConfiguration === initialState.customConfiguration &&\n  playerLibrary === initialState.playerLibrary;\n\nconst playerOptions = (\n  state: PlayerOptionsState = initialState,\n  action: PlayerOptionsAction | HistoryEntryAction | ClearFormsAction | ApplyBrowserEnvironmentAction\n): PlayerOptionsState => {\n  switch (action.type) {\n    case APPLY_BROWSER_ENVIRONMENT:\n      if (\n        action.value.urlSetup &&\n        'playerOptions' in action.value.urlSetup &&\n        action.value.urlSetup.playerOptions &&\n        Object.keys(action.value.urlSetup.playerOptions).length >= 0\n      ) {\n        return {\n          ...state,\n          ...action.value.urlSetup.playerOptions,\n          isModified: !isInitialState({\n            ...state,\n            ...action.value.urlSetup.playerOptions,\n          }),\n        };\n      } else {\n        return state;\n      }\n    case SET_LOG_LEVEL:\n      return {\n        ...state,\n        logLevel: action.value,\n        isModified: !isInitialState({ ...state, logLevel: action.value }),\n      };\n    case SET_PLAYER_LIBRARY:\n      return {\n        ...state,\n        playerLibrary: action.value,\n        isModified: !isInitialState({ ...state, playerLibrary: action.value }),\n      };\n    case TOGGLE_PLAYBACK_MONITOR:\n      return {\n        ...state,\n        showPlaybackMonitor: action.value,\n        isModified: !isInitialState({ ...state, showPlaybackMonitor: action.value }),\n      };\n    case SET_PLAYER_CONFIGURATION:\n      return {\n        ...state,\n        customConfiguration: action.value,\n        isModified: !isInitialState({ ...state, customConfiguration: action.value }),\n      };\n    case CLEAR_FORMS:\n      return initialState;\n    case RESTORE_HISTORY_ENTRY:\n      if ('playerOptions' in action.value.formData) {\n        const { playerOptions } = action.value.formData;\n        if (playerOptions) {\n          return {\n            ...playerOptions,\n            isModified: !isInitialState({ ...playerOptions, isModified: false }),\n          };\n        }\n      }\n    // eslint-disable no-fallthrough\n    default:\n      return state;\n  }\n};\n\nexport default playerOptions;\n","import { PlayerOptionsState } from '../reducers/playerOptions';\nimport { AutoTechnology, StreamTechnology } from './streamDetails';\nimport { StreamDetailsState } from '../reducers/streamDetails';\n\ntype HistoryEntryBase = {\n  timestamp: string;\n  error?: any;\n  name: string;\n};\n\nexport type SimpleStreamResource = {\n  url: string;\n  technology: AutoTechnology<StreamTechnology>;\n};\n\nexport type SimplePersistableFormData = {\n  streamDetails: {\n    streamResource: SimpleStreamResource;\n  };\n};\n\nexport type AdvancedPersistableFormData = {\n  streamDetails: Omit<StreamDetailsState, 'supportedDrmTechnologies'>;\n  playerOptions?: Omit<PlayerOptionsState, 'isModified'>;\n};\n\nexport type PersistibleFormData = SimplePersistableFormData | AdvancedPersistableFormData;\n\nexport type BasicHistoryEntry = HistoryEntryBase & {\n  formData: SimplePersistableFormData;\n};\n\nexport type AdvancedHistoryEntry = HistoryEntryBase & {\n  formData: AdvancedPersistableFormData;\n};\n\nexport type HistoryEntry = BasicHistoryEntry | AdvancedHistoryEntry;\n\n// NaN, null, '', undefined, [] values should be ignored.\nconst hasValue = ([key, value]: [string, unknown]) =>\n  !(\n    value == null ||\n    value === '' ||\n    (Array.isArray(value) && value.length === 0) ||\n    (typeof value === 'number' && Number.isNaN(value))\n  );\n\nconst sortByKey = ([a]: [string, unknown], [b]: [string, unknown]) => a.localeCompare(b, 'en-US');\n\n// @ts-ignore Object (indexed property) type guards for the unknown type appears to not be supported.\nconst isObject = (obj: unknown) => obj != null && obj.constructor === {}.constructor;\n\nexport const isDeepEqual = (a: unknown, b: unknown): boolean => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length === b.length) {\n      for (let i = a.length; i--; ) {\n        if (!isDeepEqual(a[i], b[i])) return false;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  } else if (isObject(a) && isObject(b)) {\n    // @ts-ignore Object (indexed property) type guards for the unknown type appears to not be supported.\n    const entriesA = Object.entries(a).filter(hasValue).sort(sortByKey);\n    // @ts-ignore\n    const entriesB = Object.entries(b).filter(hasValue).sort(sortByKey);\n    if (entriesA.length !== entriesB.length) {\n      return false;\n    }\n    for (let i = entriesA.length; i--; ) {\n      if (entriesA[i][0] !== entriesB[i][0] || !isDeepEqual(entriesA[i][1], entriesB[i][1])) return false;\n    }\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const addOrUpdateEntry = (entries: HistoryEntry[], newEntry: HistoryEntry) => {\n  const foundIndex = entries.findIndex((e) => isDeepEqual(e.formData, newEntry.formData));\n  if (foundIndex !== -1) {\n    const name = entries[foundIndex].name;\n    const clonedEntries = entries.slice(0);\n    clonedEntries.splice(foundIndex, 1);\n    return clonedEntries.concat({\n      ...newEntry,\n      name,\n    });\n  } else {\n    return entries.concat(newEntry);\n  }\n};\n","import { addOrUpdateEntry, HistoryEntry, isDeepEqual } from '../model/history';\nimport {\n  DELETE_HISTORY,\n  DELETE_HISTORY_ENTRY,\n  DELETE_UNNAMED_HISTORY_ENTRIES,\n  DeleteHistoryAction,\n  DeleteUnnamedHistoryEntriesAction,\n  HistoryEntryAction,\n  HistoryEntryFilter,\n  SELECT_HISTORY_ENTRY,\n  SET_HISTORY_LIST_FILTER,\n  SetHistoryFilterAction,\n  UPDATE_HISTORY_ENTRY_NAME,\n  UpdateSelectedHistoryEntryNameAction,\n} from '../actions/history';\nimport { PLAY, PLAYER_ERROR, PlayerAction, PlayerErrorAction } from '../actions/player';\n\nexport interface HistoryState {\n  selectedEntry?: HistoryEntry;\n  history: HistoryEntry[];\n  historyListFilter: HistoryEntryFilter;\n}\n\nconst history = (\n  state: HistoryState = {\n    history: [],\n    historyListFilter: HistoryEntryFilter.BOTH,\n  },\n  action:\n    | HistoryEntryAction\n    | UpdateSelectedHistoryEntryNameAction\n    | DeleteHistoryAction\n    | DeleteUnnamedHistoryEntriesAction\n    | SetHistoryFilterAction\n    | PlayerAction\n    | PlayerErrorAction\n): HistoryState => {\n  switch (action.type) {\n    case SELECT_HISTORY_ENTRY:\n      if (state.selectedEntry && state.selectedEntry.timestamp === action.value.timestamp) {\n        return {\n          ...state,\n          selectedEntry: undefined,\n        };\n      } else {\n        return {\n          ...state,\n          selectedEntry: action.value,\n        };\n      }\n    case UPDATE_HISTORY_ENTRY_NAME:\n      if (state.selectedEntry) {\n        const history = state.history.slice(0);\n        const replaceIndex = history.findIndex(\n          (entry) => entry.timestamp === (state.selectedEntry && state.selectedEntry.timestamp)\n        );\n        if (replaceIndex !== -1) {\n          history[replaceIndex] = {\n            ...history[replaceIndex],\n            name: action.value,\n          };\n        }\n        return {\n          ...state,\n          history,\n          selectedEntry: {\n            ...state.selectedEntry,\n            name: action.value,\n          },\n        };\n      } else {\n        return state;\n      }\n    case DELETE_HISTORY_ENTRY: {\n      const index = state.history.findIndex((entry) => entry.timestamp === action.value.timestamp);\n      const history = state.history.slice(0);\n      history.splice(index, 1);\n      return {\n        ...state,\n        selectedEntry: undefined,\n        history,\n      };\n    }\n    case DELETE_HISTORY:\n      return {\n        history: [],\n        historyListFilter: state.historyListFilter,\n      };\n    case DELETE_UNNAMED_HISTORY_ENTRIES:\n      return {\n        ...state,\n        selectedEntry: state.selectedEntry && state.selectedEntry.name ? state.selectedEntry : undefined,\n        history: state.history.filter((entry) => entry.name),\n      };\n    case SET_HISTORY_LIST_FILTER:\n      return {\n        ...state,\n        historyListFilter: action.value,\n      };\n    case PLAY: {\n      const history = addOrUpdateEntry(state.history, action.value.historyEntry);\n      const selectedEntry =\n        state.selectedEntry && isDeepEqual(state.selectedEntry.formData, action.value.historyEntry.formData)\n          ? {\n              ...action.value.historyEntry,\n              name: state.selectedEntry.name,\n            }\n          : state.selectedEntry;\n      return {\n        ...state,\n        history,\n        selectedEntry,\n      };\n    }\n    case PLAYER_ERROR: {\n      const prevHistory = state.history;\n      const history = prevHistory.slice(0, prevHistory.length - 1);\n      const latestItem = prevHistory[prevHistory.length - 1];\n      history.push({\n        ...latestItem,\n        error: action.error,\n      });\n      return {\n        ...state,\n        history,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default history;\n","import { AppState, BaseAppState } from './index';\nimport { AnyAction } from 'redux';\nimport { Message, MessageResolver, MessageRule } from '../model/messageResolver';\nimport { REHYDRATE } from 'redux-persist/lib/constants';\n\nexport interface InformationState {\n  messages: Message[];\n}\n\nconst createRootReducerWithInformation = (rules: MessageRule[], messageResolver: MessageResolver) => (\n  prevState: AppState | undefined,\n  action: AnyAction,\n  nextState: BaseAppState\n): AppState => {\n  if (action.type === REHYDRATE) {\n    return {\n      ...nextState,\n      ...action.payload,\n      information: {\n        messages: messageResolver(rules, prevState, action, { ...nextState, ...action.payload }),\n      },\n    };\n  } else {\n    return {\n      ...nextState,\n      information: {\n        messages: messageResolver(rules, prevState, action, nextState),\n      },\n    };\n  }\n};\n\nexport default createRootReducerWithInformation;\n","import hlsjs from 'hls.js';\n// @ts-ignore\nimport shaka from 'shaka-player/dist/shaka-player.compiled';\nimport RxPlayer from 'rx-player';\nimport { MessageLevel, MessageRule } from './messageResolver';\nimport {\n  BaseTech,\n  detectStreamTechnology,\n  detectStreamType,\n  detectSubtitlesFormat,\n  drmTechLabels,\n  DrmTechnology,\n  getLabel,\n  playerLibraries,\n  PlayerLibrary,\n  Resource,\n  streamTechLabels,\n  StreamTechnology,\n  SubtitlesFormat,\n  subtitlesFormatLabels,\n} from './streamDetails';\nimport { PLAYER_ERROR } from '../actions/player';\nimport { APPLY_BROWSER_ENVIRONMENT } from '../actions/streamDetails';\nimport { BaseAppState } from '../reducers';\n\nconst playerLibraryDescriptions = {\n  AUTO: { label: '', link: undefined },\n  SHAKA_PLAYER: {\n    label: `the Shaka Player ${shaka.Player.version} library`,\n    link: 'https://github.com/google/shaka-player',\n  },\n  HLS_JS: { label: `the HLS.js v${hlsjs.version} library`, link: 'https://github.com/video-dev/hls.js' },\n  RX_PLAYER: { label: `the RxPlayer v${RxPlayer.version} library`, link: 'https://github.com/canalplus/rx-player' },\n  HTML: {\n    label: \"the browser's native support through the HTML <video> element\",\n    link: 'https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video',\n  },\n  HLS_SAFARI: {\n    label: \"Safari's native HLS support through HTML video element\",\n    link: 'https://developer.apple.com/documentation/webkit/delivering_video_content_for_safari',\n  },\n};\n\nconst streamTechnologyToLibMappings = {\n  [BaseTech.AUTO]: 'AUTO',\n  [StreamTechnology.DASH]: 'SHAKA_PLAYER',\n  [StreamTechnology.HLS]: 'HLS_JS',\n  [StreamTechnology.MSS]: 'RX_PLAYER',\n  [StreamTechnology.PROGRESSIVE]: 'HTML',\n};\n\nconst compatibleStreamTechnologies = {\n  SHAKA_PLAYER: [StreamTechnology.DASH, StreamTechnology.HLS],\n  HLS_JS: [StreamTechnology.HLS],\n  RX_PLAYER: [StreamTechnology.DASH, StreamTechnology.MSS],\n  HTML: [StreamTechnology.PROGRESSIVE],\n  SAFARI: [StreamTechnology.HLS, StreamTechnology.PROGRESSIVE],\n};\n\nconst getStreamTechnology = ({ url, technology }: Resource<StreamTechnology>) =>\n  technology === BaseTech.AUTO ? detectStreamTechnology(url) : technology;\n\nconst getTechProperties = (state: BaseAppState) => {\n  const tech = state.streamDetails.streamResource.technology;\n  const playerLibrary = state.ui.advancedMode ? state.playerOptions.playerLibrary : 'AUTO';\n  const isSafari =\n    state.streamDetails.supportedDrmTechnologies &&\n    state.streamDetails.supportedDrmTechnologies[0] === DrmTechnology.FAIRPLAY; // Not exactly to the point...\n  const technology = tech === BaseTech.AUTO ? detectStreamTechnology(state.streamDetails.streamResource.url) : tech;\n  return {\n    technology,\n    playerLibrary,\n    isSafari,\n  };\n};\n\nconst getPlayerLibraryMessage = (\n  tech: StreamTechnology | undefined,\n  isSafari: boolean,\n  playerLibraryOverride: PlayerLibrary\n) => {\n  const isPlayerLibraryOverridden = playerLibraryOverride && playerLibraryOverride !== 'AUTO';\n  if (tech) {\n    if (isPlayerLibraryOverridden) {\n      const { label, link } = playerLibraryDescriptions[playerLibraryOverride];\n      return {\n        level: MessageLevel.INFO,\n        text: `In Player options, ${label} is selected for playing this stream.`,\n        link,\n      };\n    } else {\n      const safariHls = isSafari && tech === StreamTechnology.HLS;\n      const { label, link } = safariHls\n        ? playerLibraryDescriptions['HLS_SAFARI']\n        : // @ts-ignore\n          playerLibraryDescriptions[streamTechnologyToLibMappings[tech]];\n      return {\n        level: MessageLevel.INFO,\n        text: `The player will use ${label} for playing this stream.`,\n        link,\n      };\n    }\n  } else {\n    return {\n      level: MessageLevel.ERROR,\n      text: isPlayerLibraryOverridden\n        ? `Undetected stream technology. However ${playerLibraryDescriptions[playerLibraryOverride].label} is selected for playing this stream.`\n        : 'Undecided stream technology. Unable to select a playback technology.',\n    };\n  }\n};\n\nconst getLibrary = (state: BaseAppState) => {\n  const { technology, playerLibrary } = getTechProperties(state);\n  if (playerLibrary && playerLibrary !== 'AUTO') {\n    return playerLibrary;\n  } else if (technology) {\n    return streamTechnologyToLibMappings[technology];\n  }\n};\n\nconst isIncompatibleStream = (state: BaseAppState) => {\n  const { playerLibrary, technology, isSafari } = getTechProperties(state);\n  if (playerLibrary && playerLibrary !== 'AUTO' && technology) {\n    if (isSafari && playerLibrary === 'HTML') {\n      return !compatibleStreamTechnologies['SAFARI'].includes(technology);\n    } else {\n      return !compatibleStreamTechnologies[playerLibrary].includes(technology);\n    }\n  }\n  return false;\n};\n\nexport const messages: MessageRule[] = [\n  {\n    id: 'welcome-1',\n    displayCondition: ({ nextState }) =>\n      nextState.streamDetails.streamResource.url === '' && nextState.history.history.length === 0,\n    message: {\n      level: MessageLevel.INFO,\n      text: 'Welcome to Streamlab, created by Vimond developers.',\n      link: 'https://github.com/vimond/streamlab',\n    },\n  },\n  {\n    id: 'share',\n    displayCondition: ({ action }) => action.type === APPLY_BROWSER_ENVIRONMENT && !!action.value.urlSetup,\n    message: {\n      level: MessageLevel.SUCCESS,\n      text:\n        'The shared stream setup found in the URL is now applied to the form to the left. Press Play to try it out.',\n    },\n  },\n  {\n    id: 'start-basic',\n    displayCondition: ({ nextState }) =>\n      nextState.streamDetails.streamResource.url === '' && !nextState.ui.advancedMode,\n    message: {\n      level: MessageLevel.INFO,\n      text: 'Fill in an URL to the stream you want to test, and press Play. Flip the Advanced switch for more options.',\n    },\n  },\n  {\n    id: 'start-advanced',\n    displayCondition: ({ nextState }) => nextState.streamDetails.streamResource.url === '' && nextState.ui.advancedMode,\n    message: {\n      level: MessageLevel.INFO,\n      text:\n        'Fill in an URL to the stream you want to test. Supplement with DRM information if required, ' +\n        'or subtitles file URLs if desired. License requests can have headers added for e.g. authorization.',\n    },\n  },\n  {\n    id: 'pane-resize',\n    displayCondition: ({ nextState }) =>\n      nextState.history.history.length > 0 && nextState.history.history.length < 3 && !nextState.ui.rightPaneWidth,\n    message: {\n      level: MessageLevel.INFO,\n      text:\n        'This pane can be resized by dragging the gutter to the left. Also note the expand/collapse button next to the Advanced toggle.',\n    },\n  },\n  {\n    id: 'basic-play',\n    displayCondition: ({ nextState }) =>\n      nextState.streamDetails.streamResource.technology !== BaseTech.AUTO &&\n      nextState.streamDetails.streamResource.url !== '' &&\n      !nextState.player.source,\n    message: {\n      level: MessageLevel.INFO,\n      text: 'Press Play to load the specified stream URL in the player.',\n    },\n  },\n  {\n    id: 'stream-autodetect',\n    displayCondition: ({ nextState }) =>\n      nextState.streamDetails.streamResource.technology === BaseTech.AUTO &&\n      nextState.streamDetails.streamResource.url !== '',\n    message: (nextState, action) => {\n      const streamType = detectStreamType(nextState.streamDetails.streamResource.url);\n      const opened = action.type === PLAYER_ERROR || nextState.player.source;\n      if (streamType) {\n        return {\n          level: MessageLevel.SUCCESS,\n          text: `Auto detected stream type is ${streamType.label}. ${\n            opened ? '' : 'Press Play to load it into the player.'\n          }`,\n        };\n      } else {\n        return {\n          level: MessageLevel.ERROR,\n          text: `Unable to detect stream type based on URL content. Please select the technology from the dropdown.`,\n        };\n      }\n    },\n  },\n  {\n    id: 'player-lib-support',\n    displayCondition: ({ nextState }) =>\n      (!('error' in nextState.player) || !nextState.player.error) &&\n      nextState.streamDetails.streamResource.url !== '' &&\n      !!getStreamTechnology(nextState.streamDetails.streamResource),\n    message: (nextState, action) => {\n      const { technology, playerLibrary, isSafari } = getTechProperties(nextState);\n      return getPlayerLibraryMessage(technology, isSafari, playerLibrary);\n    },\n  },\n  {\n    id: 'player-lib-unsupported',\n    displayCondition: ({ nextState }) => isIncompatibleStream(nextState),\n    message: (nextState) => {\n      const { technology, playerLibrary } = getTechProperties(nextState);\n      const streamLabel =\n        technology === StreamTechnology.MSS\n          ? 'smooth'\n          : (streamTechLabels.find((l) => l.key === technology) || { key: BaseTech.AUTO, label: 'unknown' }).label;\n      const libLabel = playerLibrary === 'HTML' ? 'this browser' : playerLibraries[playerLibrary];\n      return {\n        level: MessageLevel.WARNING,\n        text: `However, ${libLabel} is not known to be capable of playing ${streamLabel} streams.`,\n      };\n    },\n  },\n  {\n    id: 'limited-rx-player-support',\n    displayCondition: ({ nextState }) =>\n      (!('error' in nextState.player) || !nextState.player.error) &&\n      nextState.streamDetails.streamResource.url !== '' &&\n      getLibrary(nextState) === 'RX_PLAYER',\n    message: {\n      level: MessageLevel.WARNING,\n      text:\n        'Note that the integration with the RxPlayer library is not complete, and lacks support for subtitles and controls for bitrate + multiple audio tracks.',\n    },\n  },\n  {\n    id: 'subtitles-autodetect',\n    displayCondition: ({ nextState }) =>\n      nextState.streamDetails.subtitlesResource.technology === BaseTech.AUTO &&\n      nextState.streamDetails.subtitlesResource.url !== '',\n    message: (nextState, action) => {\n      const subtitlesType = detectSubtitlesFormat(nextState.streamDetails.subtitlesResource.url);\n      if (subtitlesType) {\n        return {\n          level: MessageLevel.INFO,\n          text: `Auto detected subtitles type is ${getLabel(subtitlesType, subtitlesFormatLabels)}.`,\n        };\n      } else {\n        return {\n          level: MessageLevel.WARNING,\n          text: `Unable to detect subtitles type based on URL content. Please select the technology from the dropdown.`,\n        };\n      }\n    },\n  },\n  {\n    id: 'subtitles-incompatible',\n    displayCondition: ({ nextState }) =>\n      nextState.streamDetails.subtitlesResource.url !== '' &&\n      (nextState.streamDetails.subtitlesResource.technology === SubtitlesFormat.TTML ||\n        (nextState.streamDetails.subtitlesResource.technology === BaseTech.AUTO &&\n          detectSubtitlesFormat(nextState.streamDetails.subtitlesResource.url) === SubtitlesFormat.TTML)) &&\n      getStreamTechnology(nextState.streamDetails.streamResource) !== StreamTechnology.DASH,\n    message: {\n      level: MessageLevel.WARNING,\n      text: 'The subtitles format, TTML, is only supported for DASH streams through Shaka Player.',\n    },\n  },\n  {\n    id: 'player-error',\n    displayCondition: ({ nextState }) => 'error' in nextState.player,\n    message: (nextState, action) => ({\n      level: MessageLevel.ERROR,\n      text: `Player error: ${\n        'error' in nextState.player && nextState.player.error && nextState.player.error.message\n      }. The full error object is logged to the browser console.`,\n    }),\n  },\n  {\n    id: 'monitor',\n    displayCondition: ({ nextState }) => !!nextState.player.source && !nextState.playerOptions.showPlaybackMonitor,\n    message: {\n      level: MessageLevel.INFO,\n      text: 'Press Ctrl+Alt+M to reveal a panel with all properties of the playback state.',\n    },\n  },\n  {\n    id: 'share-incompatible-drm',\n    displayCondition: ({ nextState, action }) =>\n      !!(\n        action.type === APPLY_BROWSER_ENVIRONMENT &&\n        action.value.urlSetup &&\n        'drmLicenseResource' in action.value.urlSetup.streamDetails &&\n        action.value.urlSetup.streamDetails.drmLicenseResource.url !== '' &&\n        action.value.urlSetup.streamDetails.drmLicenseResource.technology &&\n        nextState.streamDetails.supportedDrmTechnologies.indexOf(\n          action.value.urlSetup.streamDetails.drmLicenseResource.technology\n        ) < 0\n      ),\n    message: {\n      level: MessageLevel.ERROR,\n      text:\n        'The shared link specified an unsupported DRM technology, and can perhaps not be used for playback in this browser. Consider testing it in a diff' +\n        'erent browser.',\n    },\n  },\n  {\n    id: 'drm-auto-detect',\n    displayCondition: ({ nextState }) => nextState.ui.advancedMode,\n    message: (nextState, action) => ({\n      level: MessageLevel.INFO,\n      text: `This browser supports ${(nextState.streamDetails.supportedDrmTechnologies || [])\n        .map((t) => getLabel(t, drmTechLabels))\n        .join(' and ')} for DRM playback.`,\n    }),\n  },\n  {\n    id: 'drm-fairplay-certificate',\n    displayCondition: ({ nextState }) =>\n      nextState.ui.advancedMode &&\n      !!nextState.streamDetails.drmLicenseResource.url &&\n      !nextState.streamDetails.drmCertificateResource.url &&\n      nextState.streamDetails.drmLicenseResource.technology === DrmTechnology.FAIRPLAY,\n    message: {\n      level: MessageLevel.WARNING,\n      text:\n        'When playing a stream with FairPlay DRM encryption, a certificate URL for the content provider needs to be specified.',\n    },\n  },\n  {\n    id: 'drm-widevine-certificate',\n    displayCondition: ({ nextState }) =>\n      nextState.ui.advancedMode &&\n      !!nextState.streamDetails.drmLicenseResource.url &&\n      !nextState.streamDetails.drmCertificateResource.url &&\n      nextState.streamDetails.drmLicenseResource.technology === DrmTechnology.WIDEVINE,\n    message: {\n      level: MessageLevel.INFO,\n      text:\n        \"When no DRM certificate URL is specified, the Widevine service's certificate will be fetched from the same URL as the DRM license. This will appear \" +\n        'in DevTools as two similar requests to the license URL, however the payloads are different.',\n    },\n  },\n  {\n    id: 'player-options-invalid-json',\n    displayCondition: ({ nextState }) => {\n      if (\n        nextState.ui.advancedMode &&\n        nextState.playerOptions.customConfiguration &&\n        nextState.playerOptions.customConfiguration.trim()\n      ) {\n        try {\n          JSON.parse(nextState.playerOptions.customConfiguration);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      } else {\n        return false;\n      }\n    },\n    message: {\n      level: MessageLevel.WARNING,\n      text: 'The player configuration overrides are not specified as valid JSON, and will be ignored.',\n    },\n  },\n];\n","import { AnyAction, combineReducers } from 'redux';\nimport ui from './ui';\nimport streamDetails from './streamDetails';\nimport player from './player';\nimport playerOptions from './playerOptions';\nimport history from './history';\nimport createRootReducerWithInformation, { InformationState } from './information';\nimport { messages } from '../model/messages';\nimport { resolveMessages } from '../model/messageResolver';\n\nconst rootReducer = combineReducers({\n  ui,\n  streamDetails,\n  player,\n  playerOptions,\n  history,\n  information: () => ({}),\n});\n\nconst getRootState = createRootReducerWithInformation(messages, resolveMessages);\n\nexport interface IsModifiedBaseState {\n  isModified: boolean;\n}\n\nexport type BaseAppState = ReturnType<typeof rootReducer>;\nexport type AppState = BaseAppState & { information: InformationState };\n\nexport default (state: AppState | undefined, action: AnyAction) =>\n  getRootState(state, action, rootReducer(state, action));\n","import { createMigrate } from 'redux-persist';\nimport { PlayerOptionsState } from './reducers/playerOptions';\nimport { HistoryState } from './reducers/history';\nimport { HistoryEntry } from './model/history';\n\n// TODO: Make two explicit types in the reducer, instead of Omit<>ing isModified several places.\ntype MigratablePlayerOptions = PlayerOptionsState | Omit<PlayerOptionsState, 'isModified'>;\n\nconst migratePlayerOptionsV1 = (playerOptions?: MigratablePlayerOptions) => ({\n  ...playerOptions,\n  playerLibrary: (playerOptions && playerOptions.playerLibrary) || 'AUTO',\n});\n\nconst migrateHistoryPlayerOptionsV1 = (history: HistoryState): HistoryState => {\n  if (history && history.history) {\n    return {\n      ...history,\n      history: history.history.map((historyEntry: HistoryEntry) => {\n        if ('playerOptions' in historyEntry.formData) {\n          return {\n            ...historyEntry,\n            formData: {\n              ...historyEntry.formData,\n              playerOptions: migratePlayerOptionsV1(historyEntry.formData.playerOptions),\n            },\n          };\n        } else {\n          return historyEntry;\n        }\n      }),\n    };\n  } else {\n    return history;\n  }\n};\n\nconst migrations = {\n  // Looks like type defs are not correct for migrations. Using any :-(\n  1: (state: any) => {\n    if (state) {\n      return {\n        ...state,\n        history: migrateHistoryPlayerOptionsV1(state.history),\n        playerOptions: migratePlayerOptionsV1(state.playerOptions),\n      };\n    } else {\n      return state;\n    }\n  },\n};\n\nexport const migrateConfiguration = {\n  version: 1,\n  migrate: createMigrate(migrations, { debug: true }),\n};\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport rootReducer from './reducers';\nimport { migrateConfiguration } from './migrations';\n\nconst persistConfig = {\n  ...migrateConfiguration,\n  key: 'root',\n  storage,\n  blacklist: ['player', 'information'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\n  const persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport createPersistentStore from './store/persistentStore';\n\nconst { store, persistor } = createPersistentStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}